[{"H:\\REACT\\React-Movie_App-redux\\src\\Api\\Api.tsx":"1","H:\\REACT\\React-Movie_App-redux\\src\\App.test.tsx":"2","H:\\REACT\\React-Movie_App-redux\\src\\App.tsx":"3","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Card.tsx":"4","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Filter.tsx":"5","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\HeroNav.tsx":"6","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\HomePageCard.tsx":"7","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Loader.tsx":"8","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\movieInfoToolTip.tsx":"9","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\NoPesrson.tsx":"10","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Paginator.tsx":"11","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Skeleton.tsx":"12","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\SocialComp.tsx":"13","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Sort.tsx":"14","H:\\REACT\\React-Movie_App-redux\\src\\components\\Footer\\Footer.tsx":"15","H:\\REACT\\React-Movie_App-redux\\src\\components\\FullActorsList\\FullList.tsx":"16","H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\allMedia.tsx":"17","H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\crewstaff.tsx":"18","H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\filterData.tsx":"19","H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\mtchId.tsx":"20","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\FreeToWatch.tsx":"21","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\FreetToWatchNav.tsx":"22","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\Movies.tsx":"23","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\Tv.tsx":"24","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Hero.tsx":"25","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\JoinToday\\JoinToday.tsx":"26","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\LatestTrailers\\Trailers.tsx":"27","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\LatestTrailers\\Videos.tsx":"28","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Movielist.tsx":"29","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\MovielistContainer.tsx":"30","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\ForRent.tsx":"31","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\InTheater.tsx":"32","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\OnTv.tsx":"33","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\Popular.tsx":"34","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\Streaming.tsx":"35","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\Today.tsx":"36","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\TraidingNav.tsx":"37","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\Tranding.tsx":"38","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\Week.tsx":"39","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Upcoming\\Upcoming.tsx":"40","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardActors.tsx":"41","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardHeader.tsx":"42","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardInfo.tsx":"43","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardMedia\\CardMedia.tsx":"44","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardMedia\\CardMediaAll.tsx":"45","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardSocial\\CardSocial.tsx":"46","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardSocial\\CardSocialAll.tsx":"47","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\MovieCardContainer.tsx":"48","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\PopupTrailer.tsx":"49","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\CardPoster.tsx":"50","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\PosterStaffPage.tsx":"51","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffCard.tsx":"52","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffCardMovielist.tsx":"53","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffHeader.tsx":"54","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffKnowFor.tsx":"55","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Recomandations\\CardRecomand.tsx":"56","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovielistHeader\\MovielistHeader.tsx":"57","H:\\REACT\\React-Movie_App-redux\\src\\components\\Movies\\Movies.tsx":"58","H:\\REACT\\React-Movie_App-redux\\src\\components\\Movies\\NowPlaying.tsx":"59","H:\\REACT\\React-Movie_App-redux\\src\\components\\Movies\\Popular.tsx":"60","H:\\REACT\\React-Movie_App-redux\\src\\components\\NaigationBar\\NavBar.tsx":"61","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\ResultsPage.tsx":"62","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SearchResults.tsx":"63","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SearchResultsItems.tsx":"64","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Collections.tsx":"65","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Movie.tsx":"66","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Person.tsx":"67","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Tvs.tsx":"68","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\HomePageReducer.tsx":"69","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\MovieListReducer.tsx":"70","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\PeopleReducer.tsx":"71","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\SearchReducer.tsx":"72","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\HomePageSelector.tsx":"73","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\MovieSelector.tsx":"74","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\PeopleSelector.tsx":"75","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\SearchSelector.tsx":"76","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\store.tsx":"77","H:\\REACT\\React-Movie_App-redux\\src\\Hoc\\withHeaderFooter.tsx":"78","H:\\REACT\\React-Movie_App-redux\\src\\Hoc\\withmovies.tsx":"79","H:\\REACT\\React-Movie_App-redux\\src\\index.tsx":"80","H:\\REACT\\React-Movie_App-redux\\src\\react-app-env.d.ts":"81","H:\\REACT\\React-Movie_App-redux\\src\\reportWebVitals.ts":"82","H:\\REACT\\React-Movie_App-redux\\src\\setupTests.ts":"83","H:\\REACT\\React-Movie_App-redux\\src\\Types\\Types.tsx":"84"},{"size":8649,"mtime":1608841169751,"results":"85","hashOfConfig":"86"},{"size":282,"mtime":1605464448151,"results":"87","hashOfConfig":"86"},{"size":1978,"mtime":1608841169755,"results":"88","hashOfConfig":"86"},{"size":2002,"mtime":1608914453893,"results":"89","hashOfConfig":"86"},{"size":3069,"mtime":1608841169836,"results":"90","hashOfConfig":"86"},{"size":2040,"mtime":1608206827824,"results":"91","hashOfConfig":"86"},{"size":1852,"mtime":1608206827827,"results":"92","hashOfConfig":"86"},{"size":277,"mtime":1605464448197,"results":"93","hashOfConfig":"86"},{"size":1111,"mtime":1607261577119,"results":"94","hashOfConfig":"86"},{"size":223,"mtime":1608841169841,"results":"95","hashOfConfig":"86"},{"size":558,"mtime":1608841169843,"results":"96","hashOfConfig":"86"},{"size":281,"mtime":1608206827828,"results":"97","hashOfConfig":"86"},{"size":1168,"mtime":1607261577117,"results":"98","hashOfConfig":"86"},{"size":2553,"mtime":1608841169845,"results":"99","hashOfConfig":"86"},{"size":2909,"mtime":1608841169852,"results":"100","hashOfConfig":"86"},{"size":167,"mtime":1605979058299,"results":"101","hashOfConfig":"86"},{"size":110,"mtime":1606049378259,"results":"102","hashOfConfig":"86"},{"size":181,"mtime":1605979058300,"results":"103","hashOfConfig":"86"},{"size":385,"mtime":1607261577119,"results":"104","hashOfConfig":"86"},{"size":129,"mtime":1605464448229,"results":"105","hashOfConfig":"86"},{"size":835,"mtime":1607603947340,"results":"106","hashOfConfig":"86"},{"size":1299,"mtime":1607697144179,"results":"107","hashOfConfig":"86"},{"size":1422,"mtime":1608206827844,"results":"108","hashOfConfig":"86"},{"size":1401,"mtime":1608206827847,"results":"109","hashOfConfig":"86"},{"size":2219,"mtime":1608841169856,"results":"110","hashOfConfig":"86"},{"size":1424,"mtime":1608045792018,"results":"111","hashOfConfig":"86"},{"size":2520,"mtime":1608841169857,"results":"112","hashOfConfig":"86"},{"size":1263,"mtime":1608039367257,"results":"113","hashOfConfig":"86"},{"size":2762,"mtime":1607603947371,"results":"114","hashOfConfig":"86"},{"size":2473,"mtime":1608206827857,"results":"115","hashOfConfig":"86"},{"size":1206,"mtime":1608206827859,"results":"116","hashOfConfig":"86"},{"size":1165,"mtime":1608206827861,"results":"117","hashOfConfig":"86"},{"size":1155,"mtime":1608206827872,"results":"118","hashOfConfig":"86"},{"size":1322,"mtime":1608206827874,"results":"119","hashOfConfig":"86"},{"size":1106,"mtime":1608206827876,"results":"120","hashOfConfig":"86"},{"size":1377,"mtime":1608206827879,"results":"121","hashOfConfig":"86"},{"size":1290,"mtime":1608039367262,"results":"122","hashOfConfig":"86"},{"size":790,"mtime":1608841169861,"results":"123","hashOfConfig":"86"},{"size":1374,"mtime":1608206827881,"results":"124","hashOfConfig":"86"},{"size":1426,"mtime":1608476844487,"results":"125","hashOfConfig":"86"},{"size":2793,"mtime":1607261577147,"results":"126","hashOfConfig":"86"},{"size":2271,"mtime":1605979058302,"results":"127","hashOfConfig":"86"},{"size":1765,"mtime":1605979058303,"results":"128","hashOfConfig":"86"},{"size":3220,"mtime":1606062840441,"results":"129","hashOfConfig":"86"},{"size":177,"mtime":1605979058304,"results":"130","hashOfConfig":"86"},{"size":2866,"mtime":1605979058305,"results":"131","hashOfConfig":"86"},{"size":181,"mtime":1605979058306,"results":"132","hashOfConfig":"86"},{"size":3919,"mtime":1607697144192,"results":"133","hashOfConfig":"86"},{"size":1448,"mtime":1607697144195,"results":"134","hashOfConfig":"86"},{"size":6550,"mtime":1607448679965,"results":"135","hashOfConfig":"86"},{"size":1954,"mtime":1607261577753,"results":"136","hashOfConfig":"86"},{"size":3992,"mtime":1607261577846,"results":"137","hashOfConfig":"86"},{"size":1689,"mtime":1607261577903,"results":"138","hashOfConfig":"86"},{"size":1838,"mtime":1607261577987,"results":"139","hashOfConfig":"86"},{"size":33241,"mtime":1607261577988,"results":"140","hashOfConfig":"86"},{"size":1090,"mtime":1605979058311,"results":"141","hashOfConfig":"86"},{"size":186,"mtime":1605464448275,"results":"142","hashOfConfig":"86"},{"size":1065,"mtime":1608841169862,"results":"143","hashOfConfig":"86"},{"size":2234,"mtime":1608914542755,"results":"144","hashOfConfig":"86"},{"size":2217,"mtime":1608919940412,"results":"145","hashOfConfig":"86"},{"size":12440,"mtime":1608919876110,"results":"146","hashOfConfig":"86"},{"size":3465,"mtime":1608841169872,"results":"147","hashOfConfig":"86"},{"size":3672,"mtime":1608841169874,"results":"148","hashOfConfig":"86"},{"size":2588,"mtime":1608841169877,"results":"149","hashOfConfig":"86"},{"size":1908,"mtime":1608841169877,"results":"150","hashOfConfig":"86"},{"size":2003,"mtime":1608841169888,"results":"151","hashOfConfig":"86"},{"size":1882,"mtime":1608841169889,"results":"152","hashOfConfig":"86"},{"size":2001,"mtime":1608841169890,"results":"153","hashOfConfig":"86"},{"size":7327,"mtime":1608913283566,"results":"154","hashOfConfig":"86"},{"size":5920,"mtime":1605979058312,"results":"155","hashOfConfig":"86"},{"size":3125,"mtime":1607261578243,"results":"156","hashOfConfig":"86"},{"size":5210,"mtime":1608841169899,"results":"157","hashOfConfig":"86"},{"size":1065,"mtime":1608841169906,"results":"158","hashOfConfig":"86"},{"size":878,"mtime":1605979058314,"results":"159","hashOfConfig":"86"},{"size":429,"mtime":1607261578383,"results":"160","hashOfConfig":"86"},{"size":815,"mtime":1608476844590,"results":"161","hashOfConfig":"86"},{"size":887,"mtime":1608209632773,"results":"162","hashOfConfig":"86"},{"size":317,"mtime":1605464448151,"results":"163","hashOfConfig":"86"},{"size":1010,"mtime":1605464448151,"results":"164","hashOfConfig":"86"},{"size":759,"mtime":1605464448291,"results":"165","hashOfConfig":"86"},{"size":41,"mtime":1605464448291,"results":"166","hashOfConfig":"86"},{"size":441,"mtime":1605464448291,"results":"167","hashOfConfig":"86"},{"size":246,"mtime":1605464448291,"results":"168","hashOfConfig":"86"},{"size":9350,"mtime":1608841169826,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b2q5qm",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\REACT\\React-Movie_App-redux\\src\\Api\\Api.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\App.test.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\App.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Card.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Filter.tsx",["369"],"import React, { useEffect, useState } from \"react\";\r\nimport { FaChevronRight } from \"react-icons/fa\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BiCalendarEvent } from \"react-icons/bi\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { genresSelector } from \"../Store/Selectors/MovieSelector\";\r\nimport { requestGenres } from \"../Store/Reducers/MovieListReducer\";\r\n\r\nconst Filter = () => {\r\n  const [openSort, setOpenSort] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState<undefined | any>(undefined);\r\n  const [keyword, setKeyword] = useState<string>(\"\");\r\n\r\n  const moviegenres = useSelector((state: AppStateType) =>\r\n    genresSelector(state)\r\n  );\r\n  const dispach = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispach(requestGenres());\r\n  }, []);\r\n\r\n  const showSort = () => {\r\n    setOpenSort(!openSort);\r\n  };\r\n\r\n  const handleDayChange = (day: any) => {\r\n    setSelectedDate(day);\r\n  };\r\n\r\n  const handaleKeyword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n\r\n  const date = new Date(selectedDate).toLocaleDateString();\r\n\r\n  //console.log(date.toLocaleDateString());\r\n  //console.log(moviegenres);\r\n  console.log(keyword);\r\n  console.log(date)\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter__heading\" onClick={showSort}>\r\n        <h3>Filter</h3>\r\n        {openSort ? <FaChevronDown /> : <FaChevronRight />}\r\n      </div>\r\n      {openSort ? (\r\n        <div className=\"filter__body\">\r\n          <div className=\"filter__body__date\">\r\n            <span className=\"heading\">Release Dates</span>\r\n            <div className=\"from\">\r\n              <span>from</span>\r\n              <DayPickerInput onDayChange={handleDayChange} />\r\n              <span className=\"icon\">\r\n                <BiCalendarEvent />\r\n              </span>\r\n            </div>\r\n            <div className=\"to\">\r\n              <span>to</span>\r\n              <DayPickerInput\r\n                value={\"1/12/2021\"}\r\n                onDayChange={handleDayChange}\r\n              />\r\n              <span className=\"icon\">\r\n                <BiCalendarEvent />\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"filter__body__genres\">\r\n            <span className=\"heading\">Genres</span>\r\n            <div>\r\n              {moviegenres.map((movie) => (\r\n                <span key={movie.id}>{movie.name}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"filter__body__keywords\">\r\n            <span className=\"heading\">Keywords</span>\r\n            <div>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Filter by keywords...\"\r\n              onChange={handaleKeyword}\r\n              />\r\n              </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\HeroNav.tsx",["370"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { requestPopularMovies } from \"../Store/Reducers/HomePageReducer\";\r\n\r\ntype PropsType = {\r\n  show: string;\r\n  showValue: (value: string) => void;\r\n};\r\n\r\nconst HeroNav: React.FC<PropsType> = ({ show, showValue}) => {\r\n  //const currentPages = useSelector((state:AppStateType) =>curentPageSelector(state))\r\n  const dispatch = useDispatch();\r\n\r\n  const selectPage = () => {\r\n    dispatch(requestPopularMovies(Math.floor(Math.random() * 20) + 1));\r\n  };\r\n\r\n  return (\r\n    <ul className=\"herowrapnav\">\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"stream\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"stream\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>streming</span>\r\n        </button>\r\n      </li>\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"onTv\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"onTv\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>on tv</span>\r\n        </button>\r\n      </li>\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"rent\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"rent\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>for ret</span>\r\n        </button>\r\n      </li>\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"theater\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"theater\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>in theaters</span>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default HeroNav;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\HomePageCard.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Loader.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\movieInfoToolTip.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\NoPesrson.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Paginator.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Skeleton.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\SocialComp.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Common\\Sort.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Footer\\Footer.tsx",["371","372","373","374","375","376","377","378","379","380","381"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  const slideToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footerwrapp\">\r\n        <div className=\"footerwrapp__movies\">\r\n          <h3>Movies</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <Link to=\"/movies\" className=\"list__link\" onClick={slideToTop}>\r\n                Popular\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Now Playing\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Upcoming\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Top Rated\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footerwrapp__tv\">\r\n          <h3>TV Shows</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Popular\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Airing Today\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                On Tv\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Top Rated\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footerwrapp__people\">\r\n          <h3>People</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Popular People\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footerwrapp__more\">\r\n          <h3>More</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Discutions\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Leaderboard\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Suport\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/\" className=\"logo\">\r\n        MOVIE-APP\r\n      </Link>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\FullActorsList\\FullList.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\allMedia.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\crewstaff.tsx",["382"],"export const crewStaff = (props:any,name: string, arr:[{}]) => {\r\n    props.map((i: { job: string; }) => {\r\n      if (i.job === name) {\r\n        arr.push(i);\r\n      }\r\n    });\r\n  };","H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\filterData.tsx",["383","384"],"\r\n\r\nexport const filterData=(arr1:any,arr2:any,value:string)=>{\r\n    arr1.filter((item:any) =>{\r\n        if(item.media_type === value){\r\n          arr2.push(item)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const filterDepartament=(arr1:any,arr2:any,value:string)=>{\r\n    arr1.filter((item:any) => {\r\n        if(item.department === value){\r\n           arr2.push(item)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Helper\\mtchId.tsx",["385"],"export const matchIdFunc = (array: any[], value: any) => {\r\n  return array.filter((item: { id: any }) => item.id == value);\r\n};\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\FreeToWatch.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\FreetToWatchNav.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\Movies.tsx",["386"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestNowPlaying } from \"../../Store/Reducers/HomePageReducer\";\r\nimport {\r\n  fetchingSelector,\r\n  nowPlayingSelector,\r\n} from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Movies = () => {\r\n  const nowPlayingMovies = useSelector((state: AppStateType) =>\r\n    nowPlayingSelector(state)\r\n  );\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestNowPlaying(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {nowPlayingMovies.map((movie) =>\r\n        fetching ? (\r\n          <Skeleton key={movie.id}/>\r\n        ) : (\r\n          <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n            <Card\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              realese={movie.release_date}\r\n              voteAverage={movie.vote_average}\r\n              name={movie.name}\r\n              firstAirDate={movie.first_air_date}\r\n            />\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\FreeToWatch\\Tv.tsx",["387","388"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\nimport { requestNowTvPlaying } from \"../../Store/Reducers/HomePageReducer\";\r\nimport { fetchingSelector, nowTvPlayingSelector } from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\n\r\nconst Tv = () => {\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n  const nowTvPlaying = useSelector((state: AppStateType) =>\r\n    nowTvPlayingSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestNowTvPlaying(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {nowTvPlaying.map((movie:any)=> \r\n      fetching?<Skeleton key={movie.id}/>:\r\n      /*   <Link to={`movie-card/${movie.id}`} key={movie.id}> */\r\n          <Card key={movie.id}\r\n            poster={movie.poster_path}\r\n            title={movie.name}\r\n            realese={movie.first_air_date}\r\n            voteAverage={movie.vote_average}\r\n            name={movie.name}\r\n            firstAirDate={movie.first_air_date}\r\n          />\r\n        /* </Link> */\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tv;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Hero.tsx",["389"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PopularType } from \"../../Types/Types\";\r\nimport {\r\n  requestSearchMovie,\r\n  requestSearchQuery,\r\n} from \"../Store/Reducers/SearchReducer\";\r\nimport { currentPagesSelector } from \"../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\n\r\ntype PropsType = {\r\n  bgPopular: Array<PopularType>;\r\n};\r\n\r\nconst Hero: React.FC<PropsType> = ({ bgPopular }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchMovie, setSearchMovie] = useState(\"\");\r\n  const currentPage = useSelector((state:AppStateType)=>currentPagesSelector(state))\r\n\r\n  \r\n\r\n  const handldleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchMovie(e.target.value);\r\n    dispatch(requestSearchQuery(e.target.value));\r\n    <Redirect to=\"/sreachresults\" />;\r\n  };\r\n  \r\n\r\n  console.log(searchMovie)\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  const bgImages: Array<string> = bgPopular.map(\r\n    (item) => `${baseUrl}${item.backdrop_path}`\r\n  );\r\n\r\n  const randomImg = bgImages[Math.floor(Math.random() * bgImages.length)];\r\n\r\n  return (\r\n    <div\r\n      className=\"herowrapp__container\"\r\n      style={{\r\n        background: `linear-gradient(to left, rgb(18 65 123 / 65%), rgb(29 101 162)), url(${randomImg}) center center / cover`,\r\n      }}\r\n    >\r\n      <div className=\"hero_heading\">\r\n        <h1 className=\"hero_heading__big\">Welcome.</h1>\r\n        <h3 className=\"hero_heading__subheading\">\r\n          Millions of movies, TV shows and people to discover. Explore now.\r\n        </h3>\r\n      </div>\r\n      <div className=\"searchinput\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie, tv show, person......\"\r\n          value={searchMovie}\r\n          onChange={handldleChange}\r\n        />\r\n        <Link\r\n          to=\"/sreachresults\"\r\n          className=\"btn btn--hero\"\r\n          onClick={() => dispatch(requestSearchMovie(searchMovie,currentPage))}\r\n        >\r\n          Search\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\JoinToday\\JoinToday.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\LatestTrailers\\Trailers.tsx",["390","391"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  homeVideosSelector,\r\n  popularSelector,\r\n} from '../../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../../Store/store';\r\nimport Video from './Videos';\r\nimport {FaPlay} from 'react-icons/fa';\r\nimport {PopularType} from '../../../Types/Types';\r\nimport {requestTrailers} from '../../Store/Reducers/HomePageReducer';\r\n\r\nconst Trailers = () => {\r\n  const [bg, setBg] = useState<PopularType>();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const popular = useSelector((state: AppStateType) => popularSelector(state));\r\n  const trailers = useSelector((state: AppStateType) =>\r\n    homeVideosSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const checkIds = (valueId: number) => {\r\n    popular.find((item) => {\r\n      if (item.id === valueId) {\r\n        setBg(item);\r\n      }\r\n    });\r\n  };\r\n\r\n  const closeModal=()=>{\r\n    setOpenModal(false);\r\n  }\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div\r\n      className=\"trailerswrapp\"\r\n      style={{\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/w500${bg?.backdrop_path})`,\r\n      }}\r\n    >\r\n      <div className=\"videos\">\r\n        <Video trailers={trailers} openModal={openModal} closeModal={closeModal}/>\r\n      </div>\r\n      <div className=\"trailerswrapp__substrate\">\r\n        <h2 className=\"trailerswrapp__substrate__heading\">Latest Trailers</h2>\r\n        <div className=\"videowrap\">\r\n          {popular.map((item) => (\r\n            <div\r\n              className=\"container\"\r\n              key={item.id}\r\n              onMouseEnter={() => checkIds(item.id)}\r\n            >\r\n              <div className=\"container__img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${item.backdrop_path}`}\r\n                  alt=\"poster\"\r\n                />\r\n                <button\r\n                  className=\"btn btn--play\"\r\n                  onClick={() => {\r\n                    dispatch(requestTrailers(item.id));\r\n                    setOpenModal(true);\r\n                  }}\r\n                >\r\n                  <FaPlay />\r\n                </button>\r\n              </div>\r\n              <div className=\"container__title\">\r\n                <span>{item.title}</span>\r\n                <br/>\r\n                <span>Realese Date : {item.release_date}</span>\r\n                </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trailers;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\LatestTrailers\\Videos.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Movielist.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\MovielistContainer.tsx",["392","393"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MovieListType, PopularType, VideoType } from \"../../Types/Types\";\r\nimport { requestMovieList } from \"../Store/Reducers/MovieListReducer\";\r\n\r\nimport {\r\n  isFetchingSelector,\r\n  moviesSelector,\r\n} from \"../Store/Selectors/MovieSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport MovieList from \"./Movielist\";\r\nimport HeroSection from \"./Hero\";\r\nimport Popular from \"./Popular/Popular\";\r\nimport {\r\n  //homeVideosSelector,\r\n  popularSelector,\r\n} from \"../Store/Selectors/HomePageSelector\";\r\nimport {\r\n  requestPopularMovies,\r\n  //requestHomeMovies,\r\n} from \"../Store/Reducers/HomePageReducer\";\r\nimport FreeToWatch from \"./FreeToWatch/FreeToWatch\";\r\nimport Trailers from \"./LatestTrailers/Trailers\";\r\nimport Tranding from \"./Tranding/Tranding\";\r\nimport JoinToday from \"./JoinToday/JoinToday\";\r\nimport Upcoming from \"./Upcoming/Upcoming\";\r\n\r\ntype MapStateToPropsType = {\r\n  movieList: Array<MovieListType>;\r\n  isFetching: boolean;\r\n  movies?: any;\r\n  popularMovies: Array<PopularType>;\r\n  //homeVideo: Array<VideoType>;\r\n};\r\n\r\ntype MapDispatchPropsType = {\r\n  requestMovieList: () => void;\r\n  requestPopularMovies: (pagenr: any) => void;\r\n};\r\n\r\ntype OwnPropsType = {};\r\n\r\ntype PropsType = MapStateToPropsType &\r\n  MapDispatchPropsType &\r\n  OwnPropsType &\r\n  AppStateType;\r\n\r\nclass MovielistContainer extends Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.requestMovieList();\r\n    this.props.requestPopularMovies(Math.floor(Math.random() * 10) + 1);\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props);\r\n    return (\r\n      <>\r\n        <HeroSection bgPopular={this.props.popularMovies} />\r\n        <Popular popularMovies={this.props.popularMovies} />\r\n        <FreeToWatch />\r\n        <Trailers />\r\n        <Tranding />\r\n        <JoinToday />\r\n        <Upcoming />\r\n\r\n        {/* <MovieList\r\n          movieList={this.props.movieList}\r\n          isFetching={this.props.isFetching}\r\n        /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport let mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    movieList: moviesSelector(state),\r\n    isFetching: isFetchingSelector(state),\r\n    popularMovies: popularSelector(state),\r\n  };\r\n};\r\n\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispatchPropsType,\r\n  OwnPropsType,\r\n  AppStateType\r\n>(mapStateToProps, { requestMovieList, requestPopularMovies })(\r\n  MovielistContainer\r\n);\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\ForRent.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\InTheater.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\OnTv.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\Popular.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Popular\\Streaming.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\Today.tsx",["394"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestTraidings } from \"../../Store/Reducers/HomePageReducer\";\r\nimport {\r\n  fetchingSelector,\r\n  traidingsSelector,\r\n} from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Today = () => {\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n\r\n  const traidings = useSelector((state: AppStateType) =>\r\n    traidingsSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestTraidings(\"day\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {traidings.map((movie) =>\r\n        fetching ? (\r\n          <Skeleton key={movie.id}/>\r\n        ) : (\r\n          <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n            <Card\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              name={movie.name}\r\n              firstAirDate={movie.first_air_date}\r\n              realese={movie.release_date}\r\n              voteAverage={movie.vote_average}\r\n            />\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\TraidingNav.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\Tranding.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Tranding\\Week.tsx",["395"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestTraidings } from \"../../Store/Reducers/HomePageReducer\";\r\nimport {\r\n  fetchingSelector,\r\n  traidingsSelector,\r\n} from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Week = () => {\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n  const traidings = useSelector((state: AppStateType) =>\r\n    traidingsSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestTraidings(\"week\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {traidings.map((movie) =>\r\n        fetching ? (\r\n          <Skeleton key={movie.id}/>\r\n        ) : (\r\n          <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n            <Card\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              realese={movie.release_date}\r\n              voteAverage={movie.vote_average}\r\n              name={movie.name}\r\n              firstAirDate={movie.first_air_date}\r\n            />\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Week;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Home\\Upcoming\\Upcoming.tsx",["396"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestUpComing } from \"../../Store/Reducers/HomePageReducer\";\r\nimport { fetchingSelector, upComingSelector } from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Upcoming = () => {\r\n  const upComing = useSelector((state: AppStateType) =>\r\n    upComingSelector(state)\r\n  );\r\n  const fetching = useSelector((state: AppStateType) =>\r\n  fetchingSelector(state)\r\n);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestUpComing(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n\r\nconsole.log(upComing)\r\n\r\n  return (\r\n    <div className=\"upcomingwrapp\">\r\n      <h2>Upcoming</h2>\r\n      <div className=\"cardwrapp\">\r\n      {upComing.map((movie) => fetching?<Skeleton key={movie.id}/>:\r\n        <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n          <Card\r\n            poster={movie.poster_path}\r\n            title={movie.title}\r\n            realese={movie.release_date}\r\n            voteAverage={movie.vote_average}\r\n            name={movie.name}\r\n            firstAirDate={movie.first_air_date}\r\n          />\r\n        </Link>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upcoming;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardActors.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardHeader.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardInfo.tsx",["397"],"import React from \"react\";\r\nimport { KeywordsType, MovieDetailsType } from \"../../Types/Types\";\r\n\r\ntype PropType = {\r\n  details: MovieDetailsType | null;\r\n  keywords: Array<KeywordsType>;\r\n};\r\n\r\nconst CardInfo = ({ details, keywords }: PropType) => {\r\n  return (\r\n    <div className=\"cardInfoWrapp\">\r\n      <ul className=\"cardInfoList\">\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Status</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{details?.status}</span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Original Language</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">\r\n            {details?.spoken_languages.map((l) => l.name)}\r\n          </span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Budget</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{`$${details?.budget}`}</span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Revenue</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{`$${details?.revenue}`}</span>\r\n        </li>\r\n      </ul>\r\n      <div className=\"keywordsWrapp\">\r\n        <h4>Keywords</h4>\r\n        <ul className=\"keywordsWrapp__list\">\r\n          {keywords.map((k) => (\r\n            <li className=\"keywordsWrapp__item\" key={k.id}>\r\n              <a href=\"#\" className=\"keywordsWrapp__link\">\r\n                {k.name}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardMedia\\CardMedia.tsx",["398","399","400","401"],"import React from 'react';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\nimport PlayCircleFilledWhiteRoundedIcon from '@material-ui/icons/PlayCircleFilledWhiteRounded';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {MovieDetailsType, VideoType} from '../../../Types/Types';\r\nimport {allMedia} from '../../Helper/allMedia';\r\n\r\ntype PropsType = {\r\n  details: MovieDetailsType | null;\r\n  videos: Array<VideoType>;\r\n};\r\n\r\nconst CardMedia = ({details, videos}: PropsType) => {\r\n  const allImg: Array<string> = [];\r\n  allMedia(\r\n    details?.belongs_to_collection === null\r\n      ? ''\r\n      : details?.belongs_to_collection.poster_path,\r\n    details?.poster_path,\r\n    allImg\r\n  );\r\n  allMedia(\r\n    details?.belongs_to_collection === null\r\n      ? ''\r\n      : details?.belongs_to_collection.backdrop_path,\r\n    details?.backdrop_path,\r\n    allImg\r\n  );\r\n  const addPrefix = allImg.map(\r\n    (item: string) => `https://image.tmdb.org/t/p/w500${item}`\r\n  );\r\n  const noImg = addPrefix.filter((i) => {\r\n    if (i.includes('.jpg')) return i;\r\n  });\r\n\r\n  return (\r\n    <div className=\"mediaWrapp\">\r\n      <div className=\"mediaWrapp__header\">\r\n        <h3 className=\"mediaWrapp__header-heading\">Media</h3>\r\n        <ul className=\"mediaWrapp__header-list\">\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <Link\r\n              to=\"/allmedia\"\r\n              className=\"mediaWrapp__header-link mediaWrapp__header-link--active\"\r\n            >\r\n              All Media <span>{addPrefix.length + videos.length}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Videos <span>{videos.length}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Backdrops <span>{addPrefix.slice(0, 2).length}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Posters <span>{addPrefix.slice(2, 4).length}</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"mediaWrapp__wrapper\">\r\n        <div className=\"mediaWrapp__wrapper-media\">\r\n          {noImg.reverse().map((item: string, index: number) => (\r\n            <img src={item} alt=\"poster\" key={index} />\r\n          ))}\r\n          {videos.slice(0, 2).map((video) => (\r\n            <div className=\"mediaWrapp__wrapper-videolink\" key={video.id}>\r\n              {' '}\r\n              <a\r\n                className=\"mediaWrapp__wrapper-videolink-link\"\r\n                href={`https://www.youtube.com/watch?v=${video.key}`}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <PlayCircleFilledWhiteRoundedIcon />\r\n              </a>\r\n            </div>\r\n          ))}\r\n          <div>\r\n            <Link to=\"/allmedia\">\r\n              View More <ArrowForwardRoundedIcon />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMedia;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardMedia\\CardMediaAll.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardSocial\\CardSocial.tsx",["402"],"import React from \"react\";\r\nimport StarRateRoundedIcon from \"@material-ui/icons/StarRateRounded\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ResultsType } from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n  reviews: Array<ResultsType>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  })\r\n);\r\nconst CardMedia = ({ reviews }: PropsType) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"socialWrapp\">\r\n      <div className=\"socialWrapp__header\">\r\n        <h3 className=\"socialWrapp__header-heading\">Social</h3>\r\n        <ul className=\"socialWrapp__header-list\">\r\n          <li className=\"socialWrapp__header-item\">\r\n            <Link\r\n              to=\"/allreview\"\r\n              className=\"socialWrapp__header-link socialWrapp__header-link--active\"\r\n            >\r\n              Reviews <span>{reviews.length}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"socialWrapp__header-item\">\r\n            <a href=\"#\" className=\"socialWrapp__header-link\">\r\n              Discussions <span>6</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {reviews.slice(0, 1).map((review) => (\r\n        <div className=\"socialWrapp__reviews\" key={review.id}>\r\n          <div className=\"socialWrapp__reviews-header\">\r\n            <Avatar style={{ marginRight: \"15px\" }} className={classes.large} />\r\n            <div>\r\n              <a href={review.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <h3>\r\n                  A review by {review.author}{\" \"}\r\n                  <span>\r\n                    <StarRateRoundedIcon style={{ fontSize: 20 }} />\r\n                    6.0\r\n                  </span>\r\n                </h3>\r\n              </a>\r\n              <span>\r\n                Written by <b>{review.author}</b> on 4 April 2017\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"socialWrapp__reviews-body\">\r\n            <p>\r\n              {`${review.content.slice(0, 300)}...`}{\" \"}\r\n              <a\r\n                href={review.url}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"socialWrapp__reviews-link\"\r\n              >\r\n                read the rest\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <h4>\r\n        <Link to=\"/allreview/\">Read All Reviews</Link>\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMedia;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\CardSocial\\CardSocialAll.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\MovieCardContainer.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\PopupTrailer.tsx",["403"],"import React from \"react\";\r\nimport { VideoType } from \"../../Types/Types\";\r\nimport {CgClose} from 'react-icons/cg'\r\n \r\ntype StateType = {\r\n  playTrailer: boolean;\r\n};\r\n\r\ntype PropsType = {\r\n  videos: Array<VideoType>;\r\n  playState: StateType;\r\n  closePlay: () => void;\r\n};\r\n\r\nconst PopupTrailer = ({ videos, playState, closePlay }: PropsType) => {\r\n  const trailer = videos.filter((v) => v.type === \"Trailer\");\r\n  const key = trailer.find((t) => {\r\n   if (t.name.includes(\"Trailer\")) {\r\n      return t.key;\r\n    }\r\n  });\r\n\r\n  const width = window.innerWidth;\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          playState.playTrailer\r\n            ? \"popuptrailer popuptrailer--show\"\r\n            : \"popuptrailer\"\r\n        }\r\n      >\r\n        \r\n        <div className=\"popuptrailer__videobox \">\r\n        <div className=\"popuptrailer__header\">\r\n          <button onClick={closePlay} className=\"btn btn--close\">\r\n            <CgClose/>\r\n          </button>\r\n        </div>\r\n          <iframe\r\n            width=\"100%\"\r\n            height={width>900?'700':'500'}\r\n            src={`https://www.youtube.com/embed/${key?.key}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title='movie trailer'\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopupTrailer;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\CardPoster.tsx",["404","405","406","407","408","409"],"import React from \"react\";\r\n\r\nimport FormatListBulletedRoundedIcon from \"@material-ui/icons/FormatListBulletedRounded\";\r\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\r\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\r\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\r\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { CreditsType, GenresType, MovieDetailsType } from \"../../../Types/Types\";\r\nimport { crewStaff } from \"../../Helper/crewstaff\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  details: MovieDetailsType | null;\r\n  original_title: undefined | string;\r\n  release_date: undefined | string;\r\n  original_language: undefined | string;\r\n  genres: undefined | Array<GenresType>;\r\n  runtime: undefined | number;\r\n  popularity: undefined | number;\r\n  overview: undefined | string;\r\n  credits: CreditsType | null;\r\n  handaleplay:()=>void\r\n};\r\n\r\nconst CardPoster = (props: PropsType) => {\r\n  const crew: any = [];\r\n\r\n const voteAvarage = props.details?.vote_average?props.details.vote_average:'';\r\n\r\n\r\n  let votes = voteAvarage.toLocaleString().replace(\".\", \"\");\r\n  if (votes.length < 2) {\r\n    votes = votes + \"0\";\r\n  }\r\n  const voteNumber = parseInt(votes);\r\n\r\n  const trailColorLine=(value:number)=>{\r\n    if(value < 30){\r\n      return '#fd1818'\r\n    }else if(value > 30 && value < 70){\r\n      return '#ffff5d'\r\n    }else{\r\n      return '#50ff50de'\r\n    }\r\n  }\r\n\r\nconst percent = 60\r\n\r\n  if (props.credits?.crew) {\r\n    crewStaff(props.credits?.crew, \"Director\", crew);\r\n    crewStaff(props.credits?.crew, \"Writing\", crew);\r\n    crewStaff(props.credits?.crew, \"Producer\", crew);\r\n  }\r\n\r\n  //console.log(props.credits?.cast.filter(c=> c.known_for_department === \"Acting\"));\r\n  return (\r\n    <div\r\n      className=\"posterWrapp\"\r\n      style={{\r\n        background: `linear-gradient(to left, #7f7f7f9e, black), url(https://image.tmdb.org/t/p/w500/${props.details?.poster_path}) no-repeat`,\r\n      }}\r\n    >\r\n      <div className=\"posterWrapp__img\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500/${props.details?.poster_path}`}\r\n          alt=\"poster\"\r\n        />\r\n      </div>\r\n      <div className=\"posterWrapp__info\">\r\n        <div className=\"posterWrapp__info-heading\">\r\n          <h2>\r\n            {props.original_title}{\" \"}\r\n            <span>({props.release_date?.slice(0, 4)})</span>{\" \"}\r\n          </h2>\r\n          <p>\r\n            {props.release_date?.replaceAll(\"-\", \"/\")} (\r\n            {props.original_language?.toUpperCase()}){\" \"}\r\n            {props.genres?.map((g) => (\r\n              <span key={g.id}>{g.name}</span>\r\n            ))}{\" \"}\r\n            - {props.runtime ? `${Math.ceil(props.runtime / 60)} h` : \"\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"posterWrapp__info-actions\">\r\n          <ul className=\"posterWrapp__info-actions-list\">\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--score\"\r\n              >\r\n                <div>\r\n                  <CircularProgressbar\r\n                    value={voteNumber}\r\n                    text={`${voteNumber}%`}\r\n                    styles={buildStyles({\r\n                      //trail: { stroke: \"#fff\" },\r\n                      textColor: \"#fff\",\r\n                      textSize: \"3rem\",\r\n                      backgroundColor: \"#000\",\r\n                      trailColor: \"#3d543fba\",\r\n                      pathColor: trailColorLine(voteNumber)\r\n                    })}\r\n                  />\r\n                </div>\r\n                User Score\r\n              </a>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <FormatListBulletedRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to create and edit custom lists\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <FavoriteRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to add this movie to your favourite list\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <BookmarkRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to add this movie to your watchlist\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <StarRoundedIcon />\r\n              </a>\r\n              <p className=\"movieCrad__tolltip\">Login to rate this movie</p>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <button \r\n                className=\"btn btn--postertrailer\"\r\n                onClick={props.handaleplay}\r\n              >\r\n                <PlayArrowRoundedIcon /> Play Trailer\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"posterWrapp__info-overview\">\r\n          <p>{props.overview}</p>\r\n        </div>\r\n        <div className=\"posterWrapp__info-cast\">\r\n          <ul className=\"posterWrapp__info-cast-list\">\r\n            {crew.map((c: any) => (\r\n              <li className=\"posterWrapp__info-cast-item\" key={c.credit_id}>\r\n                <Link to={`/posterstaff/${c.id}`} className=\"posterWrapp__info-cast-link\">\r\n                  <p>{c.name}</p>\r\n                  <p>{c.job}</p>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPoster;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\PosterStaffPage.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffCard.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffCardMovielist.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffHeader.tsx",["410","411","412","413","414","415","416","417"],"import React from \"react\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\n\r\nconst StaffHeader = () => {\r\n  return (\r\n    <div className=\"staffheader__wrap\">\r\n      <nav className=\"menuWrapp\">\r\n        <ul className=\"menuWrapp__list\">\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Overview <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>main</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>translations</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>changes</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Media <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n               <a href=\"#\" className='menuWrapp__drop-link'>Profiles</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Fandom <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n                <a href=\"#\" className='menuWrapp__drop-link'>discussions</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Share <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n               <a href=\"#\" className='menuWrapp__drop-link'>share link</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>facebook</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>twitter</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffHeader;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Poster\\StaffKnowFor.tsx",["418","419","420","421","422","423","424","425"],"import React, { useState } from \"react\";\r\nimport { filterData, filterDepartament } from \"../../Helper/filterData\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport {\r\n  AllMediaType,\r\n  CombineCreditsCrewType,\r\n  CombinedCreditsCastType,\r\n} from \"../../../Types/Types\";\r\nimport MovieInfoToolTip from \"../../Common/movieInfoToolTip\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\ntype PropsTypes = {\r\n  combineCrew: Array<CombineCreditsCrewType>;\r\n  combineCast: Array<CombinedCreditsCastType>;\r\n};\r\n\r\nconst StaffKnowFor: React.FC<PropsTypes> = ({ combineCrew, combineCast }) => {\r\n  const [showTip, setShowTip] = useState(\"0\");\r\n  const [selectWriting, setSelectWriting] = useState(false);\r\n  const [selectProd, setSelectProd] = useState(false);\r\n  const [selectActing, setSelectActing] = useState(false);\r\n  const [selectDirecting, setSelectDirecting] = useState(false);\r\n  const [clearAll, setClearAll] = useState(false);\r\n  const [movies, setMovies] = useState<any>([]);\r\n  const [tv, setTv] = useState<any>([]);\r\n  const [showMovieTv, setShowMovieTv] = useState(false);\r\n  const [showDep,setShowDep]=useState(true);\r\n  const [showMovTv,setShowMovTv]=useState(false);\r\n\r\n  const moviesCrew = [] as Array<AllMediaType>;\r\n  const tvShow = [] as Array<AllMediaType>;\r\n  const directing = [] as Array<AllMediaType>;\r\n  const production = [] as Array<AllMediaType>;\r\n  const writing = [] as Array<AllMediaType>;\r\n  const acting = [] as Array<AllMediaType>;\r\n\r\n  filterData(combineCast, acting, \"movie\");\r\n  filterData(combineCrew, moviesCrew, \"movie\");\r\n  filterData(combineCast, tvShow, \"tv\");\r\n  filterData(combineCrew, tvShow, \"tv\");\r\n\r\n  filterDepartament(combineCrew, directing, \"Directing\");\r\n  filterDepartament(combineCrew, production, \"Production\");\r\n  filterDepartament(combineCrew, writing, \"Writing\");\r\n\r\n  const allMedia = [\r\n    ...writing,\r\n    ...directing,\r\n    ...production,\r\n    ...acting,\r\n  ] as Array<AllMediaType>;\r\n\r\n  const nrOfMovies = allMedia.filter(\r\n    (item: any) => item.media_type === \"movie\"\r\n  );\r\n  const nrOfTv = allMedia.filter((item: any) => item.media_type === \"tv\");\r\n\r\n  const showToolTip = (id: string) => {\r\n    setShowTip(id);\r\n  };\r\n\r\n  const hideToolTip = (id: string) => {\r\n    setShowTip((id = \"\"));\r\n  };\r\n\r\n  const showWriting = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(false);\r\n    setSelectProd(true);\r\n    setSelectActing(true);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showProd = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(false);\r\n    setSelectActing(true);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showActing = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(true);\r\n    setSelectActing(false);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showDirecting = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(true);\r\n    setSelectActing(true);\r\n    setSelectDirecting(false);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n\r\n  const clearAllFilter = () => {\r\n    setSelectWriting(false);\r\n    setSelectProd(false);\r\n    setSelectActing(false);\r\n    setSelectDirecting(false);\r\n    setClearAll(false);\r\n    setShowDep(true);\r\n    setShowMovTv(false)\r\n  };\r\n\r\n  const showMovies = (e: any) => {\r\n    e.preventDefault();\r\n    setShowMovieTv(true);\r\n    setShowDep(false);\r\n    setShowMovTv(true);\r\n    setClearAll(true);\r\n    setMovies(\r\n      allMedia.filter((movie: any) => {\r\n        if (movie.media_type === \"movie\") {\r\n          return movie;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const showTvShows = (e: any) => {\r\n    e.preventDefault();\r\n    setShowMovieTv(false);\r\n    setShowDep(false);\r\n    setShowMovTv(true);\r\n    setClearAll(true);\r\n    setTv(\r\n      allMedia.filter((tv: any) => {\r\n        if (tv.media_type === \"tv\") {\r\n          return tv;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  //  console.log(\"D\", directing);\r\n  // console.log(\"P\", production);\r\n  //  console.log(\"A\", acting);\r\n  //  console.log(\"W\", writing);\r\n  return (\r\n    <div className=\"carierwrapp\">\r\n      <div className=\"carierwrapp__header\">\r\n        <ul className=\"menuWrapp__list menuWrapp__list--carier\">\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            {clearAll ? (\r\n              <button className=\"btn btn--clearall\" onClick={clearAllFilter}>\r\n                Clear\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            <span>\r\n              All <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showMovies}>\r\n                {allMedia.slice(0, 1).map((m: any) => (\r\n                  <span key={m.credit_id}>\r\n                    {m.media_type === \"movie\" ? \"Movies\" : \"Movies\"}{\" \"}\r\n                    {nrOfMovies.length}\r\n                  </span>\r\n                ))}\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showTvShows}\r\n              >\r\n                {tvShow.slice(0, 1).map((m) => (\r\n                  <span key={m.credit_id}>\r\n                    {`${m.media_type} Shows`} {nrOfTv.length}\r\n                  </span>\r\n                ))}\r\n              </a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            <span>\r\n              Departament <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showDirecting}\r\n              >\r\n                {directing.slice(0, 1).map((d) => d.department)}{\" \"}\r\n                {directing.length}\r\n              </a>\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showProd}>\r\n                {production.slice(0, 1).map((p) => p.department)}{\" \"}\r\n                {production.length}\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showWriting}\r\n              >\r\n                {writing.length === 0\r\n                  ? \"Writing\"\r\n                  : writing.slice(0, 1).map((p) => p.department)}{\" \"}\r\n                {writing.length}\r\n              </a>\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showActing}>\r\n                {acting\r\n                  .slice(0, 1)\r\n                  .map((p) =>\r\n                    p.character === \"Himself\" ? \"Acting\" : \"Acting\"\r\n                  )}{\" \"}\r\n                {acting.length === 0 ? \"\" : acting.length}\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"carierwrapp__body\">\r\n       <div style={showMovTv?{display:'table',width:'100%'}:{display:'none'}}>\r\n        {showMovieTv ? (\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Directing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Directing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Writing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Writing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Production</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Acting</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Directing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Directing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Writing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Writing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Production</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                            <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n              style={selectWriting ? { display: \"none\" } : { display: \"table\" }}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Acting</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        </div>\r\n        {showDep?\r\n        <TableContainer component={Paper}>\r\n         <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectWriting ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Writing</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {writing.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectDirecting ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Directing</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {directing.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectProd ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Production</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {production.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? movie.release_date\r\n                          : \"---\"\r\n                          ? movie.release_date.slice(0, 4)\r\n                          : \"\"}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectActing ? { display: \"none\" } : { display: \"table\" }}\r\n          >{}\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Acting</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {acting.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"---\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${\r\n                        movie.character ? movie.character : \"Unknown\"\r\n                      }`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>:''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffKnowFor;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\MovieCard\\Recomandations\\CardRecomand.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\MovielistHeader\\MovielistHeader.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Movies\\Movies.tsx",["426","427","428","429","430","431","432","433","434","435","436"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestloadMoreNowPlaying, requestloadMorePopular } from \"../Store/Reducers/HomePageReducer\";\r\nimport { loadMorePopSelector, loadMoreNplSelector } from \"../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport NowPlaying from \"./NowPlaying\";\r\nimport Popular from \"./Popular\";\r\n\r\nconst Movies = () => {\r\n//   const popular = useSelector((state: AppStateType) => loadMorePopSelector(state));\r\n//   const nowPlaying = useSelector((state: AppStateType) => loadMoreNplSelector(state));\r\n//   const dispatch = useDispatch();\r\n  \r\n//   useEffect(() => {\r\n//     dispatch(requestloadMorePopular(1));\r\n//     dispatch(requestloadMoreNowPlaying(1))\r\n// }, []);\r\n\r\n// console.log(nowPlaying);\r\n// console.log(popular);\r\n\r\n \r\n  return (<></>\r\n    // <div className=\"movieswrapp\">\r\n    //   <Popular popular={popular} />\r\n    //   <NowPlaying nowPlaying={nowPlaying} />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Movies\\NowPlaying.tsx",["437","438"],"import React, {  useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport {  useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NowPlayngType } from \"../../Types/Types\";\r\nimport Card from \"../Common/Card\";\r\nimport Filter from \"../Common/Filter\";\r\nimport Sort from \"../Common/Sort\";\r\nimport { requestloadMoreNowPlaying } from \"../Store/Reducers/HomePageReducer\";\r\nimport { loadMoreNplSelector } from \"../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\n\r\n// type Propstype={\r\n//     nowPlaying:Array<NowPlayngType>\r\n// }\r\n\r\nconst NowPlaying:FC = () => {\r\n    const nowPlaying = useSelector((state: AppStateType) => loadMoreNplSelector(state));\r\n    const dispatch = useDispatch();\r\n  const [increment, setIncrement] = useState(3);\r\n\r\n  const loadMore = () => {\r\n    setIncrement((prev) =>  prev +1);\r\n    dispatch(requestloadMoreNowPlaying(increment));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(requestloadMoreNowPlaying(2))\r\n}, []);\r\nconst emptyArray = () => {\r\n  //popular = [];\r\n};\r\n \r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">Now Playing</h1>\r\n      <div className=\"popularwrap\">\r\n        <div className=\"popularwrap__filters\">\r\n          <Sort />\r\n          <Filter />\r\n          <button className=\"btn btn--search_filter\" disabled={true}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className=\"popularwrap__movielist\">\r\n          {nowPlaying.map((p, index) => (\r\n            <Link\r\n              to={`/movie-card/${p.id}`}\r\n              key={index}\r\n              className=\"popularwrap__movielist-link\"\r\n            >\r\n              <Card\r\n                poster={p.poster_path}\r\n                title={p.title}\r\n                voteAverage={p.vote_average}\r\n                realese={p.release_date}\r\n                firstAirDate={p.first_air_date}\r\n                name={p.name}\r\n                emptyArray={emptyArray}\r\n              />\r\n            </Link>\r\n          ))}\r\n          <button className=\"btn btn--loadmore\" onClick={loadMore}>\r\n            LOAD MORE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NowPlaying;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Movies\\Popular.tsx",["439","440","441"],"H:\\REACT\\React-Movie_App-redux\\src\\components\\NaigationBar\\NavBar.tsx",["442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { ImPlus } from \"react-icons/im\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { requestloadMorePopular } from \"../Store/Reducers/HomePageReducer\";\r\n\r\nconst NavBar = () => {\r\n  const [showToolTip, setShowToolTip] = useState(false);\r\n  const [showlang, setShowlang] = useState(false);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const [state, setState] = React.useState<{\r\n    age: string | number;\r\n    name: string;\r\n  }>({\r\n    age: \"\",\r\n    name: \"hai\",\r\n  });\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.name as keyof typeof state;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowToolTip(!showToolTip);\r\n  };\r\n  const showLang = () => {\r\n    setShowlang(!showlang);\r\n  };\r\n\r\n  const showHideNav = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  const screenWidth = window.innerWidth;\r\n\r\n\r\n  // console.log(screenWidth);\r\n  // console.log(showMenu);\r\n\r\n  return (\r\n    <div className=\"navbarwrapp\">\r\n      <div className=\"navbarwrapp__container\">\r\n        <div className=\"navbarwrapp__left\">\r\n          <button onClick={showHideNav} className=\"btn btn--mobile\">\r\n            <span></span>\r\n          </button>\r\n          <div className=\"navbarwrapp__left__logo\">\r\n            <Link to=\"/\">MOVIE-APP</Link>\r\n          </div>\r\n          {screenWidth < 665 && showMenu ? (\r\n            <nav className=\"navbarwrapp__left__navbar navbarwrapp__left__navbar--mobile\">\r\n              <ul className=\"navbarwrapp__left__list navbarwrapp__left__list--mobile\">\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <span className=\"navbarwrapp__left__list__link\">movies</span>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\" >\r\n                      <Link to=\"/movies/popular\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <Link to=\"/movies/nowplaying\" className=\"dropdown-navbar__link\">\r\n                        now playing\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        upcoming\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    tv shows\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        airing today\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        on tv\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    people\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular people\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    more\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        discutions\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        leaderboard\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        suport\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <nav className=\"navbarwrapp__left__navbar \">\r\n            <ul className=\"navbarwrapp__left__list \">\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  movies\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\" >\r\n                    <Link to=\"/movies/popular\" className=\"dropdown-navbar__link\" >\r\n                      popular\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link to='/movies/nowplaying' className=\"dropdown-navbar__link\" >\r\n                      now playing\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      upcoming\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      top rated\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  tv shows\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      popular\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      airing today\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      on tv\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      top rated\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  people\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      popular people\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  more\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      discutions\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      leaderboard\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      suport\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div className=\"navbarwrapp__right\">\r\n          <ul className=\"navbarwrapp__right__list\">\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"navbarwrapp__right__list__link\"\r\n                onClick={handleClick}\r\n              >\r\n                <ImPlus />\r\n              </a>\r\n              {showToolTip ? (\r\n                <div className=\"navbarwrapp__right__tooltip\">\r\n                  <span>\r\n                    Can't find a movie or TV show?\r\n                    <br /> Login to create it.\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <button\r\n                className=\"btn btn--navbar\"\r\n                onClick={showLang}\r\n                style={showlang ? { background: \"white\", color: \"#000\" } : {}}\r\n              >\r\n                EN\r\n              </button>\r\n              {showlang ? (\r\n                <div className=\"navbarwrapp__right__tooltip navbarwrapp__right__tooltip--lang\">\r\n                  <h3>Language Preferences</h3>\r\n                  <FormControl variant=\"filled\" className=\"languageform\">\r\n                    <InputLabel htmlFor=\"filled-age-native-simple\">\r\n                      Language\r\n                    </InputLabel>\r\n                    <Select\r\n                      native\r\n                      value={state.age}\r\n                      onChange={handleChange}\r\n                      inputProps={{\r\n                        name: \"age\",\r\n                        id: \"filled-age-native-simple\",\r\n                      }}\r\n                    >\r\n                      <option aria-label=\"None\" value=\"\" />\r\n                      <option value={10}>Ten</option>\r\n                      <option value={20}>Twenty</option>\r\n                      <option value={30}>Thirty</option>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <a href=\"#\" className=\"navbarwrapp__right__list__link\">\r\n                <span>Login</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <button className=\"btn btn--navbarsearch\">\r\n                <SearchOutlinedIcon\r\n                  style={{ color: \"#1acee0\", fontWeight: \"bold\" }}\r\n                />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\ResultsPage.tsx",["473","474","475"],"import React, { Key, useEffect, useState } from \"react\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport SearchResultsItems from \"./SearchResultsItems\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport {\r\n  currentPagesSelector,\r\n  searchCollectionsSelector,\r\n  searchMoviesQuerySelector,\r\n  searchMoviesSelector,\r\n  searchPeopleSelector,\r\n  searchTvSelector,\r\n  totalPagesSelector,\r\n} from \"../Store/Selectors/SearchSelector\";\r\nimport {\r\n  // requestCurrentPage,\r\n  requestSearchCollections,\r\n  requestSearchMovie,\r\n  requestSearchPeople,\r\n  requestSearchQuery,\r\n  requestSearchTv,\r\n} from \"../Store/Reducers/SearchReducer\";\r\n\r\nconst ResultsPage = () => {\r\n  const [show, setShow] = useState<string>(\"movie\");\r\n  const [newValue, setNewValue] = useState<string>(\"\");\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const movies = useSelector((state: AppStateType) =>\r\n    searchMoviesSelector(state)\r\n  );\r\n  const tv = useSelector((state: AppStateType) => searchTvSelector(state));\r\n  const people = useSelector((state: AppStateType) =>\r\n    searchPeopleSelector(state)\r\n  );\r\n  const collection = useSelector((state: AppStateType) =>\r\n    searchCollectionsSelector(state)\r\n  );\r\n  const currentPage = useSelector((state: AppStateType) =>\r\n    currentPagesSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const showSearchtype = (value: string) => {\r\n    setShow(value);\r\n  };\r\n\r\n  const newSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(requestSearchQuery(e.target.value));\r\n    setNewValue(e.target.value);\r\n  };\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      dispatch(requestSearchMovie(searchQuery, currentPage));\r\n      dispatch(requestSearchTv(searchQuery, currentPage));\r\n      dispatch(requestSearchPeople(searchQuery, currentPage));\r\n      dispatch(requestSearchCollections(searchQuery, currentPage));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchMovie(searchQuery, currentPage));\r\n    dispatch(requestSearchTv(searchQuery, currentPage));\r\n    dispatch(requestSearchPeople(searchQuery, currentPage));\r\n    dispatch(requestSearchCollections(searchQuery, currentPage));\r\n  }, [newValue]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__header\">\r\n        <SearchOutlinedIcon />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie, tv show, person...\"\r\n          value={searchQuery}\r\n          onChange={newSearch}\r\n          onKeyPress={handleKeyDown}\r\n        />\r\n      </div>\r\n      <div className=\"resultspagewrapp\">\r\n        <div className=\"resultspagewrapp__body\">\r\n          <div className=\"resultspagewrapp__body__left\">\r\n            <SearchResults\r\n              query={searchQuery}\r\n              movies={movies?.total_results}\r\n              tv={tv?.total_results}\r\n              person={people?.total_results}\r\n              collections={collection?.total_results}\r\n              showSearchtype={showSearchtype}\r\n            />\r\n          </div>\r\n          <div className=\"resultspagewrapp__body__right\">\r\n            <SearchResultsItems show={show} />\r\n          </div>\r\n        </div>\r\n        <div className=\"paginator\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SearchResults.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SearchResultsItems.tsx",["476","477","478","479","480","481","482","483","484","485","486"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  currentPagesSelector,\r\n  searchCollectionsSelector,\r\n  searchMoviesQuerySelector,\r\n  searchMoviesSelector,\r\n  searchPeopleSelector,\r\n  searchTvSelector,\r\n  totalPagesSelector,\r\n} from \"../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport NoPoster from \"../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport {\r\n  // requestCurrentPage,\r\n  requestSearchMovie,\r\n  requestSearchTv,\r\n} from \"../Store/Reducers/SearchReducer\";\r\nimport Movies from \"./SerachResult/Movie\";\r\nimport Tv from \"./SerachResult/Tvs\";\r\nimport Persons from \"./SerachResult/Person\";\r\nimport Collections from \"./SerachResult/Collections\";\r\n\r\ntype PropsType = {\r\n  // results: Array<SearchType> | undefined;\r\n  show: string;\r\n  // handalePageChange:(e:any,value:number)=>void\r\n  // page:number\r\n};\r\n\r\nconst SearchResultsItems: FC<PropsType> = ({ show }) => {\r\n  const dispatch = useDispatch();\r\n  //dispatch(requestCurrentPage(page));\r\n\r\n  const movies = useSelector((state: AppStateType) =>\r\n    searchMoviesSelector(state)\r\n  );\r\n  const tv = useSelector((state: AppStateType) => searchTvSelector(state));\r\n  const persons = useSelector((state: AppStateType) =>\r\n    searchPeopleSelector(state)\r\n  );\r\n  const collections = useSelector((state: AppStateType) =>\r\n    searchCollectionsSelector(state)\r\n  );\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const currentPage = useSelector((state: AppStateType) =>\r\n    currentPagesSelector(state)\r\n  );\r\n\r\n  //console.log(movies)\r\n  // console.log(collections)\r\n\r\n  return (\r\n    <>\r\n      {show === \"movie\" ? (\r\n        <Movies movies={movies?.results} totalPages={movies?.total_pages} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {show === \"tv\" ? (\r\n        <>\r\n          <Tv movies={tv?.results} totalPages={tv?.total_pages} />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {show === \"person\" ? (\r\n        <>\r\n          <Persons\r\n            persons={persons?.results}\r\n            totalPages={persons?.total_pages}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {show === \"collections\" ? (\r\n        <>\r\n          <Collections\r\n            collections={collections?.results}\r\n            totalPages={collections?.total_pages}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResultsItems;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Collections.tsx",["487","488"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { CollectionType } from \"../../../Types/Types\";\r\nimport NoPoster from \"../../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestSearchCollections } from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Paginator from \"../../Common/Paginator\";\r\ntype PropsType = {\r\n  collections: Array<CollectionType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\nconst Collections: FC<PropsType> = ({ collections, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchCollections(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {collections?.map((collection) => (\r\n        <div className=\"searchresultitems\" key={collection.id}>\r\n          <div className=\"searchresultitems__img\">\r\n            {collection.poster_path === null ? (\r\n              <img src={NoPoster} alt=\"pic\" />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${collection.poster_path}`}\r\n                alt=\"pic\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"searchresultitems__desc\">\r\n            <h4>{collection.name}</h4>\r\n            <p>{collection.overview.slice(0, 150)}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Collections;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Movie.tsx",["489"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { SearchType } from \"../../../Types/Types\";\r\nimport NoPoster from \"../../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginator from \"../../Common/Paginator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestSearchMovie } from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\ntype PropsType = {\r\n  movies: Array<SearchType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\n\r\nconst Movie: FC<PropsType> = ({ movies, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchMovie(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  //console.log(page);\r\n  return (\r\n    <>\r\n      {movies?.map((movie) => (\r\n        <Link to={`/movie-card/${movie.id}`} key={movie.id}>\r\n          <div className=\"searchresultitems\">\r\n            <div className=\"searchresultitems__img\">\r\n              {movie.poster_path === null ? (\r\n                <img src={NoPoster} alt=\"pic\" />\r\n              ) : (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt=\"pic\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"searchresultitems__desc\">\r\n              <h4>{movie.title}</h4>\r\n              <span>{movie.release_date}</span>\r\n              <p>{movie.overview.slice(0, 150)}</p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Person.tsx",["490","491"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { SearchType } from \"../../../Types/Types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoPerson from \"../../Common/NoPesrson\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestSearchPeople } from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Paginator from \"../../Common/Paginator\";\r\ntype PropsType = {\r\n  persons: Array<SearchType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\n\r\nconst Person: FC<PropsType> = ({ persons, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchPeople(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {persons?.map((person) => (\r\n        <div\r\n          className=\"searchresultitems searchresultitems--person\"\r\n          key={person.id}\r\n        >\r\n          <div className=\"searchresultitems__img\">\r\n            {person.profile_path === null ? (\r\n              <NoPerson />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${person.profile_path}`}\r\n                alt=\"pic\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"searchresultitems__desc\">\r\n            <h4>{person.name}</h4>\r\n            <span>{person.known_for_department}</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\SearchResultsPage\\SerachResult\\Tvs.tsx",["492","493","494"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { SearchType } from \"../../../Types/Types\";\r\nimport NoPoster from \"../../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginator from \"../../Common/Paginator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  requestSearchMovie,\r\n  requestSearchTv,\r\n} from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\n// import { requestCurrentPage } from \"../../Store/Reducers/SearchReducer\";\r\ntype PropsType = {\r\n  movies: Array<SearchType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\n\r\nconst Tv: FC<PropsType> = ({ movies, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchTv(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies?.map((movie) => (\r\n        <div className=\"searchresultitems\" key={movie.id}>\r\n          <div className=\"searchresultitems__img\">\r\n            {movie.poster_path === null ? (\r\n              <img src={NoPoster} alt=\"pic\" />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt=\"pic\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"searchresultitems__desc\">\r\n            <h4>{movie.title ? movie.title : movie.name}</h4>\r\n            <span>{movie.release_date}</span>\r\n            <p>{movie.overview.slice(0, 150)}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tv;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\HomePageReducer.tsx",["495"],"import { getHomePgeApi, getMoviesApi, getSearchApi } from \"../../../Api/Api\";\r\nimport {\r\n  NowPlayngType,\r\n  PopularType,\r\n  TraidingsType,\r\n  TVPopularType,\r\n  UpComingType,\r\n  VideoType,\r\n} from \"../../../Types/Types\";\r\n\r\nconst GET_POPULAR_MOVIES = \"GET_POPULAR_MOVIES\";\r\nconst GET_CURRENT_PAGE = \"GET_CURRENT_PAGE\";\r\nconst GET_NOW_PLAYING = \"GET_NOW_PLAYING\";\r\nconst GET_NOW_TVPLAYING = \"GET_NOW_TVPLAYING\";\r\n//const GET_SEARCH_MOVIES = 'GET_SEARCH_MOVIES';\r\nconst GET_TRAILERS = \"GET_TRAILERS\";\r\nconst GET_TREDINGS = \"GET_TREDINGS\";\r\nconst GET_UPCOMING = \"GET_UPCOMING\";\r\nconst FETCHING = \"FETCHING\";\r\nconst LOAD__MORE__POP = \"LOAD__MORE_POP\";\r\nconst LOAD__MORE__NPL = \"LOAD__MORE__NPL\";\r\n\r\nconst initialState = {\r\n  popularMovies: [] as Array<PopularType>,\r\n  currentPage: 1,\r\n  nowPlaying: [] as Array<NowPlayngType>,\r\n  nowTvPlaying: [] as Array<TVPopularType>,\r\n  trailers: [] as Array<VideoType>,\r\n  traidings: [] as Array<TraidingsType>,\r\n  upComing: [] as Array<UpComingType>,\r\n  fetching: true,\r\n  loadMorePop: [] as Array<PopularType>,\r\n  loadMoreNowPl: [] as Array<NowPlayngType>,\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nconst homePageReducer = (\r\n  state = initialState,\r\n  action: any\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case GET_POPULAR_MOVIES: {\r\n      return {\r\n        ...state,\r\n        popularMovies: action.popularMovies,\r\n      };\r\n    }\r\n    case GET_CURRENT_PAGE: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    }\r\n    case GET_NOW_PLAYING: {\r\n      return {\r\n        ...state,\r\n        nowPlaying: action.nowPlaying,\r\n      };\r\n    }\r\n    case GET_NOW_TVPLAYING: {\r\n      return {\r\n        ...state,\r\n        nowTvPlaying: action.nowTvPlaying,\r\n      };\r\n    }\r\n\r\n    case GET_TRAILERS: {\r\n      return {\r\n        ...state,\r\n        trailers: action.trailers,\r\n      };\r\n    }\r\n    case GET_TREDINGS: {\r\n      return {\r\n        ...state,\r\n        traidings: action.traidings,\r\n      };\r\n    }\r\n    case GET_UPCOMING: {\r\n      return {\r\n        ...state,\r\n        upComing: action.upComing,\r\n      };\r\n    }\r\n    case FETCHING: {\r\n      return {\r\n        ...state,\r\n        fetching: action.fetching,\r\n      };\r\n    }\r\n    case LOAD__MORE__POP: {\r\n      \r\n      console.log(state.loadMorePop)\r\n      return {\r\n        ...state,\r\n        loadMorePop: [...state.loadMorePop,...action.loadMorePop]\r\n      };\r\n    }\r\n    case LOAD__MORE__NPL: {\r\n      return {\r\n        ...state,\r\n        loadMoreNowPl: [...state.loadMoreNowPl, ...action.loadMoreNowPl],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Popular Movies\r\ntype GetPopularType = {\r\n  type: typeof GET_POPULAR_MOVIES;\r\n  popularMovies: Array<PopularType>;\r\n};\r\n\r\nexport const getPopularMovies = (\r\n  popularMovies: Array<PopularType>\r\n): GetPopularType => {\r\n  return { type: GET_POPULAR_MOVIES, popularMovies };\r\n};\r\n//\r\ntype GetCurrentPage = {\r\n  type: typeof GET_CURRENT_PAGE;\r\n  currentPage: number;\r\n};\r\n\r\nexport const getCurrentPage = (currentPage: number): GetCurrentPage => {\r\n  return { type: GET_CURRENT_PAGE, currentPage };\r\n};\r\n\r\n//\r\ntype GetNowPlayingtype = {\r\n  type: typeof GET_NOW_PLAYING;\r\n  nowPlaying: Array<NowPlayngType>;\r\n};\r\n\r\nexport const getNowPlaying = (\r\n  nowPlaying: Array<NowPlayngType>\r\n): GetNowPlayingtype => {\r\n  return { type: GET_NOW_PLAYING, nowPlaying };\r\n};\r\n// TV\r\ntype GetNowTvPlaing = {\r\n  type: typeof GET_NOW_TVPLAYING;\r\n  nowTvPlaying: Array<TVPopularType>;\r\n};\r\n\r\nexport const getNowTvPlaying = (\r\n  nowTvPlaying: Array<TVPopularType>\r\n): GetNowTvPlaing => {\r\n  return { type: GET_NOW_TVPLAYING, nowTvPlaying };\r\n};\r\n//Trailers\r\ntype GetTrailersType = {\r\n  type: typeof GET_TRAILERS;\r\n  trailers: Array<VideoType>;\r\n};\r\n\r\nexport const getTrailers = (trailers: Array<VideoType>): GetTrailersType => {\r\n  return { type: GET_TRAILERS, trailers };\r\n};\r\n//Traidings\r\ntype GetTraidingsType = {\r\n  type: typeof GET_TREDINGS;\r\n  traidings: Array<TraidingsType>;\r\n};\r\nexport const getTraidings = (\r\n  traidings: Array<TraidingsType>\r\n): GetTraidingsType => {\r\n  return { type: GET_TREDINGS, traidings };\r\n};\r\n\r\ntype GetUpComingType = {\r\n  type: typeof GET_UPCOMING;\r\n  upComing: Array<UpComingType>;\r\n};\r\n\r\nexport const getUpComing = (upComing: Array<UpComingType>): GetUpComingType => {\r\n  return { type: GET_UPCOMING, upComing };\r\n};\r\ntype FetchingType = {\r\n  type: typeof FETCHING;\r\n  fetching: boolean;\r\n};\r\nexport const getFetching = (fetching: boolean): FetchingType => {\r\n  return { type: FETCHING, fetching };\r\n};\r\n/////////////////////////////////////////////\r\ntype LoadMorePopType = {\r\n  type: typeof LOAD__MORE__POP;\r\n  loadMorePop: Array<PopularType>;\r\n};\r\n\r\nexport const getLoadMorePop = (loadMorePop: Array<PopularType>): LoadMorePopType => {\r\n  return { type: LOAD__MORE__POP, loadMorePop };\r\n};\r\ntype LoadMoreNPLType = {\r\n  type: typeof LOAD__MORE__NPL;\r\n  loadMoreNowPl: Array<NowPlayngType>;\r\n};\r\n\r\nexport const getLoadMoreNPL = (loadMoreNowPl: Array<PopularType>): LoadMoreNPLType => {\r\n  return { type: LOAD__MORE__NPL, loadMoreNowPl };\r\n};\r\n///////////////////////////////\r\n//Thunk\r\nexport const requestPopularMovies = (currentPage: number) => async (\r\n  dispatch: any\r\n) => {\r\n  dispatch(getFetching(true));\r\n  dispatch(getCurrentPage(currentPage));\r\n  const res = await getHomePgeApi.getPopular(currentPage);\r\n  console.log(res)\r\n  dispatch(getPopularMovies(res.results));\r\n  dispatch(getFetching(false));\r\n};\r\nexport const requestNowPlaying = (currentPage: number) => async (\r\n  dispatch: any\r\n) => {\r\n  dispatch(getFetching(true));\r\n  dispatch(getCurrentPage(currentPage));\r\n  const res = await getHomePgeApi.getNowPlaying(currentPage);\r\n  dispatch(getNowPlaying(res.results));\r\n  dispatch(getFetching(false));\r\n};\r\n\r\nexport const requestNowTvPlaying = (currentPage: number) => async (\r\n  dispatch: any\r\n) => {\r\n  dispatch(getFetching(true));\r\n  const res = await getHomePgeApi.getNowTvPlaying(currentPage);\r\n  dispatch(getNowTvPlaying(res.results));\r\n  dispatch(getFetching(false));\r\n};\r\n\r\nexport const requestTrailers = (movieId: number) => async (dispatch: any) => {\r\n  const res = await getMoviesApi.getVideos(movieId);\r\n  dispatch(getTrailers(res));\r\n};\r\n\r\nexport const requestTraidings = (value: string) => async (dispatch: any) => {\r\n  dispatch(getFetching(true));\r\n  const res = await getHomePgeApi.getTraidings(value);\r\n  dispatch(getTraidings(res));\r\n  dispatch(getFetching(false));\r\n};\r\nexport const requestUpComing = (randomPage: number) => async (\r\n  dispatch: any\r\n) => {\r\n  dispatch(getFetching(true));\r\n  const res = await getHomePgeApi.getUpcomming(randomPage);\r\n  dispatch(getUpComing(res));\r\n  dispatch(getFetching(false));\r\n};\r\n////////////////////////\r\nexport const requestloadMorePopular = (currentPage: number) => async (\r\n  dispatch: any\r\n) => {\r\n  const res = await getHomePgeApi.getPopular(currentPage);\r\n  //console.log(res);\r\n  dispatch(getLoadMorePop(res.results));\r\n  dispatch(getCurrentPage(currentPage));\r\n};\r\nexport const requestloadMoreNowPlaying = (currentPage: number) => async (\r\n  dispatch: any\r\n) => {\r\n  const res = await getHomePgeApi.getNowPlaying(currentPage);\r\n  //console.log(res);\r\n  dispatch(getLoadMoreNPL(res.results));\r\n  dispatch(getCurrentPage(currentPage));\r\n};\r\n///////////////////////////////\r\nexport default homePageReducer;\r\n","H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\MovieListReducer.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\PeopleReducer.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Reducers\\SearchReducer.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\HomePageSelector.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\MovieSelector.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\PeopleSelector.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\Selectors\\SearchSelector.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\components\\Store\\store.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\Hoc\\withHeaderFooter.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\Hoc\\withmovies.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\index.tsx",[],"H:\\REACT\\React-Movie_App-redux\\src\\react-app-env.d.ts",[],"H:\\REACT\\React-Movie_App-redux\\src\\reportWebVitals.ts",[],"H:\\REACT\\React-Movie_App-redux\\src\\setupTests.ts",[],"H:\\REACT\\React-Movie_App-redux\\src\\Types\\Types.tsx",[],{"ruleId":"496","severity":1,"message":"497","line":24,"column":6,"nodeType":"498","endLine":24,"endColumn":8,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":1,"column":17,"nodeType":"502","messageId":"503","endLine":1,"endColumn":25},{"ruleId":"504","severity":1,"message":"505","line":24,"column":15,"nodeType":"506","endLine":24,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":29,"column":15,"nodeType":"506","endLine":29,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":34,"column":15,"nodeType":"506","endLine":34,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":44,"column":15,"nodeType":"506","endLine":44,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":49,"column":15,"nodeType":"506","endLine":49,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":54,"column":15,"nodeType":"506","endLine":54,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":59,"column":15,"nodeType":"506","endLine":59,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":69,"column":15,"nodeType":"506","endLine":69,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":79,"column":15,"nodeType":"506","endLine":79,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":84,"column":15,"nodeType":"506","endLine":84,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":89,"column":15,"nodeType":"506","endLine":89,"endColumn":50},{"ruleId":"507","severity":1,"message":"508","line":2,"column":37,"nodeType":"509","messageId":"510","endLine":2,"endColumn":39},{"ruleId":"507","severity":1,"message":"511","line":4,"column":28,"nodeType":"509","messageId":"510","endLine":4,"endColumn":30},{"ruleId":"507","severity":1,"message":"511","line":13,"column":28,"nodeType":"509","messageId":"510","endLine":13,"endColumn":30},{"ruleId":"512","severity":1,"message":"513","line":2,"column":54,"nodeType":"514","messageId":"515","endLine":2,"endColumn":56},{"ruleId":"496","severity":1,"message":"516","line":23,"column":6,"nodeType":"498","endLine":23,"endColumn":8,"suggestions":"517"},{"ruleId":"500","severity":1,"message":"518","line":4,"column":10,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"496","severity":1,"message":"516","line":22,"column":6,"nodeType":"498","endLine":22,"endColumn":8,"suggestions":"519"},{"ruleId":"500","severity":1,"message":"520","line":1,"column":17,"nodeType":"502","messageId":"503","endLine":1,"endColumn":26},{"ruleId":"500","severity":1,"message":"520","line":1,"column":16,"nodeType":"502","messageId":"503","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"521","line":23,"column":25,"nodeType":"509","messageId":"510","endLine":23,"endColumn":27},{"ruleId":"500","severity":1,"message":"522","line":4,"column":38,"nodeType":"502","messageId":"503","endLine":4,"endColumn":47},{"ruleId":"500","severity":1,"message":"523","line":12,"column":8,"nodeType":"502","messageId":"503","endLine":12,"endColumn":17},{"ruleId":"496","severity":1,"message":"516","line":24,"column":6,"nodeType":"498","endLine":24,"endColumn":8,"suggestions":"524"},{"ruleId":"496","severity":1,"message":"516","line":23,"column":6,"nodeType":"498","endLine":23,"endColumn":8,"suggestions":"525"},{"ruleId":"496","severity":1,"message":"516","line":21,"column":6,"nodeType":"498","endLine":21,"endColumn":8,"suggestions":"526"},{"ruleId":"504","severity":1,"message":"505","line":41,"column":15,"nodeType":"506","endLine":41,"endColumn":59},{"ruleId":"507","severity":1,"message":"527","line":33,"column":38,"nodeType":"509","messageId":"528","endLine":33,"endColumn":40},{"ruleId":"504","severity":1,"message":"505","line":51,"column":13,"nodeType":"506","endLine":51,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":56,"column":13,"nodeType":"506","endLine":56,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":61,"column":13,"nodeType":"506","endLine":61,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":47,"column":13,"nodeType":"506","endLine":47,"endColumn":62},{"ruleId":"507","severity":1,"message":"529","line":17,"column":32,"nodeType":"509","messageId":"528","endLine":17,"endColumn":34},{"ruleId":"500","severity":1,"message":"530","line":49,"column":7,"nodeType":"502","messageId":"503","endLine":49,"endColumn":14},{"ruleId":"504","severity":1,"message":"505","line":89,"column":15,"nodeType":"506","endLine":92,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":111,"column":15,"nodeType":"506","endLine":114,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":122,"column":15,"nodeType":"506","endLine":125,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":133,"column":15,"nodeType":"506","endLine":136,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":144,"column":15,"nodeType":"506","endLine":147,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":14,"column":18,"nodeType":"506","endLine":14,"endColumn":63},{"ruleId":"504","severity":1,"message":"505","line":15,"column":18,"nodeType":"506","endLine":15,"endColumn":63},{"ruleId":"504","severity":1,"message":"505","line":16,"column":18,"nodeType":"506","endLine":16,"endColumn":63},{"ruleId":"504","severity":1,"message":"505","line":24,"column":16,"nodeType":"506","endLine":24,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":32,"column":17,"nodeType":"506","endLine":32,"endColumn":62},{"ruleId":"504","severity":1,"message":"505","line":40,"column":16,"nodeType":"506","endLine":40,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":41,"column":18,"nodeType":"506","endLine":41,"endColumn":63},{"ruleId":"504","severity":1,"message":"505","line":42,"column":18,"nodeType":"506","endLine":42,"endColumn":63},{"ruleId":"507","severity":1,"message":"527","line":126,"column":36,"nodeType":"509","messageId":"528","endLine":126,"endColumn":38},{"ruleId":"507","severity":1,"message":"527","line":141,"column":33,"nodeType":"509","messageId":"528","endLine":141,"endColumn":35},{"ruleId":"504","severity":1,"message":"505","line":170,"column":15,"nodeType":"506","endLine":170,"endColumn":81},{"ruleId":"504","severity":1,"message":"505","line":178,"column":15,"nodeType":"506","endLine":182,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":196,"column":15,"nodeType":"506","endLine":200,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":204,"column":15,"nodeType":"506","endLine":204,"endColumn":79},{"ruleId":"504","severity":1,"message":"505","line":208,"column":15,"nodeType":"506","endLine":212,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":218,"column":15,"nodeType":"506","endLine":218,"endColumn":81},{"ruleId":"500","severity":1,"message":"520","line":1,"column":17,"nodeType":"502","messageId":"503","endLine":1,"endColumn":26},{"ruleId":"500","severity":1,"message":"501","line":1,"column":28,"nodeType":"502","messageId":"503","endLine":1,"endColumn":36},{"ruleId":"500","severity":1,"message":"531","line":2,"column":10,"nodeType":"502","messageId":"503","endLine":2,"endColumn":21},{"ruleId":"500","severity":1,"message":"532","line":2,"column":23,"nodeType":"502","messageId":"503","endLine":2,"endColumn":34},{"ruleId":"500","severity":1,"message":"533","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":35},{"ruleId":"500","severity":1,"message":"534","line":3,"column":37,"nodeType":"502","messageId":"503","endLine":3,"endColumn":59},{"ruleId":"500","severity":1,"message":"535","line":4,"column":10,"nodeType":"502","messageId":"503","endLine":4,"endColumn":29},{"ruleId":"500","severity":1,"message":"536","line":4,"column":31,"nodeType":"502","messageId":"503","endLine":4,"endColumn":50},{"ruleId":"500","severity":1,"message":"537","line":5,"column":10,"nodeType":"502","messageId":"503","endLine":5,"endColumn":22},{"ruleId":"500","severity":1,"message":"538","line":6,"column":8,"nodeType":"502","messageId":"503","endLine":6,"endColumn":18},{"ruleId":"500","severity":1,"message":"539","line":7,"column":8,"nodeType":"502","messageId":"503","endLine":7,"endColumn":15},{"ruleId":"500","severity":1,"message":"540","line":6,"column":10,"nodeType":"502","messageId":"503","endLine":6,"endColumn":23},{"ruleId":"496","severity":1,"message":"516","line":29,"column":4,"nodeType":"498","endLine":29,"endColumn":6,"suggestions":"541"},{"ruleId":"500","severity":1,"message":"542","line":1,"column":16,"nodeType":"502","messageId":"503","endLine":1,"endColumn":23},{"ruleId":"500","severity":1,"message":"543","line":8,"column":9,"nodeType":"502","messageId":"503","endLine":8,"endColumn":20},{"ruleId":"500","severity":1,"message":"520","line":12,"column":9,"nodeType":"502","messageId":"503","endLine":12,"endColumn":18},{"ruleId":"500","severity":1,"message":"534","line":9,"column":10,"nodeType":"502","messageId":"503","endLine":9,"endColumn":32},{"ruleId":"500","severity":1,"message":"544","line":15,"column":9,"nodeType":"502","messageId":"503","endLine":15,"endColumn":17},{"ruleId":"504","severity":1,"message":"505","line":78,"column":23,"nodeType":"506","endLine":78,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":83,"column":23,"nodeType":"506","endLine":83,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":90,"column":19,"nodeType":"506","endLine":90,"endColumn":73},{"ruleId":"504","severity":1,"message":"505","line":95,"column":23,"nodeType":"506","endLine":95,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":100,"column":23,"nodeType":"506","endLine":100,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":105,"column":23,"nodeType":"506","endLine":105,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":110,"column":23,"nodeType":"506","endLine":110,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":117,"column":19,"nodeType":"506","endLine":117,"endColumn":73},{"ruleId":"504","severity":1,"message":"505","line":122,"column":23,"nodeType":"506","endLine":122,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":129,"column":19,"nodeType":"506","endLine":129,"endColumn":73},{"ruleId":"504","severity":1,"message":"505","line":134,"column":23,"nodeType":"506","endLine":134,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":139,"column":23,"nodeType":"506","endLine":139,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":144,"column":23,"nodeType":"506","endLine":144,"endColumn":69},{"ruleId":"504","severity":1,"message":"505","line":158,"column":17,"nodeType":"506","endLine":158,"endColumn":71},{"ruleId":"504","severity":1,"message":"505","line":173,"column":21,"nodeType":"506","endLine":173,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":178,"column":21,"nodeType":"506","endLine":178,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":185,"column":17,"nodeType":"506","endLine":185,"endColumn":71},{"ruleId":"504","severity":1,"message":"505","line":190,"column":21,"nodeType":"506","endLine":190,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":195,"column":21,"nodeType":"506","endLine":195,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":200,"column":21,"nodeType":"506","endLine":200,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":205,"column":21,"nodeType":"506","endLine":205,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":212,"column":17,"nodeType":"506","endLine":212,"endColumn":71},{"ruleId":"504","severity":1,"message":"505","line":217,"column":21,"nodeType":"506","endLine":217,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":224,"column":17,"nodeType":"506","endLine":224,"endColumn":71},{"ruleId":"504","severity":1,"message":"505","line":229,"column":21,"nodeType":"506","endLine":229,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":234,"column":21,"nodeType":"506","endLine":234,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":239,"column":21,"nodeType":"506","endLine":239,"endColumn":67},{"ruleId":"504","severity":1,"message":"505","line":251,"column":15,"nodeType":"506","endLine":255,"endColumn":16},{"ruleId":"504","severity":1,"message":"505","line":305,"column":15,"nodeType":"506","endLine":305,"endColumn":70},{"ruleId":"500","severity":1,"message":"545","line":1,"column":17,"nodeType":"502","messageId":"503","endLine":1,"endColumn":20},{"ruleId":"500","severity":1,"message":"546","line":14,"column":3,"nodeType":"502","messageId":"503","endLine":14,"endColumn":21},{"ruleId":"496","severity":1,"message":"547","line":69,"column":6,"nodeType":"498","endLine":69,"endColumn":16,"suggestions":"548"},{"ruleId":"500","severity":1,"message":"520","line":1,"column":21,"nodeType":"502","messageId":"503","endLine":1,"endColumn":30},{"ruleId":"500","severity":1,"message":"501","line":1,"column":32,"nodeType":"502","messageId":"503","endLine":1,"endColumn":40},{"ruleId":"500","severity":1,"message":"546","line":10,"column":3,"nodeType":"502","messageId":"503","endLine":10,"endColumn":21},{"ruleId":"500","severity":1,"message":"549","line":13,"column":8,"nodeType":"502","messageId":"503","endLine":13,"endColumn":16},{"ruleId":"500","severity":1,"message":"518","line":14,"column":10,"nodeType":"502","messageId":"503","endLine":14,"endColumn":14},{"ruleId":"500","severity":1,"message":"550","line":15,"column":8,"nodeType":"502","messageId":"503","endLine":15,"endColumn":17},{"ruleId":"500","severity":1,"message":"551","line":18,"column":3,"nodeType":"502","messageId":"503","endLine":18,"endColumn":21},{"ruleId":"500","severity":1,"message":"552","line":19,"column":3,"nodeType":"502","messageId":"503","endLine":19,"endColumn":18},{"ruleId":"500","severity":1,"message":"544","line":34,"column":9,"nodeType":"502","messageId":"503","endLine":34,"endColumn":17},{"ruleId":"500","severity":1,"message":"553","line":47,"column":9,"nodeType":"502","messageId":"503","endLine":47,"endColumn":20},{"ruleId":"500","severity":1,"message":"554","line":50,"column":9,"nodeType":"502","messageId":"503","endLine":50,"endColumn":20},{"ruleId":"500","severity":1,"message":"518","line":4,"column":10,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"496","severity":1,"message":"555","line":20,"column":6,"nodeType":"498","endLine":20,"endColumn":12,"suggestions":"556"},{"ruleId":"496","severity":1,"message":"555","line":21,"column":6,"nodeType":"498","endLine":21,"endColumn":12,"suggestions":"557"},{"ruleId":"500","severity":1,"message":"518","line":3,"column":10,"nodeType":"502","messageId":"503","endLine":3,"endColumn":14},{"ruleId":"496","severity":1,"message":"555","line":21,"column":6,"nodeType":"498","endLine":21,"endColumn":12,"suggestions":"558"},{"ruleId":"500","severity":1,"message":"518","line":4,"column":10,"nodeType":"502","messageId":"503","endLine":4,"endColumn":14},{"ruleId":"500","severity":1,"message":"551","line":8,"column":3,"nodeType":"502","messageId":"503","endLine":8,"endColumn":21},{"ruleId":"496","severity":1,"message":"555","line":25,"column":6,"nodeType":"498","endLine":25,"endColumn":12,"suggestions":"559"},{"ruleId":"500","severity":1,"message":"560","line":1,"column":39,"nodeType":"502","messageId":"503","endLine":1,"endColumn":51},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispach'. Either include it or remove the dependency array.","ArrayExpression",["561"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a return value from arrow function.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["562"],"'Link' is defined but never used.",["563"],"'useEffect' is defined but never used.","Array.prototype.find() expects a return value from arrow function.","'VideoType' is defined but never used.","'MovieList' is defined but never used.",["564"],["565"],["566"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.find() expects a value to be returned at the end of arrow function.","'percent' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'requestloadMoreNowPlaying' is defined but never used.","'requestloadMorePopular' is defined but never used.","'loadMorePopSelector' is defined but never used.","'loadMoreNplSelector' is defined but never used.","'AppStateType' is defined but never used.","'NowPlaying' is defined but never used.","'Popular' is defined but never used.","'NowPlayngType' is defined but never used.",["567"],"'useMemo' is defined but never used.","'PopularType' is defined but never used.","'dispatch' is assigned a value but never used.","'Key' is defined but never used.","'totalPagesSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', and 'searchQuery'. Either include them or remove the dependency array.",["568"],"'NoPoster' is defined but never used.","'Paginator' is defined but never used.","'requestSearchMovie' is defined but never used.","'requestSearchTv' is defined but never used.","'searchQuery' is assigned a value but never used.","'currentPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'searchQuery'. Either include them or remove the dependency array.",["569"],["570"],["571"],["572"],"'getSearchApi' is defined but never used.",{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"575","fix":"577"},{"desc":"575","fix":"578"},{"desc":"575","fix":"579"},{"desc":"575","fix":"580"},{"desc":"575","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"584","fix":"586"},{"desc":"584","fix":"587"},{"desc":"584","fix":"588"},"Update the dependencies array to be: [dispach]",{"range":"589","text":"590"},"Update the dependencies array to be: [dispatch]",{"range":"591","text":"592"},{"range":"593","text":"592"},{"range":"594","text":"592"},{"range":"595","text":"592"},{"range":"596","text":"592"},{"range":"597","text":"592"},"Update the dependencies array to be: [currentPage, dispatch, newValue, searchQuery]",{"range":"598","text":"599"},"Update the dependencies array to be: [dispatch, page, searchQuery]",{"range":"600","text":"601"},{"range":"602","text":"601"},{"range":"603","text":"601"},{"range":"604","text":"601"},[952,954],"[dispach]",[817,819],"[dispatch]",[832,834],[778,780],[776,778],[793,795],[1051,1053],[2400,2410],"[currentPage, dispatch, newValue, searchQuery]",[875,881],"[dispatch, page, searchQuery]",[841,847],[838,844],[937,943]]