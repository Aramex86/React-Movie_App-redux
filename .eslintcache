[{"F:\\REACT\\movie-app\\src\\Api\\Api.tsx":"1","F:\\REACT\\movie-app\\src\\App.test.tsx":"2","F:\\REACT\\movie-app\\src\\App.tsx":"3","F:\\REACT\\movie-app\\src\\components\\Common\\Card.tsx":"4","F:\\REACT\\movie-app\\src\\components\\Common\\Filter.tsx":"5","F:\\REACT\\movie-app\\src\\components\\Common\\HeroNav.tsx":"6","F:\\REACT\\movie-app\\src\\components\\Common\\HomePageCard.tsx":"7","F:\\REACT\\movie-app\\src\\components\\Common\\Loader.tsx":"8","F:\\REACT\\movie-app\\src\\components\\Common\\movieInfoToolTip.tsx":"9","F:\\REACT\\movie-app\\src\\components\\Common\\NoPesrson.tsx":"10","F:\\REACT\\movie-app\\src\\components\\Common\\Paginator.tsx":"11","F:\\REACT\\movie-app\\src\\components\\Common\\Skeleton.tsx":"12","F:\\REACT\\movie-app\\src\\components\\Common\\SocialComp.tsx":"13","F:\\REACT\\movie-app\\src\\components\\Common\\Sort.tsx":"14","F:\\REACT\\movie-app\\src\\components\\Footer\\Footer.tsx":"15","F:\\REACT\\movie-app\\src\\components\\FullActorsList\\FullList.tsx":"16","F:\\REACT\\movie-app\\src\\components\\Helper\\allMedia.tsx":"17","F:\\REACT\\movie-app\\src\\components\\Helper\\crewstaff.tsx":"18","F:\\REACT\\movie-app\\src\\components\\Helper\\filterData.tsx":"19","F:\\REACT\\movie-app\\src\\components\\Helper\\mtchId.tsx":"20","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreeToWatch.tsx":"21","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreetToWatchNav.tsx":"22","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Movies.tsx":"23","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Tv.tsx":"24","F:\\REACT\\movie-app\\src\\components\\Home\\Hero.tsx":"25","F:\\REACT\\movie-app\\src\\components\\Home\\JoinToday\\JoinToday.tsx":"26","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Trailers.tsx":"27","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Videos.tsx":"28","F:\\REACT\\movie-app\\src\\components\\Home\\Movielist.tsx":"29","F:\\REACT\\movie-app\\src\\components\\Home\\MovielistContainer.tsx":"30","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\ForRent.tsx":"31","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\InTheater.tsx":"32","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\OnTv.tsx":"33","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Popular.tsx":"34","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Streaming.tsx":"35","F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Today.tsx":"36","F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\TraidingNav.tsx":"37","F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Tranding.tsx":"38","F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Week.tsx":"39","F:\\REACT\\movie-app\\src\\components\\Home\\Upcoming\\Upcoming.tsx":"40","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardActors.tsx":"41","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardHeader.tsx":"42","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardInfo.tsx":"43","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMedia.tsx":"44","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMediaAll.tsx":"45","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocial.tsx":"46","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocialAll.tsx":"47","F:\\REACT\\movie-app\\src\\components\\MovieCard\\MovieCardContainer.tsx":"48","F:\\REACT\\movie-app\\src\\components\\MovieCard\\PopupTrailer.tsx":"49","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\CardPoster.tsx":"50","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\PosterStaffPage.tsx":"51","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCard.tsx":"52","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCardMovielist.tsx":"53","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffHeader.tsx":"54","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffKnowFor.tsx":"55","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Recomandations\\CardRecomand.tsx":"56","F:\\REACT\\movie-app\\src\\components\\MovielistHeader\\MovielistHeader.tsx":"57","F:\\REACT\\movie-app\\src\\components\\Movies\\NowPlaying.tsx":"58","F:\\REACT\\movie-app\\src\\components\\Movies\\Popular.tsx":"59","F:\\REACT\\movie-app\\src\\components\\Movies\\TopRated.tsx":"60","F:\\REACT\\movie-app\\src\\components\\Movies\\Upcoming.tsx":"61","F:\\REACT\\movie-app\\src\\components\\NaigationBar\\NavBar.tsx":"62","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\ResultsPage.tsx":"63","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResults.tsx":"64","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResultsItems.tsx":"65","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Collections.tsx":"66","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Movie.tsx":"67","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Person.tsx":"68","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Tvs.tsx":"69","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\HomePageReducer.tsx":"70","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\MovieListReducer.tsx":"71","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\PeopleReducer.tsx":"72","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\SearchReducer.tsx":"73","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\HomePageSelector.tsx":"74","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\MovieSelector.tsx":"75","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\PeopleSelector.tsx":"76","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\SearchSelector.tsx":"77","F:\\REACT\\movie-app\\src\\components\\Store\\store.tsx":"78","F:\\REACT\\movie-app\\src\\components\\Tv\\AiringToday.tsx":"79","F:\\REACT\\movie-app\\src\\components\\Tv\\PopularTv.tsx":"80","F:\\REACT\\movie-app\\src\\Hoc\\withHeaderFooter.tsx":"81","F:\\REACT\\movie-app\\src\\Hoc\\withmovies.tsx":"82","F:\\REACT\\movie-app\\src\\index.tsx":"83","F:\\REACT\\movie-app\\src\\react-app-env.d.ts":"84","F:\\REACT\\movie-app\\src\\reportWebVitals.ts":"85","F:\\REACT\\movie-app\\src\\setupTests.ts":"86","F:\\REACT\\movie-app\\src\\Types\\Types.tsx":"87","F:\\REACT\\movie-app\\src\\components\\Tv\\OnTv.tsx":"88","F:\\REACT\\movie-app\\src\\components\\Tv\\TopRatedTv.tsx":"89"},{"size":10063,"mtime":1609243810295,"results":"90","hashOfConfig":"91"},{"size":273,"mtime":1603735837181,"results":"92","hashOfConfig":"91"},{"size":2505,"mtime":1609242876135,"results":"93","hashOfConfig":"91"},{"size":2283,"mtime":1609240272359,"results":"94","hashOfConfig":"91"},{"size":3069,"mtime":1608712675930,"results":"95","hashOfConfig":"91"},{"size":2040,"mtime":1608126443560,"results":"96","hashOfConfig":"91"},{"size":1852,"mtime":1608731733835,"results":"97","hashOfConfig":"91"},{"size":277,"mtime":1603831657498,"results":"98","hashOfConfig":"91"},{"size":1111,"mtime":1606568079604,"results":"99","hashOfConfig":"91"},{"size":223,"mtime":1608490211006,"results":"100","hashOfConfig":"91"},{"size":558,"mtime":1608542582699,"results":"101","hashOfConfig":"91"},{"size":281,"mtime":1608124977223,"results":"102","hashOfConfig":"91"},{"size":1168,"mtime":1606837490978,"results":"103","hashOfConfig":"91"},{"size":2553,"mtime":1608715609073,"results":"104","hashOfConfig":"91"},{"size":3162,"mtime":1609243768752,"results":"105","hashOfConfig":"91"},{"size":167,"mtime":1605600955270,"results":"106","hashOfConfig":"91"},{"size":110,"mtime":1605629075347,"results":"107","hashOfConfig":"91"},{"size":181,"mtime":1606205922912,"results":"108","hashOfConfig":"91"},{"size":385,"mtime":1606329705645,"results":"109","hashOfConfig":"91"},{"size":129,"mtime":1604692652048,"results":"110","hashOfConfig":"91"},{"size":835,"mtime":1607514632391,"results":"111","hashOfConfig":"91"},{"size":1299,"mtime":1607683170924,"results":"112","hashOfConfig":"91"},{"size":1431,"mtime":1609154958868,"results":"113","hashOfConfig":"91"},{"size":1441,"mtime":1609240272368,"results":"114","hashOfConfig":"91"},{"size":2234,"mtime":1609154958880,"results":"115","hashOfConfig":"91"},{"size":1424,"mtime":1608048609618,"results":"116","hashOfConfig":"91"},{"size":2578,"mtime":1609154958884,"results":"117","hashOfConfig":"91"},{"size":1263,"mtime":1607955031074,"results":"118","hashOfConfig":"91"},{"size":2762,"mtime":1607514956738,"results":"119","hashOfConfig":"91"},{"size":2569,"mtime":1609154958887,"results":"120","hashOfConfig":"91"},{"size":1209,"mtime":1609154958900,"results":"121","hashOfConfig":"91"},{"size":1168,"mtime":1609154958901,"results":"122","hashOfConfig":"91"},{"size":1158,"mtime":1609154958902,"results":"123","hashOfConfig":"91"},{"size":1342,"mtime":1609154958903,"results":"124","hashOfConfig":"91"},{"size":1109,"mtime":1609154958904,"results":"125","hashOfConfig":"91"},{"size":1377,"mtime":1608111777031,"results":"126","hashOfConfig":"91"},{"size":1290,"mtime":1608020144943,"results":"127","hashOfConfig":"91"},{"size":790,"mtime":1608816078629,"results":"128","hashOfConfig":"91"},{"size":1374,"mtime":1608111777031,"results":"129","hashOfConfig":"91"},{"size":1446,"mtime":1609154958905,"results":"130","hashOfConfig":"91"},{"size":2793,"mtime":1607020778765,"results":"131","hashOfConfig":"91"},{"size":2271,"mtime":1605727259637,"results":"132","hashOfConfig":"91"},{"size":1765,"mtime":1605778822768,"results":"133","hashOfConfig":"91"},{"size":3220,"mtime":1606114161460,"results":"134","hashOfConfig":"91"},{"size":177,"mtime":1605774584840,"results":"135","hashOfConfig":"91"},{"size":2866,"mtime":1605625291886,"results":"136","hashOfConfig":"91"},{"size":181,"mtime":1605612537536,"results":"137","hashOfConfig":"91"},{"size":3919,"mtime":1607686857754,"results":"138","hashOfConfig":"91"},{"size":1448,"mtime":1607686546372,"results":"139","hashOfConfig":"91"},{"size":6550,"mtime":1607426725053,"results":"140","hashOfConfig":"91"},{"size":1954,"mtime":1606838930879,"results":"141","hashOfConfig":"91"},{"size":3992,"mtime":1606988826172,"results":"142","hashOfConfig":"91"},{"size":1689,"mtime":1606377127346,"results":"143","hashOfConfig":"91"},{"size":1838,"mtime":1606838715375,"results":"144","hashOfConfig":"91"},{"size":33241,"mtime":1606812014181,"results":"145","hashOfConfig":"91"},{"size":1090,"mtime":1605727283270,"results":"146","hashOfConfig":"91"},{"size":186,"mtime":1603797459626,"results":"147","hashOfConfig":"91"},{"size":2129,"mtime":1609154958906,"results":"148","hashOfConfig":"91"},{"size":2128,"mtime":1609154958918,"results":"149","hashOfConfig":"91"},{"size":2136,"mtime":1609154958919,"results":"150","hashOfConfig":"91"},{"size":2110,"mtime":1609154958920,"results":"151","hashOfConfig":"91"},{"size":14183,"mtime":1609242995007,"results":"152","hashOfConfig":"91"},{"size":3465,"mtime":1608496214029,"results":"153","hashOfConfig":"91"},{"size":3672,"mtime":1608496214019,"results":"154","hashOfConfig":"91"},{"size":2588,"mtime":1608496214029,"results":"155","hashOfConfig":"91"},{"size":1908,"mtime":1608496214029,"results":"156","hashOfConfig":"91"},{"size":2003,"mtime":1608542447103,"results":"157","hashOfConfig":"91"},{"size":1882,"mtime":1608496214029,"results":"158","hashOfConfig":"91"},{"size":2001,"mtime":1608496211787,"results":"159","hashOfConfig":"91"},{"size":8647,"mtime":1609243822689,"results":"160","hashOfConfig":"91"},{"size":5920,"mtime":1606985867873,"results":"161","hashOfConfig":"91"},{"size":3125,"mtime":1606814118011,"results":"162","hashOfConfig":"91"},{"size":5210,"mtime":1608541896216,"results":"163","hashOfConfig":"91"},{"size":1263,"mtime":1609242759229,"results":"164","hashOfConfig":"91"},{"size":878,"mtime":1605728631305,"results":"165","hashOfConfig":"91"},{"size":429,"mtime":1606813554467,"results":"166","hashOfConfig":"91"},{"size":815,"mtime":1608299328841,"results":"167","hashOfConfig":"91"},{"size":888,"mtime":1609154958940,"results":"168","hashOfConfig":"91"},{"size":2046,"mtime":1609241571592,"results":"169","hashOfConfig":"91"},{"size":2046,"mtime":1609240272407,"results":"170","hashOfConfig":"91"},{"size":317,"mtime":1605168845041,"results":"171","hashOfConfig":"91"},{"size":1010,"mtime":1605857726390,"results":"172","hashOfConfig":"91"},{"size":735,"mtime":1608815546157,"results":"173","hashOfConfig":"91"},{"size":41,"mtime":1603793689170,"results":"174","hashOfConfig":"91"},{"size":426,"mtime":1603735837181,"results":"175","hashOfConfig":"91"},{"size":241,"mtime":1603735837181,"results":"176","hashOfConfig":"91"},{"size":10084,"mtime":1609240272358,"results":"177","hashOfConfig":"91"},{"size":1990,"mtime":1609241569830,"results":"178","hashOfConfig":"91"},{"size":2041,"mtime":1609242811191,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rs8fux",{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},"F:\\REACT\\movie-app\\src\\Api\\Api.tsx",[],"F:\\REACT\\movie-app\\src\\App.test.tsx",[],"F:\\REACT\\movie-app\\src\\App.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Card.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Filter.tsx",["394"],"import React, { useEffect, useState } from \"react\";\r\nimport { FaChevronRight } from \"react-icons/fa\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport { BiCalendarEvent } from \"react-icons/bi\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { genresSelector } from \"../Store/Selectors/MovieSelector\";\r\nimport { requestGenres } from \"../Store/Reducers/MovieListReducer\";\r\n\r\nconst Filter = () => {\r\n  const [openSort, setOpenSort] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState<undefined | any>(undefined);\r\n  const [keyword, setKeyword] = useState<string>(\"\");\r\n\r\n  const moviegenres = useSelector((state: AppStateType) =>\r\n    genresSelector(state)\r\n  );\r\n  const dispach = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispach(requestGenres());\r\n  }, []);\r\n\r\n  const showSort = () => {\r\n    setOpenSort(!openSort);\r\n  };\r\n\r\n  const handleDayChange = (day: any) => {\r\n    setSelectedDate(day);\r\n  };\r\n\r\n  const handaleKeyword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n\r\n  const date = new Date(selectedDate).toLocaleDateString();\r\n\r\n  //console.log(date.toLocaleDateString());\r\n  //console.log(moviegenres);\r\n  console.log(keyword);\r\n  console.log(date)\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter__heading\" onClick={showSort}>\r\n        <h3>Filter</h3>\r\n        {openSort ? <FaChevronDown /> : <FaChevronRight />}\r\n      </div>\r\n      {openSort ? (\r\n        <div className=\"filter__body\">\r\n          <div className=\"filter__body__date\">\r\n            <span className=\"heading\">Release Dates</span>\r\n            <div className=\"from\">\r\n              <span>from</span>\r\n              <DayPickerInput onDayChange={handleDayChange} />\r\n              <span className=\"icon\">\r\n                <BiCalendarEvent />\r\n              </span>\r\n            </div>\r\n            <div className=\"to\">\r\n              <span>to</span>\r\n              <DayPickerInput\r\n                value={\"1/12/2021\"}\r\n                onDayChange={handleDayChange}\r\n              />\r\n              <span className=\"icon\">\r\n                <BiCalendarEvent />\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"filter__body__genres\">\r\n            <span className=\"heading\">Genres</span>\r\n            <div>\r\n              {moviegenres.map((movie) => (\r\n                <span key={movie.id}>{movie.name}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"filter__body__keywords\">\r\n            <span className=\"heading\">Keywords</span>\r\n            <div>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Filter by keywords...\"\r\n              onChange={handaleKeyword}\r\n              />\r\n              </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","F:\\REACT\\movie-app\\src\\components\\Common\\HeroNav.tsx",["395"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { requestPopularMovies } from \"../Store/Reducers/HomePageReducer\";\r\n\r\ntype PropsType = {\r\n  show: string;\r\n  showValue: (value: string) => void;\r\n};\r\n\r\nconst HeroNav: React.FC<PropsType> = ({ show, showValue}) => {\r\n  //const currentPages = useSelector((state:AppStateType) =>curentPageSelector(state))\r\n  const dispatch = useDispatch();\r\n\r\n  const selectPage = () => {\r\n    dispatch(requestPopularMovies(Math.floor(Math.random() * 20) + 1));\r\n  };\r\n\r\n  return (\r\n    <ul className=\"herowrapnav\">\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"stream\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"stream\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>streming</span>\r\n        </button>\r\n      </li>\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"onTv\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"onTv\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>on tv</span>\r\n        </button>\r\n      </li>\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"rent\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"rent\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>for ret</span>\r\n        </button>\r\n      </li>\r\n      <li className=\"herowrapnav__item\">\r\n        <button\r\n          onClick={() => {\r\n            showValue(\"theater\");\r\n            selectPage();\r\n          }}\r\n          className={`btn btn--heronav ${\r\n            show === \"theater\" ? \"btn--heroactive\" : \"\"\r\n          }`}\r\n        >\r\n          <span>in theaters</span>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default HeroNav;\r\n","F:\\REACT\\movie-app\\src\\components\\Common\\HomePageCard.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Loader.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\movieInfoToolTip.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\NoPesrson.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Paginator.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Skeleton.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\SocialComp.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Sort.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Footer\\Footer.tsx",["396","397","398","399"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const slideToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footerwrapp\">\r\n        <div className=\"footerwrapp__movies\">\r\n          <h3>Movies</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <Link\r\n                to=\"/movies/popular\"\r\n                className=\"list__link\"\r\n                onClick={slideToTop}\r\n              >\r\n                Popular\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/movies/nowplaying\" className=\"list__link\" onClick={slideToTop}>\r\n                Now Playing\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/movies/upcoming\" className=\"list__link\" onClick={slideToTop}>\r\n                Upcoming\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/movies/toprated\" className=\"list__link\" onClick={slideToTop}>\r\n                Top Rated\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footerwrapp__tv\">\r\n          <h3>TV Shows</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <Link to=\"/tv/popular\" className=\"list__link\">\r\n                Popular\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/tv/airingtoday\" className=\"list__link\">\r\n                Airing Today\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/tv/ontv\" className=\"list__link\">\r\n                On Tv\r\n              </Link>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <Link to=\"/tv/toprated\" className=\"list__link\">\r\n                Top Rated\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footerwrapp__people\">\r\n          <h3>People</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Popular People\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footerwrapp__more\">\r\n          <h3>More</h3>\r\n          <ul className=\"list\">\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Discutions\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Leaderboard\r\n              </a>\r\n            </li>\r\n            <li className=\"list__item\">\r\n              <a href=\"#\" className=\"list__link\">\r\n                Suport\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/\" className=\"logo\">\r\n        MOVIE-APP\r\n      </Link>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","F:\\REACT\\movie-app\\src\\components\\FullActorsList\\FullList.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Helper\\allMedia.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Helper\\crewstaff.tsx",["400"],"export const crewStaff = (props:any,name: string, arr:[{}]) => {\r\n    props.map((i: { job: string; }) => {\r\n      if (i.job === name) {\r\n        arr.push(i);\r\n      }\r\n    });\r\n  };","F:\\REACT\\movie-app\\src\\components\\Helper\\filterData.tsx",["401","402"],"\r\n\r\nexport const filterData=(arr1:any,arr2:any,value:string)=>{\r\n    arr1.filter((item:any) =>{\r\n        if(item.media_type === value){\r\n          arr2.push(item)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const filterDepartament=(arr1:any,arr2:any,value:string)=>{\r\n    arr1.filter((item:any) => {\r\n        if(item.department === value){\r\n           arr2.push(item)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n","F:\\REACT\\movie-app\\src\\components\\Helper\\mtchId.tsx",["403"],"export const matchIdFunc = (array: any[], value: any) => {\r\n  return array.filter((item: { id: any }) => item.id == value);\r\n};\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreeToWatch.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreetToWatchNav.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Movies.tsx",["404"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestNowPlaying } from \"../../Store/Reducers/HomePageReducer\";\r\nimport {\r\n  fetchingSelector,\r\n  nowPlayingSelector,\r\n} from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Movies = () => {\r\n  const nowPlayingMovies = useSelector((state: AppStateType) =>\r\n    nowPlayingSelector(state)\r\n  );\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestNowPlaying(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {nowPlayingMovies?.results.map((movie) =>\r\n        fetching ? (\r\n          <Skeleton key={movie.id}/>\r\n        ) : (\r\n          <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n            <Card\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              realese={movie.release_date}\r\n              voteAverage={movie.vote_average}\r\n              name={movie.name}\r\n              firstAirDate={movie.first_air_date}\r\n            />\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Tv.tsx",["405","406"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\nimport { requestNowTvPlaying } from \"../../Store/Reducers/HomePageReducer\";\r\nimport { fetchingSelector, nowTvPlayingSelector } from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\n\r\nconst Tv = () => {\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n  const nowTvPlaying = useSelector((state: AppStateType) =>\r\n    nowTvPlayingSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestNowTvPlaying(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n\r\n  console.log(nowTvPlaying)\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {nowTvPlaying?.results.map((movie:any)=> \r\n      fetching?<Skeleton key={movie.id}/>:\r\n      /*   <Link to={`movie-card/${movie.id}`} key={movie.id}> */\r\n          <Card key={movie.id}\r\n            poster={movie.poster_path}\r\n            title={movie.name}\r\n            realese={movie.first_air_date}\r\n            voteAverage={movie.vote_average}\r\n            name={movie.name}\r\n            firstAirDate={movie.first_air_date}\r\n          />\r\n        /* </Link> */\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tv;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\Hero.tsx",["407"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PopularType } from \"../../Types/Types\";\r\nimport {\r\n  requestSearchMovie,\r\n  requestSearchQuery,\r\n} from \"../Store/Reducers/SearchReducer\";\r\nimport { currentPagesSelector } from \"../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\n\r\ntype PropsType = {\r\n  bgPopular: Array<PopularType> | undefined;\r\n};\r\n\r\nconst Hero: React.FC<PropsType> = ({ bgPopular=[] }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchMovie, setSearchMovie] = useState(\"\");\r\n  const currentPage = useSelector((state:AppStateType)=>currentPagesSelector(state))\r\n\r\n  \r\n\r\n  const handldleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchMovie(e.target.value);\r\n    dispatch(requestSearchQuery(e.target.value));\r\n    <Redirect to=\"/sreachresults\" />;\r\n  };\r\n  \r\n\r\n  console.log(searchMovie)\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  const bgImages: Array<string> = bgPopular.map(\r\n    (item) => `${baseUrl}${item.backdrop_path}`\r\n  );\r\n\r\n  const randomImg = bgImages[Math.floor(Math.random() * bgImages.length)];\r\n\r\n  return (\r\n    <div\r\n      className=\"herowrapp__container\"\r\n      style={{\r\n        background: `linear-gradient(to left, rgb(18 65 123 / 65%), rgb(29 101 162)), url(${randomImg}) center center / cover`,\r\n      }}\r\n    >\r\n      <div className=\"hero_heading\">\r\n        <h1 className=\"hero_heading__big\">Welcome.</h1>\r\n        <h3 className=\"hero_heading__subheading\">\r\n          Millions of movies, TV shows and people to discover. Explore now.\r\n        </h3>\r\n      </div>\r\n      <div className=\"searchinput\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie, tv show, person......\"\r\n          value={searchMovie}\r\n          onChange={handldleChange}\r\n        />\r\n        <Link\r\n          to=\"/sreachresults\"\r\n          className=\"btn btn--hero\"\r\n          onClick={() => dispatch(requestSearchMovie(searchMovie,currentPage))}\r\n        >\r\n          Search\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\JoinToday\\JoinToday.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Trailers.tsx",["408","409"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  homeVideosSelector,\r\n  popularSelector,\r\n} from '../../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../../Store/store';\r\nimport Video from './Videos';\r\nimport {FaPlay} from 'react-icons/fa';\r\nimport {PopularType} from '../../../Types/Types';\r\nimport {requestTrailers} from '../../Store/Reducers/HomePageReducer';\r\n\r\nconst Trailers = () => {\r\n  const [bg, setBg] = useState<PopularType>();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const popular = useSelector((state: AppStateType) => popularSelector(state));\r\n  const trailers = useSelector((state: AppStateType) =>\r\n    homeVideosSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const checkIds = (valueId: number) => {\r\n    popular?.results.find((item) => {\r\n      if (item.id === valueId) {\r\n        setBg(item);\r\n      }\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"trailerswrapp\"\r\n      style={{\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/w500${bg?.backdrop_path})`,\r\n      }}\r\n    >\r\n      <div className=\"videos\">\r\n        <Video\r\n          trailers={trailers}\r\n          openModal={openModal}\r\n          closeModal={closeModal}\r\n        />\r\n      </div>\r\n      <div className=\"trailerswrapp__substrate\">\r\n        <h2 className=\"trailerswrapp__substrate__heading\">Latest Trailers</h2>\r\n        <div className=\"videowrap\">\r\n          {popular?.results.map((item) => (\r\n            <div\r\n              className=\"container\"\r\n              key={item.id}\r\n              onMouseEnter={() => checkIds(item.id)}\r\n            >\r\n              <div className=\"container__img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${item.backdrop_path}`}\r\n                  alt=\"poster\"\r\n                />\r\n                <button\r\n                  className=\"btn btn--play\"\r\n                  onClick={() => {\r\n                    dispatch(requestTrailers(item.id));\r\n                    setOpenModal(true);\r\n                  }}\r\n                >\r\n                  <FaPlay />\r\n                </button>\r\n              </div>\r\n              <div className=\"container__title\">\r\n                <span>{item.title}</span>\r\n                <br />\r\n                <span>Realese Date : {item.release_date}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trailers;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Videos.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Movielist.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\MovielistContainer.tsx",["410","411","412"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MovieListType, PopularObjectType, PopularType, VideoType } from \"../../Types/Types\";\r\nimport { requestMovieList } from \"../Store/Reducers/MovieListReducer\";\r\n\r\nimport {\r\n  isFetchingSelector,\r\n  moviesSelector,\r\n} from \"../Store/Selectors/MovieSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport MovieList from \"./Movielist\";\r\nimport HeroSection from \"./Hero\";\r\nimport Popular from \"./Popular/Popular\";\r\nimport {\r\n  //homeVideosSelector,\r\n  popularSelector,\r\n} from \"../Store/Selectors/HomePageSelector\";\r\nimport {\r\n  requestPopularMovies,\r\n  //requestHomeMovies,\r\n} from \"../Store/Reducers/HomePageReducer\";\r\nimport FreeToWatch from \"./FreeToWatch/FreeToWatch\";\r\nimport Trailers from \"./LatestTrailers/Trailers\";\r\nimport Tranding from \"./Tranding/Tranding\";\r\nimport JoinToday from \"./JoinToday/JoinToday\";\r\nimport Upcoming from \"./Upcoming/Upcoming\";\r\n\r\ntype MapStateToPropsType = {\r\n  movieList: Array<MovieListType>;\r\n  isFetching: boolean;\r\n  movies?: any;\r\n  popularMovies: PopularObjectType | undefined |null;\r\n  //homeVideo: Array<VideoType>;\r\n};\r\n\r\ntype MapDispatchPropsType = {\r\n  requestMovieList: () => void;\r\n  requestPopularMovies: (pagenr: any) => void;\r\n};\r\n\r\ntype OwnPropsType = {};\r\n\r\ntype PropsType = MapStateToPropsType &\r\n  MapDispatchPropsType &\r\n  OwnPropsType &\r\n  AppStateType;\r\n\r\nclass MovielistContainer extends Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.requestMovieList();\r\n    this.props.requestPopularMovies(1);\r\n    // this.props.requestPopularMovies(Math.floor(Math.random() * 10) + 1);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        <HeroSection bgPopular={this.props.popularMovies?.results} />\r\n        <Popular popularMovies={this.props.popularMovies?.results} />\r\n        <FreeToWatch />\r\n        <Trailers />\r\n        <Tranding />\r\n        <JoinToday />\r\n        <Upcoming />\r\n\r\n        {/* <MovieList\r\n          movieList={this.props.movieList}\r\n          isFetching={this.props.isFetching}\r\n        /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport let mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    movieList: moviesSelector(state),\r\n    isFetching: isFetchingSelector(state),\r\n    popularMovies: popularSelector(state),\r\n  };\r\n};\r\n\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispatchPropsType,\r\n  OwnPropsType,\r\n  AppStateType\r\n>(mapStateToProps, { requestMovieList, requestPopularMovies })(\r\n  MovielistContainer\r\n);\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\ForRent.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\InTheater.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\OnTv.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Popular.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Streaming.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Today.tsx",["413"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestTraidings } from \"../../Store/Reducers/HomePageReducer\";\r\nimport {\r\n  fetchingSelector,\r\n  traidingsSelector,\r\n} from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Today = () => {\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n\r\n  const traidings = useSelector((state: AppStateType) =>\r\n    traidingsSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestTraidings(\"day\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {traidings.map((movie) =>\r\n        fetching ? (\r\n          <Skeleton key={movie.id}/>\r\n        ) : (\r\n          <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n            <Card\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              name={movie.name}\r\n              firstAirDate={movie.first_air_date}\r\n              realese={movie.release_date}\r\n              voteAverage={movie.vote_average}\r\n            />\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\TraidingNav.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Tranding.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Week.tsx",["414"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestTraidings } from \"../../Store/Reducers/HomePageReducer\";\r\nimport {\r\n  fetchingSelector,\r\n  traidingsSelector,\r\n} from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Week = () => {\r\n  const fetching = useSelector((state: AppStateType) =>\r\n    fetchingSelector(state)\r\n  );\r\n  const traidings = useSelector((state: AppStateType) =>\r\n    traidingsSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestTraidings(\"week\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {traidings.map((movie) =>\r\n        fetching ? (\r\n          <Skeleton key={movie.id}/>\r\n        ) : (\r\n          <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n            <Card\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              realese={movie.release_date}\r\n              voteAverage={movie.vote_average}\r\n              name={movie.name}\r\n              firstAirDate={movie.first_air_date}\r\n            />\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Week;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\Upcoming\\Upcoming.tsx",["415"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestUpComing } from \"../../Store/Reducers/HomePageReducer\";\r\nimport { fetchingSelector, upComingSelector } from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport Skeleton from \"../../Common/Skeleton\";\r\n\r\nconst Upcoming = () => {\r\n  const upComing = useSelector((state: AppStateType) =>\r\n    upComingSelector(state)\r\n  );\r\n  const fetching = useSelector((state: AppStateType) =>\r\n  fetchingSelector(state)\r\n);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestUpComing(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n\r\n//console.log(upComing?.results)\r\n\r\n  return (\r\n    <div className=\"upcomingwrapp\">\r\n      <h2>Upcoming</h2>\r\n      <div className=\"cardwrapp\">\r\n      {upComing?.results.map((movie) => fetching?<Skeleton key={movie.id}/>:\r\n        <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n          <Card\r\n            poster={movie.poster_path}\r\n            title={movie.title}\r\n            realese={movie.release_date}\r\n            voteAverage={movie.vote_average}\r\n            name={movie.name}\r\n            firstAirDate={movie.first_air_date}\r\n          />\r\n        </Link>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upcoming;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardActors.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardHeader.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardInfo.tsx",["416"],"import React from \"react\";\r\nimport { KeywordsType, MovieDetailsType } from \"../../Types/Types\";\r\n\r\ntype PropType = {\r\n  details: MovieDetailsType | null;\r\n  keywords: Array<KeywordsType>;\r\n};\r\n\r\nconst CardInfo = ({ details, keywords }: PropType) => {\r\n  return (\r\n    <div className=\"cardInfoWrapp\">\r\n      <ul className=\"cardInfoList\">\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Status</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{details?.status}</span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Original Language</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">\r\n            {details?.spoken_languages.map((l) => l.name)}\r\n          </span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Budget</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{`$${details?.budget}`}</span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Revenue</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{`$${details?.revenue}`}</span>\r\n        </li>\r\n      </ul>\r\n      <div className=\"keywordsWrapp\">\r\n        <h4>Keywords</h4>\r\n        <ul className=\"keywordsWrapp__list\">\r\n          {keywords.map((k) => (\r\n            <li className=\"keywordsWrapp__item\" key={k.id}>\r\n              <a href=\"#\" className=\"keywordsWrapp__link\">\r\n                {k.name}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMedia.tsx",["417","418","419","420"],"import React from 'react';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\nimport PlayCircleFilledWhiteRoundedIcon from '@material-ui/icons/PlayCircleFilledWhiteRounded';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {MovieDetailsType, VideoType} from '../../../Types/Types';\r\nimport {allMedia} from '../../Helper/allMedia';\r\n\r\ntype PropsType = {\r\n  details: MovieDetailsType | null;\r\n  videos: Array<VideoType>;\r\n};\r\n\r\nconst CardMedia = ({details, videos}: PropsType) => {\r\n  const allImg: Array<string> = [];\r\n  allMedia(\r\n    details?.belongs_to_collection === null\r\n      ? ''\r\n      : details?.belongs_to_collection.poster_path,\r\n    details?.poster_path,\r\n    allImg\r\n  );\r\n  allMedia(\r\n    details?.belongs_to_collection === null\r\n      ? ''\r\n      : details?.belongs_to_collection.backdrop_path,\r\n    details?.backdrop_path,\r\n    allImg\r\n  );\r\n  const addPrefix = allImg.map(\r\n    (item: string) => `https://image.tmdb.org/t/p/w500${item}`\r\n  );\r\n  const noImg = addPrefix.filter((i) => {\r\n    if (i.includes('.jpg')) return i;\r\n  });\r\n\r\n  return (\r\n    <div className=\"mediaWrapp\">\r\n      <div className=\"mediaWrapp__header\">\r\n        <h3 className=\"mediaWrapp__header-heading\">Media</h3>\r\n        <ul className=\"mediaWrapp__header-list\">\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <Link\r\n              to=\"/allmedia\"\r\n              className=\"mediaWrapp__header-link mediaWrapp__header-link--active\"\r\n            >\r\n              All Media <span>{addPrefix.length + videos.length}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Videos <span>{videos.length}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Backdrops <span>{addPrefix.slice(0, 2).length}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Posters <span>{addPrefix.slice(2, 4).length}</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"mediaWrapp__wrapper\">\r\n        <div className=\"mediaWrapp__wrapper-media\">\r\n          {noImg.reverse().map((item: string, index: number) => (\r\n            <img src={item} alt=\"poster\" key={index} />\r\n          ))}\r\n          {videos.slice(0, 2).map((video) => (\r\n            <div className=\"mediaWrapp__wrapper-videolink\" key={video.id}>\r\n              {' '}\r\n              <a\r\n                className=\"mediaWrapp__wrapper-videolink-link\"\r\n                href={`https://www.youtube.com/watch?v=${video.key}`}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <PlayCircleFilledWhiteRoundedIcon />\r\n              </a>\r\n            </div>\r\n          ))}\r\n          <div>\r\n            <Link to=\"/allmedia\">\r\n              View More <ArrowForwardRoundedIcon />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMedia;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMediaAll.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocial.tsx",["421"],"import React from \"react\";\r\nimport StarRateRoundedIcon from \"@material-ui/icons/StarRateRounded\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ResultsType } from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n  reviews: Array<ResultsType>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  })\r\n);\r\nconst CardMedia = ({ reviews }: PropsType) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"socialWrapp\">\r\n      <div className=\"socialWrapp__header\">\r\n        <h3 className=\"socialWrapp__header-heading\">Social</h3>\r\n        <ul className=\"socialWrapp__header-list\">\r\n          <li className=\"socialWrapp__header-item\">\r\n            <Link\r\n              to=\"/allreview\"\r\n              className=\"socialWrapp__header-link socialWrapp__header-link--active\"\r\n            >\r\n              Reviews <span>{reviews.length}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"socialWrapp__header-item\">\r\n            <a href=\"#\" className=\"socialWrapp__header-link\">\r\n              Discussions <span>6</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {reviews.slice(0, 1).map((review) => (\r\n        <div className=\"socialWrapp__reviews\" key={review.id}>\r\n          <div className=\"socialWrapp__reviews-header\">\r\n            <Avatar style={{ marginRight: \"15px\" }} className={classes.large} />\r\n            <div>\r\n              <a href={review.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <h3>\r\n                  A review by {review.author}{\" \"}\r\n                  <span>\r\n                    <StarRateRoundedIcon style={{ fontSize: 20 }} />\r\n                    6.0\r\n                  </span>\r\n                </h3>\r\n              </a>\r\n              <span>\r\n                Written by <b>{review.author}</b> on 4 April 2017\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"socialWrapp__reviews-body\">\r\n            <p>\r\n              {`${review.content.slice(0, 300)}...`}{\" \"}\r\n              <a\r\n                href={review.url}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"socialWrapp__reviews-link\"\r\n              >\r\n                read the rest\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <h4>\r\n        <Link to=\"/allreview/\">Read All Reviews</Link>\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMedia;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocialAll.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\MovieCardContainer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\PopupTrailer.tsx",["422"],"import React from \"react\";\r\nimport { VideoType } from \"../../Types/Types\";\r\nimport {CgClose} from 'react-icons/cg'\r\n \r\ntype StateType = {\r\n  playTrailer: boolean;\r\n};\r\n\r\ntype PropsType = {\r\n  videos: Array<VideoType>;\r\n  playState: StateType;\r\n  closePlay: () => void;\r\n};\r\n\r\nconst PopupTrailer = ({ videos, playState, closePlay }: PropsType) => {\r\n  const trailer = videos.filter((v) => v.type === \"Trailer\");\r\n  const key = trailer.find((t) => {\r\n   if (t.name.includes(\"Trailer\")) {\r\n      return t.key;\r\n    }\r\n  });\r\n\r\n  const width = window.innerWidth;\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          playState.playTrailer\r\n            ? \"popuptrailer popuptrailer--show\"\r\n            : \"popuptrailer\"\r\n        }\r\n      >\r\n        \r\n        <div className=\"popuptrailer__videobox \">\r\n        <div className=\"popuptrailer__header\">\r\n          <button onClick={closePlay} className=\"btn btn--close\">\r\n            <CgClose/>\r\n          </button>\r\n        </div>\r\n          <iframe\r\n            width=\"100%\"\r\n            height={width>900?'700':'500'}\r\n            src={`https://www.youtube.com/embed/${key?.key}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title='movie trailer'\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopupTrailer;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\CardPoster.tsx",["423","424","425","426","427","428"],"import React from \"react\";\r\n\r\nimport FormatListBulletedRoundedIcon from \"@material-ui/icons/FormatListBulletedRounded\";\r\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\r\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\r\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\r\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { CreditsType, GenresType, MovieDetailsType } from \"../../../Types/Types\";\r\nimport { crewStaff } from \"../../Helper/crewstaff\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  details: MovieDetailsType | null;\r\n  original_title: undefined | string;\r\n  release_date: undefined | string;\r\n  original_language: undefined | string;\r\n  genres: undefined | Array<GenresType>;\r\n  runtime: undefined | number;\r\n  popularity: undefined | number;\r\n  overview: undefined | string;\r\n  credits: CreditsType | null;\r\n  handaleplay:()=>void\r\n};\r\n\r\nconst CardPoster = (props: PropsType) => {\r\n  const crew: any = [];\r\n\r\n const voteAvarage = props.details?.vote_average?props.details.vote_average:'';\r\n\r\n\r\n  let votes = voteAvarage.toLocaleString().replace(\".\", \"\");\r\n  if (votes.length < 2) {\r\n    votes = votes + \"0\";\r\n  }\r\n  const voteNumber = parseInt(votes);\r\n\r\n  const trailColorLine=(value:number)=>{\r\n    if(value < 30){\r\n      return '#fd1818'\r\n    }else if(value > 30 && value < 70){\r\n      return '#ffff5d'\r\n    }else{\r\n      return '#50ff50de'\r\n    }\r\n  }\r\n\r\nconst percent = 60\r\n\r\n  if (props.credits?.crew) {\r\n    crewStaff(props.credits?.crew, \"Director\", crew);\r\n    crewStaff(props.credits?.crew, \"Writing\", crew);\r\n    crewStaff(props.credits?.crew, \"Producer\", crew);\r\n  }\r\n\r\n  //console.log(props.credits?.cast.filter(c=> c.known_for_department === \"Acting\"));\r\n  return (\r\n    <div\r\n      className=\"posterWrapp\"\r\n      style={{\r\n        background: `linear-gradient(to left, #7f7f7f9e, black), url(https://image.tmdb.org/t/p/w500/${props.details?.poster_path}) no-repeat`,\r\n      }}\r\n    >\r\n      <div className=\"posterWrapp__img\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500/${props.details?.poster_path}`}\r\n          alt=\"poster\"\r\n        />\r\n      </div>\r\n      <div className=\"posterWrapp__info\">\r\n        <div className=\"posterWrapp__info-heading\">\r\n          <h2>\r\n            {props.original_title}{\" \"}\r\n            <span>({props.release_date?.slice(0, 4)})</span>{\" \"}\r\n          </h2>\r\n          <p>\r\n            {props.release_date?.replaceAll(\"-\", \"/\")} (\r\n            {props.original_language?.toUpperCase()}){\" \"}\r\n            {props.genres?.map((g) => (\r\n              <span key={g.id}>{g.name}</span>\r\n            ))}{\" \"}\r\n            - {props.runtime ? `${Math.ceil(props.runtime / 60)} h` : \"\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"posterWrapp__info-actions\">\r\n          <ul className=\"posterWrapp__info-actions-list\">\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--score\"\r\n              >\r\n                <div>\r\n                  <CircularProgressbar\r\n                    value={voteNumber}\r\n                    text={`${voteNumber}%`}\r\n                    styles={buildStyles({\r\n                      //trail: { stroke: \"#fff\" },\r\n                      textColor: \"#fff\",\r\n                      textSize: \"3rem\",\r\n                      backgroundColor: \"#000\",\r\n                      trailColor: \"#3d543fba\",\r\n                      pathColor: trailColorLine(voteNumber)\r\n                    })}\r\n                  />\r\n                </div>\r\n                User Score\r\n              </a>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <FormatListBulletedRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to create and edit custom lists\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <FavoriteRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to add this movie to your favourite list\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <BookmarkRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to add this movie to your watchlist\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <StarRoundedIcon />\r\n              </a>\r\n              <p className=\"movieCrad__tolltip\">Login to rate this movie</p>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <button \r\n                className=\"btn btn--postertrailer\"\r\n                onClick={props.handaleplay}\r\n              >\r\n                <PlayArrowRoundedIcon /> Play Trailer\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"posterWrapp__info-overview\">\r\n          <p>{props.overview}</p>\r\n        </div>\r\n        <div className=\"posterWrapp__info-cast\">\r\n          <ul className=\"posterWrapp__info-cast-list\">\r\n            {crew.map((c: any) => (\r\n              <li className=\"posterWrapp__info-cast-item\" key={c.credit_id}>\r\n                <Link to={`/posterstaff/${c.id}`} className=\"posterWrapp__info-cast-link\">\r\n                  <p>{c.name}</p>\r\n                  <p>{c.job}</p>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPoster;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\PosterStaffPage.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCard.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCardMovielist.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffHeader.tsx",["429","430","431","432","433","434","435","436"],"import React from \"react\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\n\r\nconst StaffHeader = () => {\r\n  return (\r\n    <div className=\"staffheader__wrap\">\r\n      <nav className=\"menuWrapp\">\r\n        <ul className=\"menuWrapp__list\">\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Overview <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>main</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>translations</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>changes</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Media <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n               <a href=\"#\" className='menuWrapp__drop-link'>Profiles</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Fandom <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n                <a href=\"#\" className='menuWrapp__drop-link'>discussions</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Share <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n               <a href=\"#\" className='menuWrapp__drop-link'>share link</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>facebook</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>twitter</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffHeader;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffKnowFor.tsx",["437","438","439","440","441","442","443","444"],"import React, { useState } from \"react\";\r\nimport { filterData, filterDepartament } from \"../../Helper/filterData\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport {\r\n  AllMediaType,\r\n  CombineCreditsCrewType,\r\n  CombinedCreditsCastType,\r\n} from \"../../../Types/Types\";\r\nimport MovieInfoToolTip from \"../../Common/movieInfoToolTip\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\ntype PropsTypes = {\r\n  combineCrew: Array<CombineCreditsCrewType>;\r\n  combineCast: Array<CombinedCreditsCastType>;\r\n};\r\n\r\nconst StaffKnowFor: React.FC<PropsTypes> = ({ combineCrew, combineCast }) => {\r\n  const [showTip, setShowTip] = useState(\"0\");\r\n  const [selectWriting, setSelectWriting] = useState(false);\r\n  const [selectProd, setSelectProd] = useState(false);\r\n  const [selectActing, setSelectActing] = useState(false);\r\n  const [selectDirecting, setSelectDirecting] = useState(false);\r\n  const [clearAll, setClearAll] = useState(false);\r\n  const [movies, setMovies] = useState<any>([]);\r\n  const [tv, setTv] = useState<any>([]);\r\n  const [showMovieTv, setShowMovieTv] = useState(false);\r\n  const [showDep,setShowDep]=useState(true);\r\n  const [showMovTv,setShowMovTv]=useState(false);\r\n\r\n  const moviesCrew = [] as Array<AllMediaType>;\r\n  const tvShow = [] as Array<AllMediaType>;\r\n  const directing = [] as Array<AllMediaType>;\r\n  const production = [] as Array<AllMediaType>;\r\n  const writing = [] as Array<AllMediaType>;\r\n  const acting = [] as Array<AllMediaType>;\r\n\r\n  filterData(combineCast, acting, \"movie\");\r\n  filterData(combineCrew, moviesCrew, \"movie\");\r\n  filterData(combineCast, tvShow, \"tv\");\r\n  filterData(combineCrew, tvShow, \"tv\");\r\n\r\n  filterDepartament(combineCrew, directing, \"Directing\");\r\n  filterDepartament(combineCrew, production, \"Production\");\r\n  filterDepartament(combineCrew, writing, \"Writing\");\r\n\r\n  const allMedia = [\r\n    ...writing,\r\n    ...directing,\r\n    ...production,\r\n    ...acting,\r\n  ] as Array<AllMediaType>;\r\n\r\n  const nrOfMovies = allMedia.filter(\r\n    (item: any) => item.media_type === \"movie\"\r\n  );\r\n  const nrOfTv = allMedia.filter((item: any) => item.media_type === \"tv\");\r\n\r\n  const showToolTip = (id: string) => {\r\n    setShowTip(id);\r\n  };\r\n\r\n  const hideToolTip = (id: string) => {\r\n    setShowTip((id = \"\"));\r\n  };\r\n\r\n  const showWriting = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(false);\r\n    setSelectProd(true);\r\n    setSelectActing(true);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showProd = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(false);\r\n    setSelectActing(true);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showActing = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(true);\r\n    setSelectActing(false);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showDirecting = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(true);\r\n    setSelectActing(true);\r\n    setSelectDirecting(false);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n\r\n  const clearAllFilter = () => {\r\n    setSelectWriting(false);\r\n    setSelectProd(false);\r\n    setSelectActing(false);\r\n    setSelectDirecting(false);\r\n    setClearAll(false);\r\n    setShowDep(true);\r\n    setShowMovTv(false)\r\n  };\r\n\r\n  const showMovies = (e: any) => {\r\n    e.preventDefault();\r\n    setShowMovieTv(true);\r\n    setShowDep(false);\r\n    setShowMovTv(true);\r\n    setClearAll(true);\r\n    setMovies(\r\n      allMedia.filter((movie: any) => {\r\n        if (movie.media_type === \"movie\") {\r\n          return movie;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const showTvShows = (e: any) => {\r\n    e.preventDefault();\r\n    setShowMovieTv(false);\r\n    setShowDep(false);\r\n    setShowMovTv(true);\r\n    setClearAll(true);\r\n    setTv(\r\n      allMedia.filter((tv: any) => {\r\n        if (tv.media_type === \"tv\") {\r\n          return tv;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  //  console.log(\"D\", directing);\r\n  // console.log(\"P\", production);\r\n  //  console.log(\"A\", acting);\r\n  //  console.log(\"W\", writing);\r\n  return (\r\n    <div className=\"carierwrapp\">\r\n      <div className=\"carierwrapp__header\">\r\n        <ul className=\"menuWrapp__list menuWrapp__list--carier\">\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            {clearAll ? (\r\n              <button className=\"btn btn--clearall\" onClick={clearAllFilter}>\r\n                Clear\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            <span>\r\n              All <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showMovies}>\r\n                {allMedia.slice(0, 1).map((m: any) => (\r\n                  <span key={m.credit_id}>\r\n                    {m.media_type === \"movie\" ? \"Movies\" : \"Movies\"}{\" \"}\r\n                    {nrOfMovies.length}\r\n                  </span>\r\n                ))}\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showTvShows}\r\n              >\r\n                {tvShow.slice(0, 1).map((m) => (\r\n                  <span key={m.credit_id}>\r\n                    {`${m.media_type} Shows`} {nrOfTv.length}\r\n                  </span>\r\n                ))}\r\n              </a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            <span>\r\n              Departament <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showDirecting}\r\n              >\r\n                {directing.slice(0, 1).map((d) => d.department)}{\" \"}\r\n                {directing.length}\r\n              </a>\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showProd}>\r\n                {production.slice(0, 1).map((p) => p.department)}{\" \"}\r\n                {production.length}\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showWriting}\r\n              >\r\n                {writing.length === 0\r\n                  ? \"Writing\"\r\n                  : writing.slice(0, 1).map((p) => p.department)}{\" \"}\r\n                {writing.length}\r\n              </a>\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showActing}>\r\n                {acting\r\n                  .slice(0, 1)\r\n                  .map((p) =>\r\n                    p.character === \"Himself\" ? \"Acting\" : \"Acting\"\r\n                  )}{\" \"}\r\n                {acting.length === 0 ? \"\" : acting.length}\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"carierwrapp__body\">\r\n       <div style={showMovTv?{display:'table',width:'100%'}:{display:'none'}}>\r\n        {showMovieTv ? (\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Directing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Directing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Writing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Writing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Production</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Acting</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Directing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Directing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Writing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Writing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Production</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                            <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n              style={selectWriting ? { display: \"none\" } : { display: \"table\" }}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Acting</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        </div>\r\n        {showDep?\r\n        <TableContainer component={Paper}>\r\n         <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectWriting ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Writing</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {writing.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectDirecting ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Directing</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {directing.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectProd ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Production</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {production.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? movie.release_date\r\n                          : \"---\"\r\n                          ? movie.release_date.slice(0, 4)\r\n                          : \"\"}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectActing ? { display: \"none\" } : { display: \"table\" }}\r\n          >{}\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Acting</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {acting.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"---\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${\r\n                        movie.character ? movie.character : \"Unknown\"\r\n                      }`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>:''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffKnowFor;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Recomandations\\CardRecomand.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovielistHeader\\MovielistHeader.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Movies\\NowPlaying.tsx",["445"],"import Card from '../Common/Card';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport { nowPlayingSelector } from '../Store/Selectors/HomePageSelector';\r\nimport { AppStateType } from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport { requestNowPlaying } from '../Store/Reducers/HomePageReducer';\r\n\r\nconst NowPlaying: FC = () => {\r\n    const nowPlaying = useSelector((state: AppStateType) =>\r\n    nowPlayingSelector(state)\r\n    );\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n  \r\n      useEffect(() => {\r\n       dispatch(requestNowPlaying(page))\r\n    }, [page]);\r\n  \r\n    const handalePageChange=(e:any,value:number)=>{\r\n      setPage(value);\r\n    }\r\n    return (\r\n      <>\r\n        <h1 className=\"heading\">Now Playing Movies</h1>\r\n        <div className=\"popularwrap\">\r\n          <div className=\"popularwrap__filters\">\r\n            <Sort />\r\n            <Filter />\r\n            <button className=\"btn btn--search_filter\" disabled={true}>\r\n              Search\r\n            </button>\r\n          </div>\r\n          <div className=\"popularwrap__movielist\">\r\n            {nowPlaying?.results.map((p, index) => (\r\n              <Link\r\n                to={`/movie-card/${p.id}`}\r\n                key={index}\r\n                className=\"popularwrap__movielist-link\"\r\n                target=\"_blank\"\r\n              >\r\n                <Card\r\n                  poster={p.poster_path}\r\n                  title={p.title}\r\n                  voteAverage={p.vote_average}\r\n                  realese={p.release_date}\r\n                  firstAirDate={p.first_air_date}\r\n                  name={p.name}\r\n                />\r\n              </Link>\r\n            ))}\r\n            <Paginatior\r\n              handalePageChange={handalePageChange}\r\n              totalPages={nowPlaying?.total_pages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default NowPlaying;","F:\\REACT\\movie-app\\src\\components\\Movies\\Popular.tsx",["446"],"import Card from '../Common/Card';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport { popularSelector } from '../Store/Selectors/HomePageSelector';\r\nimport { AppStateType } from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport { requestPopularMovies } from '../Store/Reducers/HomePageReducer';\r\n\r\nconst Popular: FC = () => {\r\n    const popularMovies = useSelector((state: AppStateType) =>\r\n    popularSelector(state)\r\n    );\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n  \r\n      useEffect(() => {\r\n       dispatch(requestPopularMovies(page))\r\n    }, [page]);\r\n  \r\n    const handalePageChange=(e:any,value:number)=>{\r\n      setPage(value);\r\n    }\r\n    return (\r\n      <>\r\n        <h1 className=\"heading\">Popular Movies</h1>\r\n        <div className=\"popularwrap\">\r\n          <div className=\"popularwrap__filters\">\r\n            <Sort />\r\n            <Filter />\r\n            <button className=\"btn btn--search_filter\" disabled={true}>\r\n              Search\r\n            </button>\r\n          </div>\r\n          <div className=\"popularwrap__movielist\">\r\n            {popularMovies?.results.map((p, index) => (\r\n              <Link\r\n                to={`/movie-card/${p.id}`}\r\n                key={index}\r\n                className=\"popularwrap__movielist-link\"\r\n                target=\"_blank\"\r\n              >\r\n                <Card\r\n                  poster={p.poster_path}\r\n                  title={p.title}\r\n                  voteAverage={p.vote_average}\r\n                  realese={p.release_date}\r\n                  firstAirDate={p.first_air_date}\r\n                  name={p.name}\r\n                />\r\n              </Link>\r\n            ))}\r\n            <Paginatior\r\n              handalePageChange={handalePageChange}\r\n              totalPages={popularMovies?.total_pages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Popular;","F:\\REACT\\movie-app\\src\\components\\Movies\\TopRated.tsx",["447"],"import Card from '../Common/Card';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport {topRatedSelector } from '../Store/Selectors/HomePageSelector';\r\nimport { AppStateType } from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport {  requestTopRated } from '../Store/Reducers/HomePageReducer';\r\n\r\nconst TopRated: FC = () => {\r\n    const topRated = useSelector((state: AppStateType) =>\r\n    topRatedSelector(state)\r\n    );\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n  \r\n      useEffect(() => {\r\n       dispatch(requestTopRated(page))\r\n    }, [page]);\r\n  \r\n    console.log(topRated)\r\n    const handalePageChange=(e:any,value:number)=>{\r\n      setPage(value);\r\n    }\r\n    return (\r\n      <>\r\n        <h1 className=\"heading\">Top Rated Movies</h1>\r\n        <div className=\"popularwrap\">\r\n          <div className=\"popularwrap__filters\">\r\n            <Sort />\r\n            <Filter />\r\n            <button className=\"btn btn--search_filter\" disabled={true}>\r\n              Search\r\n            </button>\r\n          </div>\r\n          <div className=\"popularwrap__movielist\">\r\n            {topRated?.results.map((p, index) => (\r\n              <Link\r\n                to={`/movie-card/${p.id}`}\r\n                key={index}\r\n                className=\"popularwrap__movielist-link\"\r\n                target=\"_blank\"\r\n              >\r\n                <Card\r\n                  poster={p.poster_path}\r\n                  title={p.title}\r\n                  voteAverage={p.vote_average}\r\n                  realese={p.release_date}\r\n                  firstAirDate={p.first_air_date}\r\n                  name={p.name}\r\n                />\r\n              </Link>\r\n            ))}\r\n            <Paginatior\r\n              handalePageChange={handalePageChange}\r\n              totalPages={topRated?.total_pages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default TopRated;","F:\\REACT\\movie-app\\src\\components\\Movies\\Upcoming.tsx",["448"],"import Card from '../Common/Card';\r\nimport React, { FC, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport {  upComingSelector } from '../Store/Selectors/HomePageSelector';\r\nimport { AppStateType } from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport {  requestUpComing } from '../Store/Reducers/HomePageReducer';\r\n\r\nconst Upcoming: FC = () => {\r\n    const upcoming = useSelector((state: AppStateType) =>\r\n    upComingSelector(state)\r\n    );\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n  \r\n      useEffect(() => {\r\n       dispatch(requestUpComing(page))\r\n    }, [page]);\r\n  \r\n    const handalePageChange=(e:any,value:number)=>{\r\n      setPage(value);\r\n    }\r\n    return (\r\n      <>\r\n        <h1 className=\"heading\">Upcoming Movies</h1>\r\n        <div className=\"popularwrap\">\r\n          <div className=\"popularwrap__filters\">\r\n            <Sort />\r\n            <Filter />\r\n            <button className=\"btn btn--search_filter\" disabled={true}>\r\n              Search\r\n            </button>\r\n          </div>\r\n          <div className=\"popularwrap__movielist\">\r\n            {upcoming?.results.map((p, index) => (\r\n              <Link\r\n                to={`/movie-card/${p.id}`}\r\n                key={index}\r\n                className=\"popularwrap__movielist-link\"\r\n                target=\"_blank\"\r\n              >\r\n                <Card\r\n                  poster={p.poster_path}\r\n                  title={p.title}\r\n                  voteAverage={p.vote_average}\r\n                  realese={p.release_date}\r\n                  firstAirDate={p.first_air_date}\r\n                  name={p.name}\r\n                />\r\n              </Link>\r\n            ))}\r\n            <Paginatior\r\n              handalePageChange={handalePageChange}\r\n              totalPages={upcoming?.total_pages}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Upcoming;","F:\\REACT\\movie-app\\src\\components\\NaigationBar\\NavBar.tsx",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { ImPlus } from \"react-icons/im\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst NavBar = () => {\r\n  const [showToolTip, setShowToolTip] = useState(false);\r\n  const [showlang, setShowlang] = useState(false);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = React.useState<{\r\n    age: string | number;\r\n    name: string;\r\n  }>({\r\n    age: \"\",\r\n    name: \"hai\",\r\n  });\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.name as keyof typeof state;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowToolTip(!showToolTip);\r\n  };\r\n  const showLang = () => {\r\n    setShowlang(!showlang);\r\n  };\r\n\r\n  const showHideNav = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  const screenWidth = window.innerWidth;\r\n\r\n  // console.log(screenWidth);\r\n  // console.log(showMenu);\r\n\r\n  return (\r\n    <div className=\"navbarwrapp\">\r\n      <div className=\"navbarwrapp__container\">\r\n        <div className=\"navbarwrapp__left\">\r\n          <button onClick={showHideNav} className=\"btn btn--mobile\">\r\n            <span></span>\r\n          </button>\r\n          <div className=\"navbarwrapp__left__logo\">\r\n            <Link to=\"/\">MOVIE-APP</Link>\r\n          </div>\r\n          {screenWidth < 665 && showMenu ? (\r\n            <nav className=\"navbarwrapp__left__navbar navbarwrapp__left__navbar--mobile\">\r\n              <ul className=\"navbarwrapp__left__list navbarwrapp__left__list--mobile\">\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <span className=\"navbarwrapp__left__list__link\">movies</span>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link\r\n                        to=\"/movies/popular\"\r\n                        className=\"dropdown-navbar__link\"\r\n                      >\r\n                        popular\r\n                      </Link>\r\n                    </li>\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link\r\n                        to=\"/movies/nowplaying\"\r\n                        className=\"dropdown-navbar__link\"\r\n                      >\r\n                        now playing\r\n                      </Link>\r\n                    </li>\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link\r\n                        to=\"/movies/upcoming\"\r\n                        className=\"dropdown-navbar__link\"\r\n                      >\r\n                        upcoming\r\n                      </Link>\r\n                    </li>\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link\r\n                        to=\"/movies/toprated\"\r\n                        className=\"dropdown-navbar__link\"\r\n                      >\r\n                        top rated\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    tv shows\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link to=\"/tv/popular\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </Link>\r\n                    </li>\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link\r\n                        to=\"/tv/airingtoday\"\r\n                        className=\"dropdown-navbar__link\"\r\n                      >\r\n                        airing today\r\n                      </Link>\r\n                    </li>\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link to=\"/tv/ontv\" className=\"dropdown-navbar__link\">\r\n                        on air\r\n                      </Link>\r\n                    </li>\r\n                    <li\r\n                      className=\"dropdown-navbar__item\"\r\n                      onClick={() => setShowMenu(false)}\r\n                    >\r\n                      <Link to=\"/tv/toprated\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    people\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular people\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    more\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        discutions\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        leaderboard\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        suport\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <nav className=\"navbarwrapp__left__navbar \">\r\n            <ul className=\"navbarwrapp__left__list \">\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  movies\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link\r\n                      to=\"/movies/popular\"\r\n                      className=\"dropdown-navbar__link\"\r\n                    >\r\n                      popular\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link\r\n                      to=\"/movies/nowplaying\"\r\n                      className=\"dropdown-navbar__link\"\r\n                    >\r\n                      now playing\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link\r\n                      to=\"/movies/upcoming\"\r\n                      className=\"dropdown-navbar__link\"\r\n                    >\r\n                      upcoming\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link\r\n                      to=\"/movies/toprated\"\r\n                      className=\"dropdown-navbar__link\"\r\n                    >\r\n                      top rated\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  tv shows\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link to=\"/tv/popular\" className=\"dropdown-navbar__link\">\r\n                      popular\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link\r\n                      to=\"/tv/airingtoday\"\r\n                      className=\"dropdown-navbar__link\"\r\n                    >\r\n                      airing today\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className=\"dropdown-navbar__item\"\r\n                    onClick={() => setShowMenu(false)}\r\n                  >\r\n                    <Link to=\"/tv/ontv\" className=\"dropdown-navbar__link\">\r\n                      on air\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <Link to=\"/tv/toprated\" className=\"dropdown-navbar__link\">\r\n                      top rated\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  people\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      popular people\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"navbarwrapp__left__list__item\">\r\n                <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                  more\r\n                </a>\r\n                <ul className=\"dropdown-navbar\">\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      discutions\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      leaderboard\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"dropdown-navbar__item\">\r\n                    <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                      suport\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div className=\"navbarwrapp__right\">\r\n          <ul className=\"navbarwrapp__right__list\">\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"navbarwrapp__right__list__link\"\r\n                onClick={handleClick}\r\n              >\r\n                <ImPlus />\r\n              </a>\r\n              {showToolTip ? (\r\n                <div className=\"navbarwrapp__right__tooltip\">\r\n                  <span>\r\n                    Can't find a movie or TV show?\r\n                    <br /> Login to create it.\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <button\r\n                className=\"btn btn--navbar\"\r\n                onClick={showLang}\r\n                style={showlang ? { background: \"white\", color: \"#000\" } : {}}\r\n              >\r\n                EN\r\n              </button>\r\n              {showlang ? (\r\n                <div className=\"navbarwrapp__right__tooltip navbarwrapp__right__tooltip--lang\">\r\n                  <h3>Language Preferences</h3>\r\n                  <FormControl variant=\"filled\" className=\"languageform\">\r\n                    <InputLabel htmlFor=\"filled-age-native-simple\">\r\n                      Language\r\n                    </InputLabel>\r\n                    <Select\r\n                      native\r\n                      value={state.age}\r\n                      onChange={handleChange}\r\n                      inputProps={{\r\n                        name: \"age\",\r\n                        id: \"filled-age-native-simple\",\r\n                      }}\r\n                    >\r\n                      <option aria-label=\"None\" value=\"\" />\r\n                      <option value={10}>Ten</option>\r\n                      <option value={20}>Twenty</option>\r\n                      <option value={30}>Thirty</option>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <a href=\"#\" className=\"navbarwrapp__right__list__link\">\r\n                <span>Login</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <button className=\"btn btn--navbarsearch\">\r\n                <SearchOutlinedIcon\r\n                  style={{ color: \"#1acee0\", fontWeight: \"bold\" }}\r\n                />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\ResultsPage.tsx",["467","468","469"],"import React, { Key, useEffect, useState } from \"react\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport SearchResultsItems from \"./SearchResultsItems\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport {\r\n  currentPagesSelector,\r\n  searchCollectionsSelector,\r\n  searchMoviesQuerySelector,\r\n  searchMoviesSelector,\r\n  searchPeopleSelector,\r\n  searchTvSelector,\r\n  totalPagesSelector,\r\n} from \"../Store/Selectors/SearchSelector\";\r\nimport {\r\n  // requestCurrentPage,\r\n  requestSearchCollections,\r\n  requestSearchMovie,\r\n  requestSearchPeople,\r\n  requestSearchQuery,\r\n  requestSearchTv,\r\n} from \"../Store/Reducers/SearchReducer\";\r\n\r\nconst ResultsPage = () => {\r\n  const [show, setShow] = useState<string>(\"movie\");\r\n  const [newValue, setNewValue] = useState<string>(\"\");\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const movies = useSelector((state: AppStateType) =>\r\n    searchMoviesSelector(state)\r\n  );\r\n  const tv = useSelector((state: AppStateType) => searchTvSelector(state));\r\n  const people = useSelector((state: AppStateType) =>\r\n    searchPeopleSelector(state)\r\n  );\r\n  const collection = useSelector((state: AppStateType) =>\r\n    searchCollectionsSelector(state)\r\n  );\r\n  const currentPage = useSelector((state: AppStateType) =>\r\n    currentPagesSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const showSearchtype = (value: string) => {\r\n    setShow(value);\r\n  };\r\n\r\n  const newSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(requestSearchQuery(e.target.value));\r\n    setNewValue(e.target.value);\r\n  };\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      dispatch(requestSearchMovie(searchQuery, currentPage));\r\n      dispatch(requestSearchTv(searchQuery, currentPage));\r\n      dispatch(requestSearchPeople(searchQuery, currentPage));\r\n      dispatch(requestSearchCollections(searchQuery, currentPage));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchMovie(searchQuery, currentPage));\r\n    dispatch(requestSearchTv(searchQuery, currentPage));\r\n    dispatch(requestSearchPeople(searchQuery, currentPage));\r\n    dispatch(requestSearchCollections(searchQuery, currentPage));\r\n  }, [newValue]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__header\">\r\n        <SearchOutlinedIcon />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie, tv show, person...\"\r\n          value={searchQuery}\r\n          onChange={newSearch}\r\n          onKeyPress={handleKeyDown}\r\n        />\r\n      </div>\r\n      <div className=\"resultspagewrapp\">\r\n        <div className=\"resultspagewrapp__body\">\r\n          <div className=\"resultspagewrapp__body__left\">\r\n            <SearchResults\r\n              query={searchQuery}\r\n              movies={movies?.total_results}\r\n              tv={tv?.total_results}\r\n              person={people?.total_results}\r\n              collections={collection?.total_results}\r\n              showSearchtype={showSearchtype}\r\n            />\r\n          </div>\r\n          <div className=\"resultspagewrapp__body__right\">\r\n            <SearchResultsItems show={show} />\r\n          </div>\r\n        </div>\r\n        <div className=\"paginator\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResults.tsx",[],"F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResultsItems.tsx",["470","471","472","473","474","475","476","477","478","479","480"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  currentPagesSelector,\r\n  searchCollectionsSelector,\r\n  searchMoviesQuerySelector,\r\n  searchMoviesSelector,\r\n  searchPeopleSelector,\r\n  searchTvSelector,\r\n  totalPagesSelector,\r\n} from \"../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\nimport NoPoster from \"../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator\";\r\nimport {\r\n  // requestCurrentPage,\r\n  requestSearchMovie,\r\n  requestSearchTv,\r\n} from \"../Store/Reducers/SearchReducer\";\r\nimport Movies from \"./SerachResult/Movie\";\r\nimport Tv from \"./SerachResult/Tvs\";\r\nimport Persons from \"./SerachResult/Person\";\r\nimport Collections from \"./SerachResult/Collections\";\r\n\r\ntype PropsType = {\r\n  // results: Array<SearchType> | undefined;\r\n  show: string;\r\n  // handalePageChange:(e:any,value:number)=>void\r\n  // page:number\r\n};\r\n\r\nconst SearchResultsItems: FC<PropsType> = ({ show }) => {\r\n  const dispatch = useDispatch();\r\n  //dispatch(requestCurrentPage(page));\r\n\r\n  const movies = useSelector((state: AppStateType) =>\r\n    searchMoviesSelector(state)\r\n  );\r\n  const tv = useSelector((state: AppStateType) => searchTvSelector(state));\r\n  const persons = useSelector((state: AppStateType) =>\r\n    searchPeopleSelector(state)\r\n  );\r\n  const collections = useSelector((state: AppStateType) =>\r\n    searchCollectionsSelector(state)\r\n  );\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const currentPage = useSelector((state: AppStateType) =>\r\n    currentPagesSelector(state)\r\n  );\r\n\r\n  //console.log(movies)\r\n  // console.log(collections)\r\n\r\n  return (\r\n    <>\r\n      {show === \"movie\" ? (\r\n        <Movies movies={movies?.results} totalPages={movies?.total_pages} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {show === \"tv\" ? (\r\n        <>\r\n          <Tv movies={tv?.results} totalPages={tv?.total_pages} />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {show === \"person\" ? (\r\n        <>\r\n          <Persons\r\n            persons={persons?.results}\r\n            totalPages={persons?.total_pages}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {show === \"collections\" ? (\r\n        <>\r\n          <Collections\r\n            collections={collections?.results}\r\n            totalPages={collections?.total_pages}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResultsItems;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Collections.tsx",["481","482"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { CollectionType } from \"../../../Types/Types\";\r\nimport NoPoster from \"../../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestSearchCollections } from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Paginator from \"../../Common/Paginator\";\r\ntype PropsType = {\r\n  collections: Array<CollectionType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\nconst Collections: FC<PropsType> = ({ collections, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchCollections(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {collections?.map((collection) => (\r\n        <div className=\"searchresultitems\" key={collection.id}>\r\n          <div className=\"searchresultitems__img\">\r\n            {collection.poster_path === null ? (\r\n              <img src={NoPoster} alt=\"pic\" />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${collection.poster_path}`}\r\n                alt=\"pic\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"searchresultitems__desc\">\r\n            <h4>{collection.name}</h4>\r\n            <p>{collection.overview.slice(0, 150)}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Collections;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Movie.tsx",["483"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { SearchType } from \"../../../Types/Types\";\r\nimport NoPoster from \"../../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginator from \"../../Common/Paginator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestSearchMovie } from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\ntype PropsType = {\r\n  movies: Array<SearchType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\n\r\nconst Movie: FC<PropsType> = ({ movies, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchMovie(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  //console.log(page);\r\n  return (\r\n    <>\r\n      {movies?.map((movie) => (\r\n        <Link to={`/movie-card/${movie.id}`} key={movie.id}>\r\n          <div className=\"searchresultitems\">\r\n            <div className=\"searchresultitems__img\">\r\n              {movie.poster_path === null ? (\r\n                <img src={NoPoster} alt=\"pic\" />\r\n              ) : (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  alt=\"pic\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"searchresultitems__desc\">\r\n              <h4>{movie.title}</h4>\r\n              <span>{movie.release_date}</span>\r\n              <p>{movie.overview.slice(0, 150)}</p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Person.tsx",["484","485"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { SearchType } from \"../../../Types/Types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoPerson from \"../../Common/NoPesrson\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { requestSearchPeople } from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Paginator from \"../../Common/Paginator\";\r\ntype PropsType = {\r\n  persons: Array<SearchType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\n\r\nconst Person: FC<PropsType> = ({ persons, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchPeople(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {persons?.map((person) => (\r\n        <div\r\n          className=\"searchresultitems searchresultitems--person\"\r\n          key={person.id}\r\n        >\r\n          <div className=\"searchresultitems__img\">\r\n            {person.profile_path === null ? (\r\n              <NoPerson />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${person.profile_path}`}\r\n                alt=\"pic\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"searchresultitems__desc\">\r\n            <h4>{person.name}</h4>\r\n            <span>{person.known_for_department}</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SerachResult\\Tvs.tsx",["486","487","488"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { SearchType } from \"../../../Types/Types\";\r\nimport NoPoster from \"../../../assets/comingSoon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginator from \"../../Common/Paginator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  requestSearchMovie,\r\n  requestSearchTv,\r\n} from \"../../Store/Reducers/SearchReducer\";\r\nimport { searchMoviesQuerySelector } from \"../../Store/Selectors/SearchSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\n// import { requestCurrentPage } from \"../../Store/Reducers/SearchReducer\";\r\ntype PropsType = {\r\n  movies: Array<SearchType> | undefined;\r\n  totalPages: number | undefined;\r\n};\r\n\r\nconst Tv: FC<PropsType> = ({ movies, totalPages }) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchTv(searchQuery, page));\r\n  }, [page]);\r\n\r\n  const searchQuery = useSelector((state: AppStateType) =>\r\n    searchMoviesQuerySelector(state)\r\n  );\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies?.map((movie) => (\r\n        <div className=\"searchresultitems\" key={movie.id}>\r\n          <div className=\"searchresultitems__img\">\r\n            {movie.poster_path === null ? (\r\n              <img src={NoPoster} alt=\"pic\" />\r\n            ) : (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt=\"pic\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"searchresultitems__desc\">\r\n            <h4>{movie.title ? movie.title : movie.name}</h4>\r\n            <span>{movie.release_date}</span>\r\n            <p>{movie.overview.slice(0, 150)}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Paginator\r\n        handalePageChange={handalePageChange}\r\n        totalPages={totalPages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tv;\r\n","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\HomePageReducer.tsx",["489"],"F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\MovieListReducer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\PeopleReducer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\SearchReducer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\HomePageSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\MovieSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\PeopleSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\SearchSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\store.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Tv\\AiringToday.tsx",["490"],"import Card from '../Common/Card';\r\nimport React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport {airingTodaySelector} from '../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport {requestAiringToday} from '../Store/Reducers/HomePageReducer';\r\n\r\nconst Popular: FC = () => {\r\n  const airingToday = useSelector((state: AppStateType) =>\r\n  airingTodaySelector(state)\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestAiringToday(page));\r\n  }, [page]);\r\n\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">Popular TV Shows</h1>\r\n      <div className=\"popularwrap\">\r\n        <div className=\"popularwrap__filters\">\r\n          <Sort />\r\n          <Filter />\r\n          <button className=\"btn btn--search_filter\" disabled={true}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className=\"popularwrap__movielist\">\r\n          {airingToday?.results.map((p, index) => (\r\n            <Link\r\n              to=\"/somewere in space\" /* {`/movie-card/${p.id}`} */\r\n              key={index}\r\n              className=\"popularwrap__movielist-link\"\r\n              target=\"_blank\"\r\n            >\r\n              <Card\r\n                poster={p.poster_path}\r\n                title={p.title}\r\n                voteAverage={p.vote_average}\r\n                realese={p.release_date}\r\n                firstAirDate={p.first_air_date}\r\n                name={p.name}\r\n              />\r\n            </Link>\r\n          ))}\r\n          <Paginatior\r\n            handalePageChange={handalePageChange}\r\n            totalPages={airingToday?.total_pages}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","F:\\REACT\\movie-app\\src\\components\\Tv\\PopularTv.tsx",["491"],"import Card from '../Common/Card';\r\nimport React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport {nowTvPlayingSelector} from '../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport {requestNowTvPlaying} from '../Store/Reducers/HomePageReducer';\r\n\r\nconst Popular: FC = () => {\r\n  const popularTv = useSelector((state: AppStateType) =>\r\n    nowTvPlayingSelector(state)\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestNowTvPlaying(page));\r\n  }, [page]);\r\n\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">Popular TV Shows</h1>\r\n      <div className=\"popularwrap\">\r\n        <div className=\"popularwrap__filters\">\r\n          <Sort />\r\n          <Filter />\r\n          <button className=\"btn btn--search_filter\" disabled={true}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className=\"popularwrap__movielist\">\r\n          {popularTv?.results.map((p, index) => (\r\n            <Link\r\n              to=\"/somewere in space\" /* {`/movie-card/${p.id}`} */\r\n              key={index}\r\n              className=\"popularwrap__movielist-link\"\r\n              target=\"_blank\"\r\n            >\r\n              <Card\r\n                poster={p.poster_path}\r\n                title={p.title}\r\n                voteAverage={p.vote_average}\r\n                realese={p.release_date}\r\n                firstAirDate={p.first_air_date}\r\n                name={p.name}\r\n              />\r\n            </Link>\r\n          ))}\r\n          <Paginatior\r\n            handalePageChange={handalePageChange}\r\n            totalPages={popularTv?.total_pages}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","F:\\REACT\\movie-app\\src\\Hoc\\withHeaderFooter.tsx",[],"F:\\REACT\\movie-app\\src\\Hoc\\withmovies.tsx",[],"F:\\REACT\\movie-app\\src\\index.tsx",[],"F:\\REACT\\movie-app\\src\\react-app-env.d.ts",[],"F:\\REACT\\movie-app\\src\\reportWebVitals.ts",[],"F:\\REACT\\movie-app\\src\\setupTests.ts",[],"F:\\REACT\\movie-app\\src\\Types\\Types.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Tv\\OnTv.tsx",["492"],"import Card from '../Common/Card';\r\nimport React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport { onTvSelector} from '../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport { requestOnTv} from '../Store/Reducers/HomePageReducer';\r\n\r\nconst Popular: FC = () => {\r\n  const onTv = useSelector((state: AppStateType) =>\r\n  onTvSelector(state)\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestOnTv(page));\r\n  }, [page]);\r\n\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">On Tv</h1>\r\n      <div className=\"popularwrap\">\r\n        <div className=\"popularwrap__filters\">\r\n          <Sort />\r\n          <Filter />\r\n          <button className=\"btn btn--search_filter\" disabled={true}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className=\"popularwrap__movielist\">\r\n          {onTv?.results.map((p, index) => (\r\n            <Link\r\n              to=\"/somewere in space\" /* {`/movie-card/${p.id}`} */\r\n              key={index}\r\n              className=\"popularwrap__movielist-link\"\r\n              target=\"_blank\"\r\n            >\r\n              <Card\r\n                poster={p.poster_path}\r\n                title={p.title}\r\n                voteAverage={p.vote_average}\r\n                realese={p.release_date}\r\n                firstAirDate={p.first_air_date}\r\n                name={p.name}\r\n              />\r\n            </Link>\r\n          ))}\r\n          <Paginatior\r\n            handalePageChange={handalePageChange}\r\n            totalPages={onTv?.total_pages}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","F:\\REACT\\movie-app\\src\\components\\Tv\\TopRatedTv.tsx",["493"],"import Card from '../Common/Card';\r\nimport React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Filter from '../Common/Filter';\r\nimport Sort from '../Common/Sort';\r\nimport { topRatedTvSelector} from '../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../Store/store';\r\nimport Paginatior from '../Common/Paginator';\r\nimport { requestTopRatedTv} from '../Store/Reducers/HomePageReducer';\r\n\r\nconst Popular: FC = () => {\r\n  const topRatedTv = useSelector((state: AppStateType) =>\r\n  topRatedTvSelector(state)\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestTopRatedTv(page));\r\n  }, [page]);\r\n\r\n  const handalePageChange = (e: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">Popular TV Shows</h1>\r\n      <div className=\"popularwrap\">\r\n        <div className=\"popularwrap__filters\">\r\n          <Sort />\r\n          <Filter />\r\n          <button className=\"btn btn--search_filter\" disabled={true}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className=\"popularwrap__movielist\">\r\n          {topRatedTv?.results.map((p, index) => (\r\n            <Link\r\n              to=\"/somewere in space\" /* {`/movie-card/${p.id}`} */\r\n              key={index}\r\n              className=\"popularwrap__movielist-link\"\r\n              target=\"_blank\"\r\n            >\r\n              <Card\r\n                poster={p.poster_path}\r\n                title={p.title}\r\n                voteAverage={p.vote_average}\r\n                realese={p.release_date}\r\n                firstAirDate={p.first_air_date}\r\n                name={p.name}\r\n              />\r\n            </Link>\r\n          ))}\r\n          <Paginatior\r\n            handalePageChange={handalePageChange}\r\n            totalPages={topRatedTv?.total_pages}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n",{"ruleId":"494","severity":1,"message":"495","line":24,"column":6,"nodeType":"496","endLine":24,"endColumn":8,"suggestions":"497"},{"ruleId":"498","severity":1,"message":"499","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":25},{"ruleId":"502","severity":1,"message":"503","line":73,"column":15,"nodeType":"504","endLine":73,"endColumn":50},{"ruleId":"502","severity":1,"message":"503","line":83,"column":15,"nodeType":"504","endLine":83,"endColumn":50},{"ruleId":"502","severity":1,"message":"503","line":88,"column":15,"nodeType":"504","endLine":88,"endColumn":50},{"ruleId":"502","severity":1,"message":"503","line":93,"column":15,"nodeType":"504","endLine":93,"endColumn":50},{"ruleId":"505","severity":1,"message":"506","line":2,"column":37,"nodeType":"507","messageId":"508","endLine":2,"endColumn":39},{"ruleId":"505","severity":1,"message":"509","line":4,"column":28,"nodeType":"507","messageId":"508","endLine":4,"endColumn":30},{"ruleId":"505","severity":1,"message":"509","line":13,"column":28,"nodeType":"507","messageId":"508","endLine":13,"endColumn":30},{"ruleId":"510","severity":1,"message":"511","line":2,"column":54,"nodeType":"512","messageId":"513","endLine":2,"endColumn":56},{"ruleId":"494","severity":1,"message":"514","line":23,"column":6,"nodeType":"496","endLine":23,"endColumn":8,"suggestions":"515"},{"ruleId":"498","severity":1,"message":"516","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":14},{"ruleId":"494","severity":1,"message":"514","line":22,"column":6,"nodeType":"496","endLine":22,"endColumn":8,"suggestions":"517"},{"ruleId":"498","severity":1,"message":"518","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":26},{"ruleId":"498","severity":1,"message":"518","line":1,"column":16,"nodeType":"500","messageId":"501","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"519","line":23,"column":34,"nodeType":"507","messageId":"508","endLine":23,"endColumn":36},{"ruleId":"498","severity":1,"message":"520","line":4,"column":44,"nodeType":"500","messageId":"501","endLine":4,"endColumn":55},{"ruleId":"498","severity":1,"message":"521","line":4,"column":57,"nodeType":"500","messageId":"501","endLine":4,"endColumn":66},{"ruleId":"498","severity":1,"message":"522","line":12,"column":8,"nodeType":"500","messageId":"501","endLine":12,"endColumn":17},{"ruleId":"494","severity":1,"message":"514","line":24,"column":6,"nodeType":"496","endLine":24,"endColumn":8,"suggestions":"523"},{"ruleId":"494","severity":1,"message":"514","line":23,"column":6,"nodeType":"496","endLine":23,"endColumn":8,"suggestions":"524"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":8,"suggestions":"525"},{"ruleId":"502","severity":1,"message":"503","line":41,"column":15,"nodeType":"504","endLine":41,"endColumn":59},{"ruleId":"505","severity":1,"message":"526","line":33,"column":38,"nodeType":"507","messageId":"527","endLine":33,"endColumn":40},{"ruleId":"502","severity":1,"message":"503","line":51,"column":13,"nodeType":"504","endLine":51,"endColumn":61},{"ruleId":"502","severity":1,"message":"503","line":56,"column":13,"nodeType":"504","endLine":56,"endColumn":61},{"ruleId":"502","severity":1,"message":"503","line":61,"column":13,"nodeType":"504","endLine":61,"endColumn":61},{"ruleId":"502","severity":1,"message":"503","line":47,"column":13,"nodeType":"504","endLine":47,"endColumn":62},{"ruleId":"505","severity":1,"message":"528","line":17,"column":32,"nodeType":"507","messageId":"527","endLine":17,"endColumn":34},{"ruleId":"498","severity":1,"message":"529","line":49,"column":7,"nodeType":"500","messageId":"501","endLine":49,"endColumn":14},{"ruleId":"502","severity":1,"message":"503","line":89,"column":15,"nodeType":"504","endLine":92,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":111,"column":15,"nodeType":"504","endLine":114,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":122,"column":15,"nodeType":"504","endLine":125,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":133,"column":15,"nodeType":"504","endLine":136,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":144,"column":15,"nodeType":"504","endLine":147,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":14,"column":18,"nodeType":"504","endLine":14,"endColumn":63},{"ruleId":"502","severity":1,"message":"503","line":15,"column":18,"nodeType":"504","endLine":15,"endColumn":63},{"ruleId":"502","severity":1,"message":"503","line":16,"column":18,"nodeType":"504","endLine":16,"endColumn":63},{"ruleId":"502","severity":1,"message":"503","line":24,"column":16,"nodeType":"504","endLine":24,"endColumn":61},{"ruleId":"502","severity":1,"message":"503","line":32,"column":17,"nodeType":"504","endLine":32,"endColumn":62},{"ruleId":"502","severity":1,"message":"503","line":40,"column":16,"nodeType":"504","endLine":40,"endColumn":61},{"ruleId":"502","severity":1,"message":"503","line":41,"column":18,"nodeType":"504","endLine":41,"endColumn":63},{"ruleId":"502","severity":1,"message":"503","line":42,"column":18,"nodeType":"504","endLine":42,"endColumn":63},{"ruleId":"505","severity":1,"message":"526","line":126,"column":36,"nodeType":"507","messageId":"527","endLine":126,"endColumn":38},{"ruleId":"505","severity":1,"message":"526","line":141,"column":33,"nodeType":"507","messageId":"527","endLine":141,"endColumn":35},{"ruleId":"502","severity":1,"message":"503","line":170,"column":15,"nodeType":"504","endLine":170,"endColumn":81},{"ruleId":"502","severity":1,"message":"503","line":178,"column":15,"nodeType":"504","endLine":182,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":196,"column":15,"nodeType":"504","endLine":200,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":204,"column":15,"nodeType":"504","endLine":204,"endColumn":79},{"ruleId":"502","severity":1,"message":"503","line":208,"column":15,"nodeType":"504","endLine":212,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":218,"column":15,"nodeType":"504","endLine":218,"endColumn":81},{"ruleId":"494","severity":1,"message":"514","line":21,"column":8,"nodeType":"496","endLine":21,"endColumn":14,"suggestions":"530"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":8,"nodeType":"496","endLine":21,"endColumn":14,"suggestions":"531"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":8,"nodeType":"496","endLine":21,"endColumn":14,"suggestions":"532"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":8,"nodeType":"496","endLine":21,"endColumn":14,"suggestions":"533"},{"ruleId":"498","severity":1,"message":"534","line":14,"column":9,"nodeType":"500","messageId":"501","endLine":14,"endColumn":17},{"ruleId":"502","severity":1,"message":"503","line":112,"column":19,"nodeType":"504","endLine":112,"endColumn":73},{"ruleId":"502","severity":1,"message":"503","line":154,"column":19,"nodeType":"504","endLine":154,"endColumn":73},{"ruleId":"502","severity":1,"message":"503","line":159,"column":23,"nodeType":"504","endLine":159,"endColumn":69},{"ruleId":"502","severity":1,"message":"503","line":166,"column":19,"nodeType":"504","endLine":166,"endColumn":73},{"ruleId":"502","severity":1,"message":"503","line":171,"column":23,"nodeType":"504","endLine":171,"endColumn":69},{"ruleId":"502","severity":1,"message":"503","line":176,"column":23,"nodeType":"504","endLine":176,"endColumn":69},{"ruleId":"502","severity":1,"message":"503","line":181,"column":23,"nodeType":"504","endLine":181,"endColumn":69},{"ruleId":"502","severity":1,"message":"503","line":195,"column":17,"nodeType":"504","endLine":195,"endColumn":71},{"ruleId":"502","severity":1,"message":"503","line":234,"column":17,"nodeType":"504","endLine":234,"endColumn":71},{"ruleId":"502","severity":1,"message":"503","line":267,"column":17,"nodeType":"504","endLine":267,"endColumn":71},{"ruleId":"502","severity":1,"message":"503","line":272,"column":21,"nodeType":"504","endLine":272,"endColumn":67},{"ruleId":"502","severity":1,"message":"503","line":279,"column":17,"nodeType":"504","endLine":279,"endColumn":71},{"ruleId":"502","severity":1,"message":"503","line":284,"column":21,"nodeType":"504","endLine":284,"endColumn":67},{"ruleId":"502","severity":1,"message":"503","line":289,"column":21,"nodeType":"504","endLine":289,"endColumn":67},{"ruleId":"502","severity":1,"message":"503","line":294,"column":21,"nodeType":"504","endLine":294,"endColumn":67},{"ruleId":"502","severity":1,"message":"503","line":306,"column":15,"nodeType":"504","endLine":310,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":360,"column":15,"nodeType":"504","endLine":360,"endColumn":70},{"ruleId":"498","severity":1,"message":"535","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":20},{"ruleId":"498","severity":1,"message":"536","line":14,"column":3,"nodeType":"500","messageId":"501","endLine":14,"endColumn":21},{"ruleId":"494","severity":1,"message":"537","line":69,"column":6,"nodeType":"496","endLine":69,"endColumn":16,"suggestions":"538"},{"ruleId":"498","severity":1,"message":"518","line":1,"column":21,"nodeType":"500","messageId":"501","endLine":1,"endColumn":30},{"ruleId":"498","severity":1,"message":"499","line":1,"column":32,"nodeType":"500","messageId":"501","endLine":1,"endColumn":40},{"ruleId":"498","severity":1,"message":"536","line":10,"column":3,"nodeType":"500","messageId":"501","endLine":10,"endColumn":21},{"ruleId":"498","severity":1,"message":"539","line":13,"column":8,"nodeType":"500","messageId":"501","endLine":13,"endColumn":16},{"ruleId":"498","severity":1,"message":"516","line":14,"column":10,"nodeType":"500","messageId":"501","endLine":14,"endColumn":14},{"ruleId":"498","severity":1,"message":"540","line":15,"column":8,"nodeType":"500","messageId":"501","endLine":15,"endColumn":17},{"ruleId":"498","severity":1,"message":"541","line":18,"column":3,"nodeType":"500","messageId":"501","endLine":18,"endColumn":21},{"ruleId":"498","severity":1,"message":"542","line":19,"column":3,"nodeType":"500","messageId":"501","endLine":19,"endColumn":18},{"ruleId":"498","severity":1,"message":"534","line":34,"column":9,"nodeType":"500","messageId":"501","endLine":34,"endColumn":17},{"ruleId":"498","severity":1,"message":"543","line":47,"column":9,"nodeType":"500","messageId":"501","endLine":47,"endColumn":20},{"ruleId":"498","severity":1,"message":"544","line":50,"column":9,"nodeType":"500","messageId":"501","endLine":50,"endColumn":20},{"ruleId":"498","severity":1,"message":"516","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":14},{"ruleId":"494","severity":1,"message":"545","line":20,"column":6,"nodeType":"496","endLine":20,"endColumn":12,"suggestions":"546"},{"ruleId":"494","severity":1,"message":"545","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":12,"suggestions":"547"},{"ruleId":"498","severity":1,"message":"516","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"494","severity":1,"message":"545","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":12,"suggestions":"548"},{"ruleId":"498","severity":1,"message":"516","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":14},{"ruleId":"498","severity":1,"message":"541","line":8,"column":3,"nodeType":"500","messageId":"501","endLine":8,"endColumn":21},{"ruleId":"494","severity":1,"message":"545","line":25,"column":6,"nodeType":"496","endLine":25,"endColumn":12,"suggestions":"549"},{"ruleId":"498","severity":1,"message":"550","line":1,"column":39,"nodeType":"500","messageId":"501","endLine":1,"endColumn":51},{"ruleId":"494","severity":1,"message":"514","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":12,"suggestions":"551"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":12,"suggestions":"552"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":12,"suggestions":"553"},{"ruleId":"494","severity":1,"message":"514","line":21,"column":6,"nodeType":"496","endLine":21,"endColumn":12,"suggestions":"554"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispach'. Either include it or remove the dependency array.","ArrayExpression",["555"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a return value from arrow function.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["556"],"'Link' is defined but never used.",["557"],"'useEffect' is defined but never used.","Array.prototype.find() expects a return value from arrow function.","'PopularType' is defined but never used.","'VideoType' is defined but never used.","'MovieList' is defined but never used.",["558"],["559"],["560"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.find() expects a value to be returned at the end of arrow function.","'percent' is assigned a value but never used.",["561"],["562"],["563"],["564"],"'dispatch' is assigned a value but never used.","'Key' is defined but never used.","'totalPagesSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', and 'searchQuery'. Either include them or remove the dependency array.",["565"],"'NoPoster' is defined but never used.","'Paginator' is defined but never used.","'requestSearchMovie' is defined but never used.","'requestSearchTv' is defined but never used.","'searchQuery' is assigned a value but never used.","'currentPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'searchQuery'. Either include them or remove the dependency array.",["566"],["567"],["568"],["569"],"'getSearchApi' is defined but never used.",["570"],["571"],["572"],["573"],{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"576","fix":"578"},{"desc":"576","fix":"579"},{"desc":"576","fix":"580"},{"desc":"576","fix":"581"},{"desc":"582","fix":"583"},{"desc":"582","fix":"584"},{"desc":"582","fix":"585"},{"desc":"582","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"589","fix":"591"},{"desc":"589","fix":"592"},{"desc":"589","fix":"593"},{"desc":"582","fix":"594"},{"desc":"582","fix":"595"},{"desc":"582","fix":"596"},{"desc":"582","fix":"597"},"Update the dependencies array to be: [dispach]",{"range":"598","text":"599"},"Update the dependencies array to be: [dispatch]",{"range":"600","text":"601"},{"range":"602","text":"601"},{"range":"603","text":"601"},{"range":"604","text":"601"},{"range":"605","text":"601"},"Update the dependencies array to be: [dispatch, page]",{"range":"606","text":"607"},{"range":"608","text":"607"},{"range":"609","text":"607"},{"range":"610","text":"607"},"Update the dependencies array to be: [currentPage, dispatch, newValue, searchQuery]",{"range":"611","text":"612"},"Update the dependencies array to be: [dispatch, page, searchQuery]",{"range":"613","text":"614"},{"range":"615","text":"614"},{"range":"616","text":"614"},{"range":"617","text":"614"},{"range":"618","text":"607"},{"range":"619","text":"607"},{"range":"620","text":"607"},{"range":"621","text":"607"},[952,954],"[dispach]",[817,819],"[dispatch]",[832,834],[778,780],[776,778],[793,795],[800,806],"[dispatch, page]",[800,806],[788,794],[790,796],[2400,2410],"[currentPage, dispatch, newValue, searchQuery]",[875,881],"[dispatch, page, searchQuery]",[841,847],[838,844],[937,943],[771,777],[775,781],[738,744],[768,774]]