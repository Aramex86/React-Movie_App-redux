[{"F:\\REACT\\movie-app\\src\\Api\\Api.tsx":"1","F:\\REACT\\movie-app\\src\\App.test.tsx":"2","F:\\REACT\\movie-app\\src\\App.tsx":"3","F:\\REACT\\movie-app\\src\\components\\Common\\HeroNav.tsx":"4","F:\\REACT\\movie-app\\src\\components\\Common\\HomePageCard.tsx":"5","F:\\REACT\\movie-app\\src\\components\\Common\\Loader.tsx":"6","F:\\REACT\\movie-app\\src\\components\\Common\\movieInfoToolTip.tsx":"7","F:\\REACT\\movie-app\\src\\components\\Common\\Paginator.tsx":"8","F:\\REACT\\movie-app\\src\\components\\Common\\SocialComp.tsx":"9","F:\\REACT\\movie-app\\src\\components\\Footer\\Footer.tsx":"10","F:\\REACT\\movie-app\\src\\components\\FullActorsList\\FullList.tsx":"11","F:\\REACT\\movie-app\\src\\components\\Helper\\allMedia.tsx":"12","F:\\REACT\\movie-app\\src\\components\\Helper\\crewstaff.tsx":"13","F:\\REACT\\movie-app\\src\\components\\Helper\\filterData.tsx":"14","F:\\REACT\\movie-app\\src\\components\\Helper\\mtchId.tsx":"15","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreeToWatch.tsx":"16","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreetToWatchNav.tsx":"17","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Movies.tsx":"18","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Tv.tsx":"19","F:\\REACT\\movie-app\\src\\components\\Home\\Hero.tsx":"20","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Trailers.tsx":"21","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Videos.tsx":"22","F:\\REACT\\movie-app\\src\\components\\Home\\Movielist.tsx":"23","F:\\REACT\\movie-app\\src\\components\\Home\\MovielistContainer.tsx":"24","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\ForRent.tsx":"25","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\InTheater.tsx":"26","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\OnTv.tsx":"27","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Popular.tsx":"28","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Streaming.tsx":"29","F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Tranding.tsx":"30","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardActors.tsx":"31","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardHeader.tsx":"32","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardInfo.tsx":"33","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMedia.tsx":"34","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMediaAll.tsx":"35","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocial.tsx":"36","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocialAll.tsx":"37","F:\\REACT\\movie-app\\src\\components\\MovieCard\\MovieCardContainer.tsx":"38","F:\\REACT\\movie-app\\src\\components\\MovieCard\\PopupTrailer.tsx":"39","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\CardPoster.tsx":"40","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\PosterStaffPage.tsx":"41","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCard.tsx":"42","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCardMovielist.tsx":"43","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffHeader.tsx":"44","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffKnowFor.tsx":"45","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Recomandations\\CardRecomand.tsx":"46","F:\\REACT\\movie-app\\src\\components\\MovielistHeader\\MovielistHeader.tsx":"47","F:\\REACT\\movie-app\\src\\components\\NaigationBar\\NavBar.tsx":"48","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\ResultsPage.tsx":"49","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResults.tsx":"50","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResultsItems.tsx":"51","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\HomePageReducer.tsx":"52","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\MovieListReducer.tsx":"53","F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\PeopleReducer.tsx":"54","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\HomePageSelector.tsx":"55","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\MovieSelector.tsx":"56","F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\PeopleSelector.tsx":"57","F:\\REACT\\movie-app\\src\\components\\Store\\store.tsx":"58","F:\\REACT\\movie-app\\src\\Hoc\\withHeaderFooter.tsx":"59","F:\\REACT\\movie-app\\src\\Hoc\\withmovies.tsx":"60","F:\\REACT\\movie-app\\src\\index.tsx":"61","F:\\REACT\\movie-app\\src\\react-app-env.d.ts":"62","F:\\REACT\\movie-app\\src\\reportWebVitals.ts":"63","F:\\REACT\\movie-app\\src\\setupTests.ts":"64","F:\\REACT\\movie-app\\src\\Types\\Types.tsx":"65"},{"size":6613,"mtime":1607951174983,"results":"66","hashOfConfig":"67"},{"size":273,"mtime":1603735837181,"results":"68","hashOfConfig":"67"},{"size":1652,"mtime":1607500001008,"results":"69","hashOfConfig":"67"},{"size":2027,"mtime":1607348932758,"results":"70","hashOfConfig":"67"},{"size":1702,"mtime":1607954723631,"results":"71","hashOfConfig":"67"},{"size":277,"mtime":1603831657498,"results":"72","hashOfConfig":"67"},{"size":1111,"mtime":1606568079604,"results":"73","hashOfConfig":"67"},{"size":182,"mtime":1607507361775,"results":"74","hashOfConfig":"67"},{"size":1168,"mtime":1606837490978,"results":"75","hashOfConfig":"67"},{"size":187,"mtime":1605169198764,"results":"76","hashOfConfig":"67"},{"size":167,"mtime":1605600955270,"results":"77","hashOfConfig":"67"},{"size":110,"mtime":1605629075347,"results":"78","hashOfConfig":"67"},{"size":181,"mtime":1606205922912,"results":"79","hashOfConfig":"67"},{"size":385,"mtime":1606329705645,"results":"80","hashOfConfig":"67"},{"size":129,"mtime":1604692652048,"results":"81","hashOfConfig":"67"},{"size":835,"mtime":1607514632391,"results":"82","hashOfConfig":"67"},{"size":1299,"mtime":1607683170924,"results":"83","hashOfConfig":"67"},{"size":1074,"mtime":1607433817888,"results":"84","hashOfConfig":"67"},{"size":1122,"mtime":1607498116105,"results":"85","hashOfConfig":"67"},{"size":2048,"mtime":1607950980340,"results":"86","hashOfConfig":"67"},{"size":2543,"mtime":1607955319864,"results":"87","hashOfConfig":"67"},{"size":1263,"mtime":1607955031074,"results":"88","hashOfConfig":"67"},{"size":2762,"mtime":1607514956738,"results":"89","hashOfConfig":"67"},{"size":2321,"mtime":1607953431394,"results":"90","hashOfConfig":"67"},{"size":668,"mtime":1607514647632,"results":"91","hashOfConfig":"67"},{"size":672,"mtime":1607514652710,"results":"92","hashOfConfig":"67"},{"size":662,"mtime":1607514658838,"results":"93","hashOfConfig":"67"},{"size":1310,"mtime":1607514638186,"results":"94","hashOfConfig":"67"},{"size":776,"mtime":1607514665862,"results":"95","hashOfConfig":"67"},{"size":194,"mtime":1607953725658,"results":"96","hashOfConfig":"67"},{"size":2793,"mtime":1607020778765,"results":"97","hashOfConfig":"67"},{"size":2271,"mtime":1605727259637,"results":"98","hashOfConfig":"67"},{"size":1765,"mtime":1605778822768,"results":"99","hashOfConfig":"67"},{"size":3220,"mtime":1606114161460,"results":"100","hashOfConfig":"67"},{"size":177,"mtime":1605774584840,"results":"101","hashOfConfig":"67"},{"size":2866,"mtime":1605625291886,"results":"102","hashOfConfig":"67"},{"size":181,"mtime":1605612537536,"results":"103","hashOfConfig":"67"},{"size":3919,"mtime":1607686857754,"results":"104","hashOfConfig":"67"},{"size":1448,"mtime":1607686546372,"results":"105","hashOfConfig":"67"},{"size":6550,"mtime":1607426725053,"results":"106","hashOfConfig":"67"},{"size":1954,"mtime":1606838930879,"results":"107","hashOfConfig":"67"},{"size":3992,"mtime":1606988826172,"results":"108","hashOfConfig":"67"},{"size":1689,"mtime":1606377127346,"results":"109","hashOfConfig":"67"},{"size":1838,"mtime":1606838715375,"results":"110","hashOfConfig":"67"},{"size":33241,"mtime":1606812014181,"results":"111","hashOfConfig":"67"},{"size":1090,"mtime":1605727283270,"results":"112","hashOfConfig":"67"},{"size":186,"mtime":1603797459626,"results":"113","hashOfConfig":"67"},{"size":12426,"mtime":1607500818395,"results":"114","hashOfConfig":"67"},{"size":967,"mtime":1607507313023,"results":"115","hashOfConfig":"67"},{"size":1683,"mtime":1607505797903,"results":"116","hashOfConfig":"67"},{"size":487,"mtime":1607509978855,"results":"117","hashOfConfig":"67"},{"size":4290,"mtime":1607950999583,"results":"118","hashOfConfig":"67"},{"size":5920,"mtime":1606985867873,"results":"119","hashOfConfig":"67"},{"size":3125,"mtime":1606814118011,"results":"120","hashOfConfig":"67"},{"size":679,"mtime":1607949937151,"results":"121","hashOfConfig":"67"},{"size":878,"mtime":1605728631305,"results":"122","hashOfConfig":"67"},{"size":429,"mtime":1606813554467,"results":"123","hashOfConfig":"67"},{"size":805,"mtime":1606986829743,"results":"124","hashOfConfig":"67"},{"size":317,"mtime":1605168845041,"results":"125","hashOfConfig":"67"},{"size":1010,"mtime":1605857726390,"results":"126","hashOfConfig":"67"},{"size":735,"mtime":1603831964532,"results":"127","hashOfConfig":"67"},{"size":41,"mtime":1603793689170,"results":"128","hashOfConfig":"67"},{"size":426,"mtime":1603735837181,"results":"129","hashOfConfig":"67"},{"size":241,"mtime":1603735837181,"results":"130","hashOfConfig":"67"},{"size":7370,"mtime":1607583739224,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rs8fux",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\REACT\\movie-app\\src\\Api\\Api.tsx",[],"F:\\REACT\\movie-app\\src\\App.test.tsx",[],"F:\\REACT\\movie-app\\src\\App.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\HeroNav.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\HomePageCard.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Loader.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\movieInfoToolTip.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\Paginator.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Common\\SocialComp.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Footer\\Footer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\FullActorsList\\FullList.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Helper\\allMedia.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Helper\\crewstaff.tsx",["278"],"export const crewStaff = (props:any,name: string, arr:[{}]) => {\r\n    props.map((i: { job: string; }) => {\r\n      if (i.job === name) {\r\n        arr.push(i);\r\n      }\r\n    });\r\n  };","F:\\REACT\\movie-app\\src\\components\\Helper\\filterData.tsx",["279","280"],"\r\n\r\nexport const filterData=(arr1:any,arr2:any,value:string)=>{\r\n    arr1.filter((item:any) =>{\r\n        if(item.media_type === value){\r\n          arr2.push(item)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const filterDepartament=(arr1:any,arr2:any,value:string)=>{\r\n    arr1.filter((item:any) => {\r\n        if(item.department === value){\r\n           arr2.push(item)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n","F:\\REACT\\movie-app\\src\\components\\Helper\\mtchId.tsx",["281"],"export const matchIdFunc = (array: any[], value: any) => {\r\n  return array.filter((item: { id: any }) => item.id == value);\r\n};\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreeToWatch.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\FreetToWatchNav.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Movies.tsx",["282"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { requestNowPlaying } from \"../../Store/Reducers/HomePageReducer\";\r\nimport { nowPlayingSelector } from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\nimport Card from \"../../Common/HomePageCard\";\r\n\r\nconst Movies = () => {\r\n  const nowPlayingMovies = useSelector((state: AppStateType) =>\r\n    nowPlayingSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(requestNowPlaying(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {nowPlayingMovies.map((movie) => (\r\n        <Link to={`movie-card/${movie.id}`} key={movie.id}>\r\n          <Card\r\n            poster={movie.poster_path}\r\n            title={movie.title}\r\n            realese={movie.release_date}\r\n            voteAverage={movie.vote_average}\r\n          />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\FreeToWatch\\Tv.tsx",["283","284"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../Common/HomePageCard\";\r\nimport { requestNowTvPlaying } from \"../../Store/Reducers/HomePageReducer\";\r\nimport { nowTvPlayingSelector } from \"../../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../../Store/store\";\r\n\r\nconst Tv = () => {\r\n  const nowTvPlaying = useSelector((state: AppStateType) =>\r\n    nowTvPlayingSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(requestNowTvPlaying(Math.floor(Math.random() * 20) + 1));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardwrapp\">\r\n      {nowTvPlaying.map((movie:any)=> (\r\n      /*   <Link to={`movie-card/${movie.id}`} key={movie.id}> */\r\n          <Card key={movie.id}\r\n            poster={movie.poster_path}\r\n            title={movie.name}\r\n            realese={movie.first_air_date}\r\n            voteAverage={movie.vote_average}\r\n          />\r\n        /* </Link> */\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tv;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\Hero.tsx",["285","286"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { PopularType } from \"../../Types/Types\";\r\nimport { requestSearchMovie } from \"../Store/Reducers/HomePageReducer\";\r\nimport { searchMoviesSelector } from \"../Store/Selectors/HomePageSelector\";\r\nimport { AppStateType } from \"../Store/store\";\r\n\r\ntype PropsType = {\r\n  bgPopular: Array<PopularType>;\r\n};\r\n\r\nconst Hero: React.FC<PropsType> = ({ bgPopular }) => {\r\n  const movieSearch = useSelector((state: AppStateType) =>\r\n    searchMoviesSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchMovie, setSearchMovie] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(requestSearchMovie(searchMovie));\r\n  }, []);\r\n\r\n  const handldleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchMovie(e.target.value);\r\n  };\r\n\r\n \r\n\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  const bgImages: Array<string> = bgPopular.map(\r\n    (item) => `${baseUrl}${item.backdrop_path}`\r\n  );\r\n\r\n  const randomImg = bgImages[Math.floor(Math.random() * bgImages.length)];\r\n  \r\n\r\n  return (\r\n    <div\r\n      className=\"herowrapp__container\"\r\n      style={{\r\n        background: `linear-gradient(to left, rgb(18 65 123 / 65%), rgb(29 101 162)), url(${randomImg}) center center / cover`,\r\n      }}\r\n    >\r\n      <div className=\"hero_heading\">\r\n        <h1 className=\"hero_heading__big\">Welcome.</h1>\r\n        <h3 className=\"hero_heading__subheading\">\r\n          Millions of movies, TV shows and people to discover. Explore now.\r\n        </h3>\r\n      </div>\r\n      <div className=\"searchinput\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie, tv show, person......\"\r\n          value={searchMovie}\r\n          onChange={handldleChange}\r\n        />\r\n        <button\r\n          className=\"btn btn--hero\"\r\n          onClick={() => dispatch(requestSearchMovie(searchMovie))}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Trailers.tsx",["287","288"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  homeVideosSelector,\r\n  popularSelector,\r\n} from '../../Store/Selectors/HomePageSelector';\r\nimport {AppStateType} from '../../Store/store';\r\nimport Video from './Videos';\r\nimport {FaPlay} from 'react-icons/fa';\r\nimport {PopularType} from '../../../Types/Types';\r\nimport {requestTrailers} from '../../Store/Reducers/HomePageReducer';\r\n\r\nconst Trailers = () => {\r\n  const [bg, setBg] = useState<PopularType>();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const popular = useSelector((state: AppStateType) => popularSelector(state));\r\n  const trailers = useSelector((state: AppStateType) =>\r\n    homeVideosSelector(state)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const checkIds = (valueId: number) => {\r\n    popular.find((item) => {\r\n      if (item.id === valueId) {\r\n        setBg(item);\r\n      }\r\n    });\r\n  };\r\n\r\n  const closeModal=()=>{\r\n    setOpenModal(false);\r\n  }\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div\r\n      className=\"trailerswrapp\"\r\n      style={{\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/w500${bg?.backdrop_path})`,\r\n      }}\r\n    >\r\n      <div className=\"videos\">\r\n        <Video trailers={trailers} openModal={openModal} closeModal={closeModal}/>\r\n      </div>\r\n      <div className=\"trailerswrapp__substrate\">\r\n        <h2 className=\"trailerswrapp__substrate__heading\">Latest Trailers</h2>\r\n        <div className=\"videowrap\">\r\n          {popular.map((item) => (\r\n            <div\r\n              className=\"container\"\r\n              key={item.id}\r\n              onMouseEnter={() => checkIds(item.id)}\r\n            >\r\n              <div className=\"container__img\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${item.backdrop_path}`}\r\n                  alt=\"poster\"\r\n                />\r\n                <button\r\n                  className=\"btn btn--play\"\r\n                  onClick={() => {\r\n                    dispatch(requestTrailers(item.id));\r\n                    setOpenModal(true);\r\n                  }}\r\n                >\r\n                  <FaPlay />\r\n                </button>\r\n              </div>\r\n              <div className=\"container__title\">\r\n                <span>{item.title}</span>\r\n                <br/>\r\n                <span>Realese Date : {item.release_date.toLocaleString(Date())}</span>\r\n                </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trailers;\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\LatestTrailers\\Videos.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Movielist.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\MovielistContainer.tsx",["289"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {MovieListType, PopularType, VideoType} from '../../Types/Types';\r\nimport {requestMovieList} from '../Store/Reducers/MovieListReducer';\r\n\r\nimport {\r\n  isFetchingSelector,\r\n  moviesSelector,\r\n} from '../Store/Selectors/MovieSelector';\r\nimport {AppStateType} from '../Store/store';\r\nimport MovieList from './Movielist';\r\nimport HeroSection from './Hero';\r\nimport Popular from './Popular/Popular';\r\nimport {\r\n  //homeVideosSelector,\r\n  popularSelector,\r\n} from '../Store/Selectors/HomePageSelector';\r\nimport {\r\n  requestPopularMovies,\r\n  //requestHomeMovies,\r\n} from '../Store/Reducers/HomePageReducer';\r\nimport FreeToWatch from './FreeToWatch/FreeToWatch';\r\nimport Trailers from './LatestTrailers/Trailers';\r\nimport Tranding from './Tranding/Tranding';\r\n\r\ntype MapStateToPropsType = {\r\n  movieList: Array<MovieListType>;\r\n  isFetching: boolean;\r\n  movies?: any;\r\n  popularMovies: Array<PopularType>;\r\n  //homeVideo: Array<VideoType>;\r\n};\r\n\r\ntype MapDispatchPropsType = {\r\n  requestMovieList: () => void;\r\n  requestPopularMovies: (pagenr: any) => void;\r\n};\r\n\r\ntype OwnPropsType = {};\r\n\r\ntype PropsType = MapStateToPropsType &\r\n  MapDispatchPropsType &\r\n  OwnPropsType &\r\n  AppStateType;\r\n\r\nclass MovielistContainer extends Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.requestMovieList();\r\n    this.props.requestPopularMovies(Math.floor(Math.random() * 10) + 1);\r\n    \r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        <HeroSection bgPopular={this.props.popularMovies} />\r\n        <Popular popularMovies={this.props.popularMovies} />\r\n        <FreeToWatch />\r\n\r\n        <Trailers />\r\n        <Tranding />\r\n\r\n        <MovieList\r\n          movieList={this.props.movieList}\r\n          isFetching={this.props.isFetching}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport let mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    movieList: moviesSelector(state),\r\n    isFetching: isFetchingSelector(state),\r\n    popularMovies: popularSelector(state),\r\n  };\r\n};\r\n\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispatchPropsType,\r\n  OwnPropsType,\r\n  AppStateType\r\n>(mapStateToProps, {requestMovieList, requestPopularMovies})(\r\n  MovielistContainer\r\n);\r\n","F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\ForRent.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\InTheater.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\OnTv.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Popular.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Popular\\Streaming.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Home\\Tranding\\Tranding.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardActors.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardHeader.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardInfo.tsx",["290"],"import React from \"react\";\r\nimport { KeywordsType, MovieDetailsType } from \"../../Types/Types\";\r\n\r\ntype PropType = {\r\n  details: MovieDetailsType | null;\r\n  keywords: Array<KeywordsType>;\r\n};\r\n\r\nconst CardInfo = ({ details, keywords }: PropType) => {\r\n  return (\r\n    <div className=\"cardInfoWrapp\">\r\n      <ul className=\"cardInfoList\">\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Status</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{details?.status}</span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Original Language</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">\r\n            {details?.spoken_languages.map((l) => l.name)}\r\n          </span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Budget</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{`$${details?.budget}`}</span>\r\n        </li>\r\n        <li className=\"cardInfoList__item\">\r\n          <span className=\"cardInfoList__item__header\">Revenue</span>\r\n          <br />\r\n          <span className=\"cardInfoList__item__info\">{`$${details?.revenue}`}</span>\r\n        </li>\r\n      </ul>\r\n      <div className=\"keywordsWrapp\">\r\n        <h4>Keywords</h4>\r\n        <ul className=\"keywordsWrapp__list\">\r\n          {keywords.map((k) => (\r\n            <li className=\"keywordsWrapp__item\" key={k.id}>\r\n              <a href=\"#\" className=\"keywordsWrapp__link\">\r\n                {k.name}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMedia.tsx",["291","292","293","294"],"import React from 'react';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\nimport PlayCircleFilledWhiteRoundedIcon from '@material-ui/icons/PlayCircleFilledWhiteRounded';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {MovieDetailsType, VideoType} from '../../../Types/Types';\r\nimport {allMedia} from '../../Helper/allMedia';\r\n\r\ntype PropsType = {\r\n  details: MovieDetailsType | null;\r\n  videos: Array<VideoType>;\r\n};\r\n\r\nconst CardMedia = ({details, videos}: PropsType) => {\r\n  const allImg: Array<string> = [];\r\n  allMedia(\r\n    details?.belongs_to_collection === null\r\n      ? ''\r\n      : details?.belongs_to_collection.poster_path,\r\n    details?.poster_path,\r\n    allImg\r\n  );\r\n  allMedia(\r\n    details?.belongs_to_collection === null\r\n      ? ''\r\n      : details?.belongs_to_collection.backdrop_path,\r\n    details?.backdrop_path,\r\n    allImg\r\n  );\r\n  const addPrefix = allImg.map(\r\n    (item: string) => `https://image.tmdb.org/t/p/w500${item}`\r\n  );\r\n  const noImg = addPrefix.filter((i) => {\r\n    if (i.includes('.jpg')) return i;\r\n  });\r\n\r\n  return (\r\n    <div className=\"mediaWrapp\">\r\n      <div className=\"mediaWrapp__header\">\r\n        <h3 className=\"mediaWrapp__header-heading\">Media</h3>\r\n        <ul className=\"mediaWrapp__header-list\">\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <Link\r\n              to=\"/allmedia\"\r\n              className=\"mediaWrapp__header-link mediaWrapp__header-link--active\"\r\n            >\r\n              All Media <span>{addPrefix.length + videos.length}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Videos <span>{videos.length}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Backdrops <span>{addPrefix.slice(0, 2).length}</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"mediaWrapp__header-item\">\r\n            <a href=\"#\" className=\"mediaWrapp__header-link\">\r\n              Posters <span>{addPrefix.slice(2, 4).length}</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"mediaWrapp__wrapper\">\r\n        <div className=\"mediaWrapp__wrapper-media\">\r\n          {noImg.reverse().map((item: string, index: number) => (\r\n            <img src={item} alt=\"poster\" key={index} />\r\n          ))}\r\n          {videos.slice(0, 2).map((video) => (\r\n            <div className=\"mediaWrapp__wrapper-videolink\" key={video.id}>\r\n              {' '}\r\n              <a\r\n                className=\"mediaWrapp__wrapper-videolink-link\"\r\n                href={`https://www.youtube.com/watch?v=${video.key}`}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <PlayCircleFilledWhiteRoundedIcon />\r\n              </a>\r\n            </div>\r\n          ))}\r\n          <div>\r\n            <Link to=\"/allmedia\">\r\n              View More <ArrowForwardRoundedIcon />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMedia;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardMedia\\CardMediaAll.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocial.tsx",["295"],"import React from \"react\";\r\nimport StarRateRoundedIcon from \"@material-ui/icons/StarRateRounded\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ResultsType } from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n  reviews: Array<ResultsType>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  })\r\n);\r\nconst CardMedia = ({ reviews }: PropsType) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"socialWrapp\">\r\n      <div className=\"socialWrapp__header\">\r\n        <h3 className=\"socialWrapp__header-heading\">Social</h3>\r\n        <ul className=\"socialWrapp__header-list\">\r\n          <li className=\"socialWrapp__header-item\">\r\n            <Link\r\n              to=\"/allreview\"\r\n              className=\"socialWrapp__header-link socialWrapp__header-link--active\"\r\n            >\r\n              Reviews <span>{reviews.length}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"socialWrapp__header-item\">\r\n            <a href=\"#\" className=\"socialWrapp__header-link\">\r\n              Discussions <span>6</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {reviews.slice(0, 1).map((review) => (\r\n        <div className=\"socialWrapp__reviews\" key={review.id}>\r\n          <div className=\"socialWrapp__reviews-header\">\r\n            <Avatar style={{ marginRight: \"15px\" }} className={classes.large} />\r\n            <div>\r\n              <a href={review.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <h3>\r\n                  A review by {review.author}{\" \"}\r\n                  <span>\r\n                    <StarRateRoundedIcon style={{ fontSize: 20 }} />\r\n                    6.0\r\n                  </span>\r\n                </h3>\r\n              </a>\r\n              <span>\r\n                Written by <b>{review.author}</b> on 4 April 2017\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"socialWrapp__reviews-body\">\r\n            <p>\r\n              {`${review.content.slice(0, 300)}...`}{\" \"}\r\n              <a\r\n                href={review.url}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"socialWrapp__reviews-link\"\r\n              >\r\n                read the rest\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <h4>\r\n        <Link to=\"/allreview/\">Read All Reviews</Link>\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMedia;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\CardSocial\\CardSocialAll.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\MovieCardContainer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\PopupTrailer.tsx",["296"],"import React from \"react\";\r\nimport { VideoType } from \"../../Types/Types\";\r\nimport {CgClose} from 'react-icons/cg'\r\n \r\ntype StateType = {\r\n  playTrailer: boolean;\r\n};\r\n\r\ntype PropsType = {\r\n  videos: Array<VideoType>;\r\n  playState: StateType;\r\n  closePlay: () => void;\r\n};\r\n\r\nconst PopupTrailer = ({ videos, playState, closePlay }: PropsType) => {\r\n  const trailer = videos.filter((v) => v.type === \"Trailer\");\r\n  const key = trailer.find((t) => {\r\n   if (t.name.includes(\"Trailer\")) {\r\n      return t.key;\r\n    }\r\n  });\r\n\r\n  const width = window.innerWidth;\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          playState.playTrailer\r\n            ? \"popuptrailer popuptrailer--show\"\r\n            : \"popuptrailer\"\r\n        }\r\n      >\r\n        \r\n        <div className=\"popuptrailer__videobox \">\r\n        <div className=\"popuptrailer__header\">\r\n          <button onClick={closePlay} className=\"btn btn--close\">\r\n            <CgClose/>\r\n          </button>\r\n        </div>\r\n          <iframe\r\n            width=\"100%\"\r\n            height={width>900?'700':'500'}\r\n            src={`https://www.youtube.com/embed/${key?.key}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title='movie trailer'\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopupTrailer;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\CardPoster.tsx",["297","298","299","300","301","302"],"import React from \"react\";\r\n\r\nimport FormatListBulletedRoundedIcon from \"@material-ui/icons/FormatListBulletedRounded\";\r\nimport BookmarkRoundedIcon from \"@material-ui/icons/BookmarkRounded\";\r\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\r\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\r\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { CreditsType, GenresType, MovieDetailsType } from \"../../../Types/Types\";\r\nimport { crewStaff } from \"../../Helper/crewstaff\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  details: MovieDetailsType | null;\r\n  original_title: undefined | string;\r\n  release_date: undefined | string;\r\n  original_language: undefined | string;\r\n  genres: undefined | Array<GenresType>;\r\n  runtime: undefined | number;\r\n  popularity: undefined | number;\r\n  overview: undefined | string;\r\n  credits: CreditsType | null;\r\n  handaleplay:()=>void\r\n};\r\n\r\nconst CardPoster = (props: PropsType) => {\r\n  const crew: any = [];\r\n\r\n const voteAvarage = props.details?.vote_average?props.details.vote_average:'';\r\n\r\n\r\n  let votes = voteAvarage.toLocaleString().replace(\".\", \"\");\r\n  if (votes.length < 2) {\r\n    votes = votes + \"0\";\r\n  }\r\n  const voteNumber = parseInt(votes);\r\n\r\n  const trailColorLine=(value:number)=>{\r\n    if(value < 30){\r\n      return '#fd1818'\r\n    }else if(value > 30 && value < 70){\r\n      return '#ffff5d'\r\n    }else{\r\n      return '#50ff50de'\r\n    }\r\n  }\r\n\r\nconst percent = 60\r\n\r\n  if (props.credits?.crew) {\r\n    crewStaff(props.credits?.crew, \"Director\", crew);\r\n    crewStaff(props.credits?.crew, \"Writing\", crew);\r\n    crewStaff(props.credits?.crew, \"Producer\", crew);\r\n  }\r\n\r\n  //console.log(props.credits?.cast.filter(c=> c.known_for_department === \"Acting\"));\r\n  return (\r\n    <div\r\n      className=\"posterWrapp\"\r\n      style={{\r\n        background: `linear-gradient(to left, #7f7f7f9e, black), url(https://image.tmdb.org/t/p/w500/${props.details?.poster_path}) no-repeat`,\r\n      }}\r\n    >\r\n      <div className=\"posterWrapp__img\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500/${props.details?.poster_path}`}\r\n          alt=\"poster\"\r\n        />\r\n      </div>\r\n      <div className=\"posterWrapp__info\">\r\n        <div className=\"posterWrapp__info-heading\">\r\n          <h2>\r\n            {props.original_title}{\" \"}\r\n            <span>({props.release_date?.slice(0, 4)})</span>{\" \"}\r\n          </h2>\r\n          <p>\r\n            {props.release_date?.replaceAll(\"-\", \"/\")} (\r\n            {props.original_language?.toUpperCase()}){\" \"}\r\n            {props.genres?.map((g) => (\r\n              <span key={g.id}>{g.name}</span>\r\n            ))}{\" \"}\r\n            - {props.runtime ? `${Math.ceil(props.runtime / 60)} h` : \"\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"posterWrapp__info-actions\">\r\n          <ul className=\"posterWrapp__info-actions-list\">\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--score\"\r\n              >\r\n                <div>\r\n                  <CircularProgressbar\r\n                    value={voteNumber}\r\n                    text={`${voteNumber}%`}\r\n                    styles={buildStyles({\r\n                      //trail: { stroke: \"#fff\" },\r\n                      textColor: \"#fff\",\r\n                      textSize: \"3rem\",\r\n                      backgroundColor: \"#000\",\r\n                      trailColor: \"#3d543fba\",\r\n                      pathColor: trailColorLine(voteNumber)\r\n                    })}\r\n                  />\r\n                </div>\r\n                User Score\r\n              </a>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <FormatListBulletedRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to create and edit custom lists\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <FavoriteRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to add this movie to your favourite list\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <BookmarkRoundedIcon />\r\n              </a>\r\n              <div className=\"movieCrad__tolltip\">\r\n                Login to add this movie to your watchlist\r\n              </div>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"posterWrapp__info-actions-link posterWrapp__info-actions-link--styled\"\r\n              >\r\n                <StarRoundedIcon />\r\n              </a>\r\n              <p className=\"movieCrad__tolltip\">Login to rate this movie</p>\r\n            </li>\r\n            <li className=\"posterWrapp__info-actions-item\">\r\n              <button \r\n                className=\"btn btn--postertrailer\"\r\n                onClick={props.handaleplay}\r\n              >\r\n                <PlayArrowRoundedIcon /> Play Trailer\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"posterWrapp__info-overview\">\r\n          <p>{props.overview}</p>\r\n        </div>\r\n        <div className=\"posterWrapp__info-cast\">\r\n          <ul className=\"posterWrapp__info-cast-list\">\r\n            {crew.map((c: any) => (\r\n              <li className=\"posterWrapp__info-cast-item\" key={c.credit_id}>\r\n                <Link to={`/posterstaff/${c.id}`} className=\"posterWrapp__info-cast-link\">\r\n                  <p>{c.name}</p>\r\n                  <p>{c.job}</p>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPoster;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\PosterStaffPage.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCard.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffCardMovielist.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffHeader.tsx",["303","304","305","306","307","308","309","310"],"import React from \"react\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\n\r\nconst StaffHeader = () => {\r\n  return (\r\n    <div className=\"staffheader__wrap\">\r\n      <nav className=\"menuWrapp\">\r\n        <ul className=\"menuWrapp__list\">\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Overview <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>main</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>translations</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>changes</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Media <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n               <a href=\"#\" className='menuWrapp__drop-link'>Profiles</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Fandom <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n                <a href=\"#\" className='menuWrapp__drop-link'>discussions</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item\">\r\n            <span>\r\n              Share <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n               <a href=\"#\" className='menuWrapp__drop-link'>share link</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>facebook</a>\r\n                 <a href=\"#\" className='menuWrapp__drop-link'>twitter</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffHeader;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Poster\\StaffKnowFor.tsx",["311","312","313","314","315","316","317","318"],"import React, { useState } from \"react\";\r\nimport { filterData, filterDepartament } from \"../../Helper/filterData\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport {\r\n  AllMediaType,\r\n  CombineCreditsCrewType,\r\n  CombinedCreditsCastType,\r\n} from \"../../../Types/Types\";\r\nimport MovieInfoToolTip from \"../../Common/movieInfoToolTip\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\ntype PropsTypes = {\r\n  combineCrew: Array<CombineCreditsCrewType>;\r\n  combineCast: Array<CombinedCreditsCastType>;\r\n};\r\n\r\nconst StaffKnowFor: React.FC<PropsTypes> = ({ combineCrew, combineCast }) => {\r\n  const [showTip, setShowTip] = useState(\"0\");\r\n  const [selectWriting, setSelectWriting] = useState(false);\r\n  const [selectProd, setSelectProd] = useState(false);\r\n  const [selectActing, setSelectActing] = useState(false);\r\n  const [selectDirecting, setSelectDirecting] = useState(false);\r\n  const [clearAll, setClearAll] = useState(false);\r\n  const [movies, setMovies] = useState<any>([]);\r\n  const [tv, setTv] = useState<any>([]);\r\n  const [showMovieTv, setShowMovieTv] = useState(false);\r\n  const [showDep,setShowDep]=useState(true);\r\n  const [showMovTv,setShowMovTv]=useState(false);\r\n\r\n  const moviesCrew = [] as Array<AllMediaType>;\r\n  const tvShow = [] as Array<AllMediaType>;\r\n  const directing = [] as Array<AllMediaType>;\r\n  const production = [] as Array<AllMediaType>;\r\n  const writing = [] as Array<AllMediaType>;\r\n  const acting = [] as Array<AllMediaType>;\r\n\r\n  filterData(combineCast, acting, \"movie\");\r\n  filterData(combineCrew, moviesCrew, \"movie\");\r\n  filterData(combineCast, tvShow, \"tv\");\r\n  filterData(combineCrew, tvShow, \"tv\");\r\n\r\n  filterDepartament(combineCrew, directing, \"Directing\");\r\n  filterDepartament(combineCrew, production, \"Production\");\r\n  filterDepartament(combineCrew, writing, \"Writing\");\r\n\r\n  const allMedia = [\r\n    ...writing,\r\n    ...directing,\r\n    ...production,\r\n    ...acting,\r\n  ] as Array<AllMediaType>;\r\n\r\n  const nrOfMovies = allMedia.filter(\r\n    (item: any) => item.media_type === \"movie\"\r\n  );\r\n  const nrOfTv = allMedia.filter((item: any) => item.media_type === \"tv\");\r\n\r\n  const showToolTip = (id: string) => {\r\n    setShowTip(id);\r\n  };\r\n\r\n  const hideToolTip = (id: string) => {\r\n    setShowTip((id = \"\"));\r\n  };\r\n\r\n  const showWriting = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(false);\r\n    setSelectProd(true);\r\n    setSelectActing(true);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showProd = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(false);\r\n    setSelectActing(true);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showActing = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(true);\r\n    setSelectActing(false);\r\n    setSelectDirecting(true);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n  const showDirecting = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectWriting(true);\r\n    setSelectProd(true);\r\n    setSelectActing(true);\r\n    setSelectDirecting(false);\r\n    setClearAll(true);\r\n    setShowDep(true);\r\n  };\r\n\r\n  const clearAllFilter = () => {\r\n    setSelectWriting(false);\r\n    setSelectProd(false);\r\n    setSelectActing(false);\r\n    setSelectDirecting(false);\r\n    setClearAll(false);\r\n    setShowDep(true);\r\n    setShowMovTv(false)\r\n  };\r\n\r\n  const showMovies = (e: any) => {\r\n    e.preventDefault();\r\n    setShowMovieTv(true);\r\n    setShowDep(false);\r\n    setShowMovTv(true);\r\n    setClearAll(true);\r\n    setMovies(\r\n      allMedia.filter((movie: any) => {\r\n        if (movie.media_type === \"movie\") {\r\n          return movie;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const showTvShows = (e: any) => {\r\n    e.preventDefault();\r\n    setShowMovieTv(false);\r\n    setShowDep(false);\r\n    setShowMovTv(true);\r\n    setClearAll(true);\r\n    setTv(\r\n      allMedia.filter((tv: any) => {\r\n        if (tv.media_type === \"tv\") {\r\n          return tv;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  //  console.log(\"D\", directing);\r\n  // console.log(\"P\", production);\r\n  //  console.log(\"A\", acting);\r\n  //  console.log(\"W\", writing);\r\n  return (\r\n    <div className=\"carierwrapp\">\r\n      <div className=\"carierwrapp__header\">\r\n        <ul className=\"menuWrapp__list menuWrapp__list--carier\">\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            {clearAll ? (\r\n              <button className=\"btn btn--clearall\" onClick={clearAllFilter}>\r\n                Clear\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </li>\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            <span>\r\n              All <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showMovies}>\r\n                {allMedia.slice(0, 1).map((m: any) => (\r\n                  <span key={m.credit_id}>\r\n                    {m.media_type === \"movie\" ? \"Movies\" : \"Movies\"}{\" \"}\r\n                    {nrOfMovies.length}\r\n                  </span>\r\n                ))}\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showTvShows}\r\n              >\r\n                {tvShow.slice(0, 1).map((m) => (\r\n                  <span key={m.credit_id}>\r\n                    {`${m.media_type} Shows`} {nrOfTv.length}\r\n                  </span>\r\n                ))}\r\n              </a>\r\n            </div>\r\n          </li>\r\n          <li className=\"menuWrapp__item menuWrapp__item--carier\">\r\n            <span>\r\n              Departament <ArrowDropDownRoundedIcon />\r\n            </span>\r\n            <div className=\"menuWrapp__drop\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showDirecting}\r\n              >\r\n                {directing.slice(0, 1).map((d) => d.department)}{\" \"}\r\n                {directing.length}\r\n              </a>\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showProd}>\r\n                {production.slice(0, 1).map((p) => p.department)}{\" \"}\r\n                {production.length}\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"menuWrapp__drop-link\"\r\n                onClick={showWriting}\r\n              >\r\n                {writing.length === 0\r\n                  ? \"Writing\"\r\n                  : writing.slice(0, 1).map((p) => p.department)}{\" \"}\r\n                {writing.length}\r\n              </a>\r\n              <a href=\"#\" className=\"menuWrapp__drop-link\" onClick={showActing}>\r\n                {acting\r\n                  .slice(0, 1)\r\n                  .map((p) =>\r\n                    p.character === \"Himself\" ? \"Acting\" : \"Acting\"\r\n                  )}{\" \"}\r\n                {acting.length === 0 ? \"\" : acting.length}\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"carierwrapp__body\">\r\n       <div style={showMovTv?{display:'table',width:'100%'}:{display:'none'}}>\r\n        {showMovieTv ? (\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Directing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Directing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Writing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Writing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Production</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Acting</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {movies\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Directing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Directing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Writing</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Writing\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Production</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                            <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Table\r\n              size=\"medium\"\r\n              aria-label=\"a dense table\"\r\n              style={selectWriting ? { display: \"none\" } : { display: \"table\" }}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"tableheadcell\">\r\n                    <h3>Acting</h3>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tv\r\n                  .filter((item: any) => item.department === \"Production\")\r\n                  .map((movie: any) => (\r\n                    <TableRow key={movie.credit_id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <div className=\"movieinfo\">\r\n                          <span>\r\n                            {movie.release_date === undefined\r\n                              ? \"\"\r\n                              : movie.release_date.slice(0, 4)}\r\n                            {movie.first_air_date\r\n                              ? movie.first_air_date.slice(0, 4)\r\n                              : \"\"}\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className=\"movieinfo__dot\"\r\n                            onClick={() => showToolTip(movie.credit_id)}\r\n                            id={`${movie.id}`}\r\n                          ></span>{\" \"}\r\n                          {movie.title ? movie.title : movie.name}\r\n                          <span className=\"movieinfo__job\">{movie.episode_count>1?`(${movie.episode_count} episodes)`:`(${movie.episode_count} episode)`}{`... as ${movie.job}`}</span>\r\n                          <MovieInfoToolTip\r\n                            poster={movie.poster_path}\r\n                            desc={movie.overview}\r\n                            title={movie.title}\r\n                            name={movie.name}\r\n                            showTip={showTip}\r\n                            id={movie.credit_id}\r\n                            hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        </div>\r\n        {showDep?\r\n        <TableContainer component={Paper}>\r\n         <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectWriting ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Writing</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {writing.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectDirecting ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Directing</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {directing.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectProd ? { display: \"none\" } : { display: \"table\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Production</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {production.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? movie.release_date\r\n                          : \"---\"\r\n                          ? movie.release_date.slice(0, 4)\r\n                          : \"\"}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${movie.job}`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <Table\r\n            size=\"medium\"\r\n            aria-label=\"a dense table\"\r\n            style={selectActing ? { display: \"none\" } : { display: \"table\" }}\r\n          >{}\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"tableheadcell\">\r\n                  <h3>Acting</h3>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {acting.map((movie) => (\r\n                <TableRow key={movie.credit_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className=\"movieinfo\">\r\n                      <span>\r\n                        {movie.release_date === undefined\r\n                          ? \"---\"\r\n                          : movie.release_date.slice(0, 4)}\r\n                        {movie.first_air_date\r\n                          ? movie.first_air_date.slice(0, 4)\r\n                          : \"\"}\r\n                      </span>{\" \"}\r\n                      <span\r\n                        className=\"movieinfo__dot\"\r\n                        onClick={() => showToolTip(movie.credit_id)}\r\n                        id={`${movie.id}`}\r\n                      ></span>{\" \"}\r\n                      {movie.title ? movie.title : movie.name}\r\n                      <span className=\"movieinfo__job\">{`... as ${\r\n                        movie.character ? movie.character : \"Unknown\"\r\n                      }`}</span>\r\n                      <MovieInfoToolTip\r\n                        poster={movie.poster_path}\r\n                        desc={movie.overview}\r\n                        title={movie.title}\r\n                        name={movie.name}\r\n                        showTip={showTip}\r\n                        id={movie.credit_id}\r\n                        hideTooltip={() => hideToolTip(movie.credit_id)}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>:''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffKnowFor;\r\n","F:\\REACT\\movie-app\\src\\components\\MovieCard\\Recomandations\\CardRecomand.tsx",[],"F:\\REACT\\movie-app\\src\\components\\MovielistHeader\\MovielistHeader.tsx",[],"F:\\REACT\\movie-app\\src\\components\\NaigationBar\\NavBar.tsx",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {ImPlus} from 'react-icons/im'\r\n\r\nconst NavBar = () => {\r\n  const [showToolTip, setShowToolTip] = useState(false);\r\n  const [showlang, setShowlang] = useState(false);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [state, setState] = React.useState<{\r\n    age: string | number;\r\n    name: string;\r\n  }>({\r\n    age: \"\",\r\n    name: \"hai\",\r\n  });\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.name as keyof typeof state;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowToolTip(!showToolTip);\r\n  };\r\n  const showLang = () => {\r\n    setShowlang(!showlang);\r\n  };\r\n\r\n  const showHideNav = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  const screenWidth = window.innerWidth;\r\n\r\n  // console.log(screenWidth);\r\n  // console.log(showMenu);\r\n\r\n  return (\r\n    <div className=\"navbarwrapp\">\r\n      <div className=\"navbarwrapp__container\">\r\n        <div className=\"navbarwrapp__left\">\r\n          <button onClick={showHideNav} className=\"btn btn--mobile\">\r\n            <span></span>\r\n          </button>\r\n          <div className=\"navbarwrapp__left__logo\">\r\n            <Link to=\"/\">MOVIE-APP</Link>\r\n          </div>\r\n          {screenWidth < 665 && showMenu ? (\r\n            <nav className=\"navbarwrapp__left__navbar navbarwrapp__left__navbar--mobile\">\r\n              <ul className=\"navbarwrapp__left__list navbarwrapp__left__list--mobile\">\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    movies\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        now playing\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        upcoming\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    tv shows\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        airing today\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        on tv\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    people\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular people\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    more\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        discutions\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        leaderboard\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        suport\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n           <nav className=\"navbarwrapp__left__navbar \">\r\n              <ul className=\"navbarwrapp__left__list \">\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    movies\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        now playing\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        upcoming\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    tv shows\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        airing today\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        on tv\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        top rated\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    people\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        popular people\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li className=\"navbarwrapp__left__list__item\">\r\n                  <a href=\"#\" className=\"navbarwrapp__left__list__link\">\r\n                    more\r\n                  </a>\r\n                  <ul className=\"dropdown-navbar\">\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        discutions\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        leaderboard\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"dropdown-navbar__item\">\r\n                      <a href=\"#\" className=\"dropdown-navbar__link\">\r\n                        suport\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n        </div>\r\n        <div className=\"navbarwrapp__right\">\r\n          <ul className=\"navbarwrapp__right__list\">\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"navbarwrapp__right__list__link\"\r\n                onClick={handleClick}\r\n              >\r\n                <ImPlus />\r\n              </a>\r\n              {showToolTip ? (\r\n                <div className=\"navbarwrapp__right__tooltip\">\r\n                  <span>\r\n                    Can't find a movie or TV show?\r\n                    <br /> Login to create it.\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <button\r\n                className=\"btn btn--navbar\"\r\n                onClick={showLang}\r\n                style={showlang ? { background: \"white\", color: \"#000\" } : {}}\r\n              >\r\n                EN\r\n              </button>\r\n              {showlang ? (\r\n                <div className=\"navbarwrapp__right__tooltip navbarwrapp__right__tooltip--lang\">\r\n                  <h3>Language Preferences</h3>\r\n                  <FormControl variant=\"filled\" className=\"languageform\">\r\n                    <InputLabel htmlFor=\"filled-age-native-simple\">\r\n                      Language\r\n                    </InputLabel>\r\n                    <Select\r\n                      native\r\n                      value={state.age}\r\n                      onChange={handleChange}\r\n                      inputProps={{\r\n                        name: \"age\",\r\n                        id: \"filled-age-native-simple\",\r\n                      }}\r\n                    >\r\n                      <option aria-label=\"None\" value=\"\" />\r\n                      <option value={10}>Ten</option>\r\n                      <option value={20}>Twenty</option>\r\n                      <option value={30}>Thirty</option>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <a href=\"#\" className=\"navbarwrapp__right__list__link\">\r\n                <span>Login</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"navbarwrapp__right__list__item\">\r\n              <button className=\"btn btn--navbarsearch\">\r\n                <SearchOutlinedIcon\r\n                  style={{ color: \"#1acee0\", fontWeight: \"bold\" }}\r\n                />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\ResultsPage.tsx",[],"F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResults.tsx",[],"F:\\REACT\\movie-app\\src\\components\\SearchResultsPage\\SearchResultsItems.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\HomePageReducer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\MovieListReducer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Reducers\\PeopleReducer.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\HomePageSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\MovieSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\Selectors\\PeopleSelector.tsx",[],"F:\\REACT\\movie-app\\src\\components\\Store\\store.tsx",[],"F:\\REACT\\movie-app\\src\\Hoc\\withHeaderFooter.tsx",[],"F:\\REACT\\movie-app\\src\\Hoc\\withmovies.tsx",[],"F:\\REACT\\movie-app\\src\\index.tsx",[],"F:\\REACT\\movie-app\\src\\react-app-env.d.ts",[],"F:\\REACT\\movie-app\\src\\reportWebVitals.ts",[],"F:\\REACT\\movie-app\\src\\setupTests.ts",[],"F:\\REACT\\movie-app\\src\\Types\\Types.tsx",[],{"ruleId":"353","severity":1,"message":"354","line":2,"column":37,"nodeType":"355","messageId":"356","endLine":2,"endColumn":39},{"ruleId":"353","severity":1,"message":"357","line":4,"column":28,"nodeType":"355","messageId":"356","endLine":4,"endColumn":30},{"ruleId":"353","severity":1,"message":"357","line":13,"column":28,"nodeType":"355","messageId":"356","endLine":13,"endColumn":30},{"ruleId":"358","severity":1,"message":"359","line":2,"column":54,"nodeType":"360","messageId":"361","endLine":2,"endColumn":56},{"ruleId":"362","severity":1,"message":"363","line":16,"column":6,"nodeType":"364","endLine":16,"endColumn":8,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":4,"column":10,"nodeType":"368","messageId":"369","endLine":4,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":18,"column":6,"nodeType":"364","endLine":18,"endColumn":8,"suggestions":"370"},{"ruleId":"366","severity":1,"message":"371","line":13,"column":9,"nodeType":"368","messageId":"369","endLine":13,"endColumn":20},{"ruleId":"362","severity":1,"message":"372","line":22,"column":6,"nodeType":"364","endLine":22,"endColumn":8,"suggestions":"373"},{"ruleId":"366","severity":1,"message":"374","line":1,"column":16,"nodeType":"368","messageId":"369","endLine":1,"endColumn":25},{"ruleId":"353","severity":1,"message":"375","line":23,"column":25,"nodeType":"355","messageId":"356","endLine":23,"endColumn":27},{"ruleId":"366","severity":1,"message":"376","line":4,"column":37,"nodeType":"368","messageId":"369","endLine":4,"endColumn":46},{"ruleId":"377","severity":1,"message":"378","line":41,"column":15,"nodeType":"379","endLine":41,"endColumn":59},{"ruleId":"353","severity":1,"message":"380","line":33,"column":38,"nodeType":"355","messageId":"381","endLine":33,"endColumn":40},{"ruleId":"377","severity":1,"message":"378","line":51,"column":13,"nodeType":"379","endLine":51,"endColumn":61},{"ruleId":"377","severity":1,"message":"378","line":56,"column":13,"nodeType":"379","endLine":56,"endColumn":61},{"ruleId":"377","severity":1,"message":"378","line":61,"column":13,"nodeType":"379","endLine":61,"endColumn":61},{"ruleId":"377","severity":1,"message":"378","line":47,"column":13,"nodeType":"379","endLine":47,"endColumn":62},{"ruleId":"353","severity":1,"message":"382","line":17,"column":32,"nodeType":"355","messageId":"381","endLine":17,"endColumn":34},{"ruleId":"366","severity":1,"message":"383","line":49,"column":7,"nodeType":"368","messageId":"369","endLine":49,"endColumn":14},{"ruleId":"377","severity":1,"message":"378","line":89,"column":15,"nodeType":"379","endLine":92,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":111,"column":15,"nodeType":"379","endLine":114,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":122,"column":15,"nodeType":"379","endLine":125,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":133,"column":15,"nodeType":"379","endLine":136,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":144,"column":15,"nodeType":"379","endLine":147,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":14,"column":18,"nodeType":"379","endLine":14,"endColumn":63},{"ruleId":"377","severity":1,"message":"378","line":15,"column":18,"nodeType":"379","endLine":15,"endColumn":63},{"ruleId":"377","severity":1,"message":"378","line":16,"column":18,"nodeType":"379","endLine":16,"endColumn":63},{"ruleId":"377","severity":1,"message":"378","line":24,"column":16,"nodeType":"379","endLine":24,"endColumn":61},{"ruleId":"377","severity":1,"message":"378","line":32,"column":17,"nodeType":"379","endLine":32,"endColumn":62},{"ruleId":"377","severity":1,"message":"378","line":40,"column":16,"nodeType":"379","endLine":40,"endColumn":61},{"ruleId":"377","severity":1,"message":"378","line":41,"column":18,"nodeType":"379","endLine":41,"endColumn":63},{"ruleId":"377","severity":1,"message":"378","line":42,"column":18,"nodeType":"379","endLine":42,"endColumn":63},{"ruleId":"353","severity":1,"message":"380","line":126,"column":36,"nodeType":"355","messageId":"381","endLine":126,"endColumn":38},{"ruleId":"353","severity":1,"message":"380","line":141,"column":33,"nodeType":"355","messageId":"381","endLine":141,"endColumn":35},{"ruleId":"377","severity":1,"message":"378","line":170,"column":15,"nodeType":"379","endLine":170,"endColumn":81},{"ruleId":"377","severity":1,"message":"378","line":178,"column":15,"nodeType":"379","endLine":182,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":196,"column":15,"nodeType":"379","endLine":200,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":204,"column":15,"nodeType":"379","endLine":204,"endColumn":79},{"ruleId":"377","severity":1,"message":"378","line":208,"column":15,"nodeType":"379","endLine":212,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":218,"column":15,"nodeType":"379","endLine":218,"endColumn":81},{"ruleId":"377","severity":1,"message":"378","line":61,"column":19,"nodeType":"379","endLine":61,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":66,"column":23,"nodeType":"379","endLine":66,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":71,"column":23,"nodeType":"379","endLine":71,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":76,"column":23,"nodeType":"379","endLine":76,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":81,"column":23,"nodeType":"379","endLine":81,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":88,"column":19,"nodeType":"379","endLine":88,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":93,"column":23,"nodeType":"379","endLine":93,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":98,"column":23,"nodeType":"379","endLine":98,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":103,"column":23,"nodeType":"379","endLine":103,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":108,"column":23,"nodeType":"379","endLine":108,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":115,"column":19,"nodeType":"379","endLine":115,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":120,"column":23,"nodeType":"379","endLine":120,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":127,"column":19,"nodeType":"379","endLine":127,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":132,"column":23,"nodeType":"379","endLine":132,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":137,"column":23,"nodeType":"379","endLine":137,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":142,"column":23,"nodeType":"379","endLine":142,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":156,"column":19,"nodeType":"379","endLine":156,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":161,"column":23,"nodeType":"379","endLine":161,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":166,"column":23,"nodeType":"379","endLine":166,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":171,"column":23,"nodeType":"379","endLine":171,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":176,"column":23,"nodeType":"379","endLine":176,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":183,"column":19,"nodeType":"379","endLine":183,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":188,"column":23,"nodeType":"379","endLine":188,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":193,"column":23,"nodeType":"379","endLine":193,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":198,"column":23,"nodeType":"379","endLine":198,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":203,"column":23,"nodeType":"379","endLine":203,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":210,"column":19,"nodeType":"379","endLine":210,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":215,"column":23,"nodeType":"379","endLine":215,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":222,"column":19,"nodeType":"379","endLine":222,"endColumn":73},{"ruleId":"377","severity":1,"message":"378","line":227,"column":23,"nodeType":"379","endLine":227,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":232,"column":23,"nodeType":"379","endLine":232,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":237,"column":23,"nodeType":"379","endLine":237,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":249,"column":15,"nodeType":"379","endLine":253,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":303,"column":15,"nodeType":"379","endLine":303,"endColumn":70},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a return value from arrow function.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["384"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["385"],"'movieSearch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'searchMovie'. Either include them or remove the dependency array.",["386"],"'useEffect' is defined but never used.","Array.prototype.find() expects a return value from arrow function.","'VideoType' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.find() expects a value to be returned at the end of arrow function.","'percent' is assigned a value but never used.",{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"390","fix":"391"},"Update the dependencies array to be: [dispatch]",{"range":"392","text":"393"},{"range":"394","text":"393"},"Update the dependencies array to be: [dispatch, searchMovie]",{"range":"395","text":"396"},[652,654],"[dispatch]",[675,677],[743,745],"[dispatch, searchMovie]"]